{"version":3,"sources":["actions/changeMethod.js","actions/constants.js","actions/toggleModal.js","components/header/img/key.png","serviceWorker.js","reducers/modal.js","reducers/replace.js","reducers/wordbook.js","reducers/cShift.js","reducers/direction.js","reducers/input.js","reducers/method.js","reducers/foreignChars.js","reducers/output.js","reducers/caseformat.js","reducers/alphabet.js","reducers/keywordVigenere.js","reducers/affine.js","reducers/otpKey.js","reducers/skytale.js","reducers/rsa.js","reducers/alert.js","reducers/auth.js","reducers/presetsModal.js","reducers/analysisModal.js","reducers/analysisMethod.js","reducers/profile.js","reducers/presets.js","reducers/presetDescription.js","reducers/presetName.js","reducers/caseTransformChoice.js","reducers/substitutionAlphabet.js","reducers/trifid.js","reducers/playfair.js","reducers/nihilist.js","reducers/loadPresetModal.js","reducers/savePresetModal.js","reducers/index.js","store/index.js","components/main/encryption-props.js","components/main/helper/Math.js","actions/updateInput.js","actions/toggleDirection.js","actions/toggleAnalysisModal.js","actions/toggleLoadPresetModal.js","actions/toggleSavePresetModal.js","components/main/BlockInputOutput/Tooltips/SwapInputsTooltip.js","components/main/BlockInputOutput/Tooltips/LoadPresetTooltip.js","components/main/BlockInputOutput/Tooltips/SavePresetTooltip.js","components/main/BlockInputOutput/Tooltips/AddAnalysisMethodTooltip.js","components/main/BlockInputOutput/MenueButtons.js","components/main/helper/Resizeobserver.js","components/main/BlockInputOutput/analysis_methods_dropdowns/freqencyAnalysis/frequency-analysis-logic.js","components/main/BlockInputOutput/analysis_methods_dropdowns/freqencyAnalysis/Barchart.js","actions/toggleAnalysisMethod.js","components/main/BlockInputOutput/analysis_methods_dropdowns/RemoveAnalysisMethodButton.js","components/main/BlockInputOutput/Tooltips/AnalysisMethodsExplanationTooltip.js","components/main/BlockInputOutput/analysis_methods_dropdowns/freqencyAnalysis/data.js","components/main/BlockInputOutput/analysis_methods_dropdowns/freqencyAnalysis/FrequencyAnalysisStyles.js","components/main/BlockInputOutput/analysis_methods_dropdowns/freqencyAnalysis/index.js","components/main/BlockInputOutput/analysis_methods_dropdowns/indexOfCoincidence/IndexOfCoincidenceStyles.js","components/main/BlockInputOutput/analysis_methods_dropdowns/indexOfCoincidence/ioc-logic.js","components/main/BlockInputOutput/analysis_methods_dropdowns/indexOfCoincidence/index.js","components/main/BlockInputOutput/analysis_methods_dropdowns/chi-squared/letterFrequency.js","components/main/BlockInputOutput/analysis_methods_dropdowns/chi-squared/chi-logic.js","components/main/BlockInputOutput/analysis_methods_dropdowns/chi-squared/ChiSquaredStyles.js","components/main/BlockInputOutput/analysis_methods_dropdowns/chi-squared/index.js","components/main/BlockInputOutput/analysis_methods_dropdowns/index.js","components/main/BlockInputOutput/Input.js","components/main/BlockInputOutput/Output.js","components/main/BlockOther/BlockConnector.js","components/main/BlockCenter/img/caret.svg","components/main/BlockCenter/Head.js","actions/alphabet.js","components/main/BlockCenter/Alphabet.js","actions/toggleForeignChars.js","actions/toggleCase.js","components/main/BlockCenter/ForeignChars.js","actions/setCShift.js","components/encryption_methods/caesar/CaesarShift.js","components/encryption_methods/caesar/CaesarTransposition.js","actions/affine.js","components/encryption_methods/affine/AlphaBetaSelectors.js","actions/setKeywordVigenere.js","components/encryption_methods/vigenere/KeywordVigenere.js","actions/playfair.js","components/encryption_methods/playfair/KeywordPlayfair.js","components/encryption_methods/playfair/CharOptions.js","components/encryption_methods/playfair/PlayfairSquare.js","actions/replace.js","components/encryption_methods/replace/ReplaceKeys.js","actions/skytale.js","components/encryption_methods/skytale/RingLenght.js","components/encryption_methods/skytale/Rings.js","components/encryption_methods/atbash/AtbashTransposition.js","actions/setOtpKey.js","components/encryption_methods/onetimepad/otpGenerate.js","actions/rsa.js","components/encryption_methods/rsa/Primes.js","components/encryption_methods/vigenere/vigenereTransposition.js","actions/setCaseTransformChoice.js","components/encryption_methods/caseTransform/CaseTransform.js","actions/nihilist.js","components/encryption_methods/nihilist/KeywordNihilist.js","components/encryption_methods/nihilist/NihilistSquare.js","components/encryption_methods/nihilist/NihilistTransposition.js","actions/setSubstitutionAlphabet.js","components/encryption_methods/substitutionAlphabet/SubstitutionTable.js","actions/trifid.js","components/encryption_methods/trifid/TrifidSettings.js","components/encryption_methods/trifid/TrifidLayers.js","components/encryption_methods/trifid/TrifidGroups.js","components/main/BlockCenter/Settings.js","components/main/BlockCenter/MoreDetailsStyles.js","components/main/BlockCenter/EncryptionMethodsTexts.js","components/main/BlockCenter/MoreDetails.js","components/main/BlockCenter/index.js","components/timeline/Timeline.js","actions/presets.js","components/modals/save_&_load_presets/LoadPresetAuthenticated.js","components/modals/save_&_load_presets/LoadOrSavePresetUnauthenticated.js","components/modals/save_&_load_presets/LoadPreset.js","actions/setPresetDescription.js","actions/setPresetName.js","components/modals/save_&_load_presets/save_preset_settings.js","components/modals/save_&_load_presets/SavePresetAuthenticated.js","components/modals/save_&_load_presets/SavePreset.js","components/math/Math.js","components/encryption_methods/caesar/caesar-logic.js","components/encryption_methods/affine/affine-logic.js","components/encryption_methods/nihilist/nihilist-logic.js","components/encryption_methods/vigenere/vigenere-logic.js","components/encryption_methods/playfair/playfair-logic.js","components/encryption_methods/morse/morse-logic.js","components/encryption_methods/replace/replace-logic.js","components/encryption_methods/skytale/skytale-logic.js","components/encryption_methods/atbash/atbash-logic.js","components/encryption_methods/rsa/rsa-logic.js","components/encryption_methods/reverse/reverse-logic.js","components/encryption_methods/caseTransform/case-transform-logic.js","components/encryption_methods/substitutionAlphabet/substitution-logic.js","components/encryption_methods/trifid/trifid-logic.js","components/encryption_methods/onetimepad/otp-logic.js","actions/wordbook.js","actions/setOutput.js","components/modals/add_analysis_method/index.js","components/main/index.js","components/header/HeaderStyles.js","actions/alert.js","utils/setAuthToken.js","actions/authenticate.js","components/header/AuthLinksDesktop.js","components/header/GuestLinksDesktop.js","components/header/AuthLinksMobile.js","components/header/GuestLinksMobile.js","components/hideOnScroll/index.js","components/header/Header.js","components/footer/Footer.js","components/login_signup/signup/SignupStyles.js","components/alert/index.js","components/login_signup/Copyright.js","components/login_signup/SvgBottom.js","components/login_signup/SvgTop.js","components/login_signup/signup/index.js","components/login_signup/login/LoginStyles.js","components/login_signup/login/index.js","components/about/index.js","components/spinner/Spinner.js","components/userprofile/index.js","actions/profiles.js","components/routing/PrivateRoute.js","components/App.js","index.js","components/main/BlockCenter/EncryptionMethodsDetails.js"],"names":["changeMethod","method","type","CHANGE_METHOD","TOGGLE_MODAL","SET_TO_REPLACE_LETTER","SET_REPLACE_LETTER","SET_WORDBOOK","SET_CSHIFT","SET_RINGLENGTH","TOGGLE_DIRECTION","UPDATE_INPUT","TOGGLE_FOREIGN_CHARS","UPDATE_OUTPUT","TOGGLE_CASEFORMAT","SET_PRIME_1","SET_PRIME_2","UPDATE_ALPHABET","SET_KEYWORD_VIGENERE","SET_KEYWORD_PLAYFAIR","SET_AFFINE_ALPHA","SET_AFFINE_BETA","SET_OTP_KEY","PLAYSQUARE","SET_SKYTALE_LENGTH","SET_TIME_TO_CALCULATE","SET_RSA_PHI","SET_RSA_D","SET_RSA_N","SET_ALPHABET_ACTIVE","SET_RSA_E","TOGGLE_PRESETS_MODAL","TOGGLE_ANALYSIS_MODAL","TOGGLE_ANALYSIS_METHOD_FQ_INPUT","TOGGLE_ANALYSIS_METHOD_FQ_OUTPUT","TOGGLE_ANALYSIS_METHOD_IC_INPUT","TOGGLE_ANALYSIS_METHOD_IC_OUTPUT","TOGGLE_ANALYSIS_METHOD_CHI_INPUT","TOGGLE_ANALYSIS_METHOD_CHI_OUTPUT","SET_CASE_TRANSFORM_CHOICE","SET_KEYWORD_NIHILIST","SET_CIPHER_NIHILIST","SET_NIHILIST_SQUARE","SET_NIHILIST_RUNNING_KEY","SET_NIHILIST_PLAIN_NUMBERS","SET_SUBSTITUTION_ALPHABET","SET_TRIFID_KEY","SET_TRIFID_27TH_LETTER","SET_TRIFID_GROUP_SIZE","SET_TRIFID_LAYERS","SET_TRIFID_GROUPS","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","ADD_PRESET","PRESET_ERROR","LOAD_PRESETS","SET_PRESET_DESCRIPTION","SET_PRESET_NAME","DELETE_PRESET_ERROR","DELETE_PRESET_SUCCESS","TOGGLE_LOAD_PRESETS_MODAL","TOGGLE_SAVE_PRESETS_MODAL","DELETE_PROFILE","toggleModal","module","exports","Boolean","window","location","hostname","match","modal","state","action","initialState","toReplaceLetter","replaceLetter","replace","payload","wordbook","data","cShift","direction","input","foreignChars","chars","output","caseformat","alphabet","active","new_alphabet","keywordVigenere","affine_alpha","affine_beta","affine","Number","otpKey","length","ringLength","skytale","prime1","prime2","timeToCalculate","d","phi","n","e","rsa","isNaN","alert","filter","id","token","localStorage","getItem","isAuthenticated","loading","user","modalOpen","target","presetsModal","analysisModal","fq_input","fq_output","ic_output","ic_input","chi_input","chi_output","analysisMethod","profile","error","presets","presetDescription","description","presetName","caseTransformChoice","case_choice","a","b","c","f","g","h","i","j","k","l","m","o","p","q","r","s","t","u","v","w","x","y","z","substitutionAlphabet","newState","trifidKey","trifid27thLetter","trifidGroupSize","trifidLayers","trifidGroups","trifid","keywordPlayfair","playsquare","playfair","cipherNihilist","keywordNihilist","nihilistPlainNumbers","nihilistRunningKey","nihilistSquare","nihilist","loadPresetModal","savePresetModal","combineReducers","auth","setItem","removeItem","picture","preset","_id","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","encryptionProps","props","math","removeSigns","textinput","toLowerCase","char","indexOf","push","join","addSpaces","userinput","encrypted","arr","splice","addSigns","textoutput","element","correctCase","userInput","noSigns","caseCorrected","toUpperCase","autoresize","evt","el","style","height","computed","getComputedStyle","parseInt","getPropertyValue","scrollHeight","updateInput","toggleDirection","toggleAnalysisModal","toggleLoadPresetModal","toggleSavePresetModal","StyledTooltip","withStyles","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","Tooltip","SwapInputsTooltip","title","className","LoadPresetTooltip","SavePresetTooltip","AddAnalysisMethodTooltip","mapActionsToProps","connect","onClick","newDirection","swapInputOutput","useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","frequency","map","Array","fill","toString","index","letterCount","totalLetters","reduce","freq","BarChart","inputValue","svgRef","useRef","wrapperRef","svg","select","frequencyMax","xScale","scaleBand","domain","value","range","width","padding","d3","yScale","scaleLinear","colorScale","clamp","xAxis","axisBottom","ticks","call","yAxis","axisLeft","selectAll","attr","bandwidth","on","enter","append","text","transition","remove","toFixed","marginBottom","toggleAnalysisMethodFQInput","toggleAnalysisMethodFQOutput","toggleAnalysisMethodICInput","toggleAnalysisMethodICOutput","toggleAnalysisMethodCHIInput","toggleAnalysisMethodCHIOutput","mapActionToProps","menue","handleClick","Typography","Button","AnalysisMethodsExplanationTooltip","frequencies_per_language","english","german","finnish","french","spanish","swedish","languages","FrequencyAnalysisStyles","makeStyles","heading","fontWeight","fontWeightRegular","lineHeight","body","FrequencyAnalysis","selectedLanguage","setSelectedLanguage","panelStatus","changePanelStatus","split","classes","ExpansionPanel","square","onChange","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Barchart","htmlFor","language","key","IndexOfCoincidenceStyles","calcIndexOfCoincidence","cleanedInput","character","counts","ioc","count","probabilities","English","French","German","Italian","Portugese","Russian","Spanish","expandedStatus","changeExpandedStatus","languageProbability","adjustedIOC","tempProbability","Infinity","Object","keys","probability","diff","Math","abs","calcLanguageProbability","parseFloat","Esperanto","Swedish","chiSquaredCalculation","letters","undefined","expected","cleanInput","expectedCounts","lang","letterToSearch","ind","calcExpectedCount","observed","countLetters","singleChis","pow","total","num","difference","ChiSquaredStyles","root","paddingTop","display","fontfamily","textAlign","cursor","letterSpacing","marginLeft","borderRadius","option","label","result","borderTop","marginTop","setLanguage","indexOfCoincidenceMenue","frequencyAnalysisMenue","chiSquaredMenue","textareaRef","update","name","BlockConnector","sign","_extends","assign","arguments","source","prototype","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","points","_ref","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","onModalToggle","React","memo","EncryptionMethodsDetails","crack","updateAlphabet","alphabetActive","readOnly","toggleForeignChars","toggleCaseFormat","toggleCase","defaultValue","setCshift","calcShift","dataset","val","data-val","CaesarTransposition","genAlphabet","sort","Set","uuidv4","genShifted","shift","temp","PureComponent","setAffineAlpha","setAffineBeta","valuesAlpha","optionsAlpha","optionsArray","optionsBeta","setKeywordVigenere","setKeywordPlayfair","CharOptions","PlayfaireSquare","createVisualMatrix","parent","children","ID","onSetReplaceLetter","onSetToReplaceLetter","setRinglength","handleRingLengthChange","data-value","skewValue","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","Rings","planeNumber","ringNumber","firstCharacterStyle","transparencyValue","PI","rotateValue","heightChange","ringStyles","WebkitTransform","planeNum","indexOfCharacter","generatePlaneStyle","generateOneRingElement","skytaleLength","generateAllRingElements","generateAllRings","AtbashTransposition","reverse","colorArrow","Component","setOtpKey","Otp","genRandomKey","randomArr","inputLength","floor","random","bind","setPrime1","setPrime2","setRsaE","cleanPrime","rawInput","Fragment","href","VigenereTransposition","slice","ceil","out","counter","setCaseTransformChoice","options","borderBottom","setCaseTransform","setCipherNihilist","setKeywordNihilist","NihilistSquare","number","NihilistTransposition","inputToNumbers","plaintext","plainkey","newKey","setSubstitutionAlphabet","substitutionAlphabetValues","values","double","lastIndexOf","inputs","document","getElementsByClassName","classList","add","handleAlphabetChange","data-parent","maxLength","size","setTrifidKey","setTrifid27thLetter","setTrifidGroupSize","handleGroupSizeChange","handleKeywordChange","handleLetterChange","cleanInputLength","letter","SubstitutionTable","PlayfairSquare","ReplaceKeys","switchSettings","MoreDetailsStyles","link","explanatory","atbash","normal","linksrc","linkname","rot13","caesar","substitution","casetransform","vigenere","morse","otp","EncryptionMethodsTexts","BlockCenter","Timeline","viewportWidth","vw","next","previous","oldSlide","activeSlide","max","documentElement","clientWidth","innerWidth","slider","slickNext","slickPrev","prevProps","prevState","hasHideClass","contains","idx","timelineIdx","slickGoTo","settings","infinite","speed","slidesToShow","slidesToScroll","arrows","initialSlide","beforeChange","setState","timelineElements","year","getAttribute","item","generateTimelineElements","addPreset","formData","dispatch","config","headers","axios","post","res","msg","response","statusText","status","deletePreset","delete","console","setToReplaceLetter","setReplaceLetter","updateWidth","getDeviceWidth","handleResize","addEventListener","removeEventListener","presetTable","date","selected","caseFormat","log","handleLoadPreset","genTable","row","toggleSaveLoadPresetModals","toggleModalOnWrapperClick","to","setPresetDescription","setPresetName","general","save_preset_settings","playSquare","onSubmit","preventDefault","presetSettings","methodProperties","property","handleSavePreset","required","placeholder","transformCaseAndChars","rawOutput","includeChars","cleanOutput","restoreForeignChars","restoreCase","blankSpaces","caseSensitive","alphab","inputArr","restoredCaseArr","String","restoredForeignCharsArr","modInverse","transformToLowerCaseChars","saltInput","setCaseFormat","setAlphabet","setDirection","setWordbook","words","setAll","setUserInput","setSaltInput","setForeignChars","charIndex","alLength","readChar","decryptedChars","charLower","decryptedChar","readCharCrack","salt","includes","position","charIndexCrack","countCombinations","possibleCombinations","shiftV","highest","encrypt","handleCracked","findCombinations","allOutputs","textInput","createAllOutputs","word","checkIfSigns","alpha","beta","correctedInput","affineAlpha","affineBeta","setAlpha","setBeta","numberId","decrypt","inverseAlpha","indexChar","resultIndex","Nihilist","keyphrase","cipherWord","setCipherWord","getNihilistRunningKey","getNihilistPlainNumbers","polybiusSquare","getNumberForOne","num1","num2","squareArr","getNumbersText","array","getNumbers","numberArray","inputArray","cleanKeyArr","numbers","plainTextArray","numElem","transformNumbersToText","outputNumbers","subtractKeyFromPlaintext","keyword","setKeyPhrase","getSquare","createSaltArray","saltArray","alphabetFromCharacter","alphabetVig","encryptCharacterVigenere","saltLetter","decryptCharacterVigenere","vigalphabet","caseTransform","spaces","setKeyWord","textinputCleaned","Playfair","rowColumnEncrypt","charPair","newIndex","methodFinder","fiveElementPairs","pair","createPairsOfFive","fiveElementPairsReverse","columnArr","encryptedChar1","encryptedChar2","indexes","char1","char2","pairs","twoLetterPairs","cleanText","transformInput","newAlphabet","characters","ä","á","å","é","ñ","ö","ü","outputArray","lowerChar","find","trim","str1","str2","ignore","RegExp","setCase","setRingLength","calcSkytaleLength","transformText","inp","skytaleArr","encryptedText","skytaleRows","lastRowLength","skyArr","indexOne","restInput","indexTwo","flat","alphabetReverse","characterIndex","Rsa","prime_one","prime_two","bigInt","require","setE","t0","performance","now","gcd","compare","dezArr","charCodeAt","longNumber","encryptedDEZ","modPow","t1","round","calcPhi","calcD","calcN","decryptedDEZ","decryptedArr","decryptedLetters","fromCharCode","bigP1","bigP2","big1","minus","times","modInv","numberChecker","setPrimeOne","setPrimeTwo","calc","Reverse","formattedOutput","CaseTransform","lower","upper","wordsCapitalized","newWord","capitalize","wordsAlternate","alternating","wordsInverse","inverse","Substitute","sAlphabet","uInput","Trifid","groupSize","twentySeventhLetter","setGroupSize","setTwentySeventhLetterLetter","generateLayerElement","generateOneLayer","layer","threeLetters","generateAllLayers","genKey","layers","getRowAndColumn","layerRow","getEncodedNumber","layerindex","layerElement","rowCol","encodeLetters","generateGroup","groupNumber","encodedLettersArr","group","generateGroups","groups","transformToEncryptedGroup","encodedGroup","encodedNumbers","encodedNumbersClean","encodedNumbersArray","cleanLettersEncrypt","transformAllGroups","cleanGroups","allLayers","decrypted","generateDecryptionGroups","groupsDecodedNumbers","generateOneDecryptionGroup","groupsRow","cleanGroupsRow","groupsCol","cleanGroupsCol","cleanLettersDecrypt","encryptedKey","indexKey","setKey","fetch","json","setOutput","Modal","lazy","Main","setAlphabetActive","setTrifidLayers","setTrifidGroups","Caesar","setTimeToCalculate","setRsaPhi","setRsaD","setRsaN","Atbash","Affine","Vigenere","setPlaysquare","Morse","Replace","setNihilistSquare","setNihilistRunningKey","setNihilistPlainNumbers","Skytale","setSkytaleLength","fallback","HeaderStyles","MenuIcon","appBar","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","justifyContent","mixins","toolbar","content","flexGrow","contentShift","easeOut","enteringScreen","itemWrapper","itemWrapperRight","itemMobile","textDecoration","titleWrapper","setAlert","alertType","setTimeout","setAuthToken","defaults","common","loadUser","get","logout","variant","noWrap","GuestLinksDesktop","drawerOpen","setDrawer","List","ListItem","button","ListItemIcon","ListItemText","primary","GuestLinksMobile","HideElementOnScroll","setHide","handleScroll","top","pageYOffset","scrollTop","updateHeight","toggleDrawer","iconMenue","IconButton","aria-label","edge","CssBaseline","AppBar","onResize","rect","Toolbar","src","logo","alt","Drawer","anchor","open","paper","Divider","Footer","SignupStyles","flexDirection","borderColor","avatar","margin","palette","secondary","main","form","submit","alerts","Copyright","align","Date","getFullYear","SvgBottom","xmlns","version","preserveAspectRatio","x1","y1","x2","y2","offset","stopColor","stopOpacity","SvgTop","register","email","password","JSON","stringify","errors","updateFormdata","Container","component","Avatar","Grid","container","xs","TextField","fullWidth","autoComplete","FormControlLabel","control","Checkbox","justify","Box","mt","LoginStyles","login","About","rel","background","shapeRendering","stroke","stroke-width","strokeDasharray","stroke-linecap","transform","transformOrigin","attributeName","repeatCount","dur","keyTimes","getCurrentProfile","deleteCurrentProfile","Spinner","rest","render","App","basename","exact","path","Signup","Login","Profile","ReactDOM","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister","timeline","fullName","category"],"mappings":"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KACA,IACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,KACA,KAEFC,OAAQ,CACN,IACA,IACA,KACA,KACA,MACA,KACA,KACA,IACA,KACA,GACA,IACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IAEFC,QAAS,CACP,KACA,KACA,KACA,KACA,MACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,EACA,IACA,IACA,IACA,IACA,KAEFC,QAAS,CACP,KACA,KACA,KACA,IACA,MACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,MAISC,GAAY,CACvB,UACA,SACA,UACA,SACA,UACA,W,mBC/KWC,GAA0BC,cAAW,SAACzG,GAAD,MAAY,CAC5D0G,QAAS,CACPrG,SAAUL,EAAMM,WAAWC,QAAQ,IACnCoG,WAAY3G,EAAMM,WAAWsG,kBAC7BC,WAAY,GAEdC,KAAM,CACJzG,SAAU,YCkFC0G,OAtEf,YAAmD,IAAtB/D,EAAqB,EAArBA,WAAY2C,EAAS,EAATA,MAAS,EACApE,mBAAS,WADT,oBACzCyF,EADyC,KACvBC,EADuB,OAEP1F,oBAAS,GAFF,oBAEzC2F,EAFyC,KAE5BC,EAF4B,KAI1CpQ,EAAW,6BAA6BqQ,MAAM,IAC9CC,EAAUb,KAEhB,OACE,kBAACc,GAAA,EAAD,CACEC,QAAQ,EACRC,SAAU,kBAAML,GAAmBD,KAEnC,kBAACO,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACdrP,GAAG,kBAEH,kBAACuN,GAAA,EAAD,CAAYjF,UAAWyG,EAAQX,SAA/B,sBACA,kBAAC,GAAD,CAAmC5V,OAAQ,uBAC3C,kBAAC,GAAD,CACE6U,MAAOA,EACP7U,OAAQ,wBAGZ,kBAAC8W,GAAA,EAAD,KACE,yBAAKhH,UAAU,+BACZsG,EACC,kBAACW,GAAD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CA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAGFE,OAAQ,CACN,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,EACA,KACA,KACA,KACA,IACA,KACA,IACA,IACA,KACA,EACA,IACA,EACA,EACA,EACA,EACA,EACA,IACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAGFD,OAAQ,CACN,MACA,KACA,KACA,MACA,OACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,EACA,KACA,EACA,KACA,EACA,EACA,KACA,MACA,KACA,EACA,EACA,EACA,EACA,KACA,EACA,KACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,KACA,EACA,EACA,GAGFK,QAAS,CACP,MACA,KACA,KACA,KACA,MACA,IACA,KACA,GACA,KACA,IACA,EACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,GACA,IACA,IACA,GACA,IACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAGFe,UAAW,CACT,MACA,IACA,IACA,KACA,KACA,KACA,KACA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,EACA,KACA,KACA,KACA,KACA,IACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,EACA,IACA,EACA,EACA,EACA,EACA,EACA,EACA,IACA,IACA,EACA,EACA,EACA,IACA,EACA,EACA,EACA,EACA,IACA,EACA,EACA,IACA,EACA,GAGFC,QAAS,CACP,MACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,GACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,EACA,IACA,IACA,IACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IClVSC,GAAwB,SAACjC,EAAUrR,GAC9C,IAAMuT,EAAU,2KAiEhB,OA1BmB,WACjB,QAAiBC,IAAbnC,EAAwB,CAC1B,IAAIoC,EAtBkB,WAExB,IADA,IAAIC,EAAa,GACR9P,EAAI,EAAGA,EAAI5D,EAAMc,OAAQ8C,KACiB,IAA7C2P,EAAQlM,QAAQrH,EAAM4D,GAAGuD,gBAC3BuM,EAAWpM,KAAKtH,EAAM4D,GAAGuD,eAG7B,IAAIwM,EAAiB,GACrB,QAAiBH,IAAbnC,EAAwB,CAC1B,IAAIuC,EAAO/D,GAAUwB,GADK,uBAE1B,YAA2BkC,EAA3B,+CAAoC,CAAC,IAA5BM,EAA2B,QAC9BC,EAAMP,EAAQlM,QAAQwM,GAC1BF,EAAerM,KAAMoM,EAAW5S,OAAS,IAAO8S,EAAKE,KAJ7B,mFAO5B,OAAOH,EAOUI,GACXC,EAtCa,WACnB,IAAI7T,EAAS0L,MAAM0H,EAAQzS,QAAQgL,KAAK,GADf,uBAEzB,YAA2ByH,EAA3B,+CACE,IADmC,IAA5BM,EAA2B,QACzBjQ,EAAI,EAAGA,EAAI5D,EAAM0Q,MAAM,IAAI5P,OAAQ8C,IACtCiQ,IAAmB7T,EAAM0Q,MAAM,IAAI9M,GAAGuD,gBACxChH,EAAOoT,EAAQlM,QAAQwM,KAAoB,GALxB,kFASzB,OAAO1T,EA6BU8T,GACXC,EAAa,GAEblI,EAAQ,EALc,uBAM1B,YAAoBgI,EAApB,+CAA8B,CAAC,IAAtBjM,EAAqB,QAIiB,IAA3CiL,KAAKmB,IAAIpM,EAAU0L,EAASzH,GAAQ,IAChB,IAApByH,EAASzH,GAETkI,EAAW5M,KACT0L,KAAKmB,IAAIpM,EAAU0L,EAASzH,GAAQ,GAAKyH,EAASzH,IAE/CkI,EAAW5M,KAAK,GACvB0E,KAjBwB,kFAsB1B,OAAOkI,EAAW/H,QAAO,SAACiI,EAAOC,GAAR,OAAgBD,EAAQC,MAG9CC,IClEIC,GAAmBxE,cAAW,SAACzG,GAAD,MAAY,CACrDkL,KAAM,CACJtH,MAAO,QAET8C,QAAS,CACPrG,SAAUL,EAAMM,WAAWC,QAAQ,IACnCoG,WAAY3G,EAAMM,WAAWsG,kBAC7BC,WAAY,KAEdC,KAAM,CACJzG,SAAUL,EAAMM,WAAWC,QAAQ,IACnC4K,WAAY,kBACZC,QAAS,oBAEX/H,OAAQ,CACNgI,WAAY,6CACZzH,MAAO,cACP0H,UAAW,OACXC,OAAQ,UACRC,cAAe,QACfC,WAAY,MACZjL,OAAQ,sBACRqD,QAAS,MACT8C,WAAY,MACZ+E,aAAc,OACdrL,SAAU,OACVF,MAAO,QACPD,gBAAiB,WAEnByL,OAAQ,CACNxL,MAAO,UACPwG,WAAY,MACZtG,SAAU,QAEZuL,MAAO,CACLzL,MAAO,UACPE,SAAU,OACVmL,cAAe,QACfH,WAAY,6CACZ1E,WAAY,OAEdkF,OAAQ,CACNV,WAAY,OACZW,UAAW,uCACXC,UAAW,YCmCf,IAUe9K,gBAVS,SAAClL,GAAD,MAAY,CAClCW,MAAOX,EAAMW,MACbG,OAAQd,EAAMc,UAQDoK,EArEf,SAAoBxD,GAAQ,IAAD,EACsB8D,oBAAS,GAD/B,oBAClByH,EADkB,KACFC,EADE,OAEO1H,mBAAS,WAFhB,oBAElBwG,EAFkB,KAERiE,EAFQ,KAGnB3E,EAAU4D,KAIVvU,EAAwB,UAAhB+G,EAAMkI,MAAoBlI,EAAM/G,MAAQ+G,EAAM5G,OAE5D,OACE,kBAACyQ,GAAA,EAAD,CACEC,QAAQ,EACRC,SAAU,kBAAMyB,GAAsBD,KAEtC,kBAACvB,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACdrP,GAAG,kBAEH,kBAACuN,GAAA,EAAD,CAAYjF,UAAWyG,EAAQX,SAA/B,uBACA,kBAAC,GAAD,CACE5V,OAAQ,cACR6U,MAAOlI,EAAMkI,QAEf,kBAAC,GAAD,CACEA,MAAOlI,EAAMkI,MACb7U,OAAQ,iBAGZ,kBAAC8W,GAAA,EAAD,CAAuBhH,UAAWyG,EAAQP,MACvCkC,EACC,kBAAC,WAAD,KACE,2BAAOlB,QAAQ,kBAAkBlH,UAAWyG,EAAQuE,OAApD,2BAGA,4BACEhL,UAAWyG,EAAQhE,OACnBnC,QAAS,SAAClC,GAAD,OAASgN,EAAYhN,EAAIlG,OAAO4K,SAExC4F,OAAOC,KAAKhD,IAAWjE,KAAI,SAACyF,GAC3B,OACE,4BAAQC,IAAKD,EAAUnH,UAAWyG,EAAQsE,QACvC5D,OAKT,yBAAKnH,UAAWyG,EAAQwE,QAAxB,aACQ7B,GAAsBjC,EAAUrR,KAI1C,QCSKuK,gBAnBS,SAAClL,GAAD,MAAY,CAClCqD,SAAUrD,EAAMwD,eAAeH,SAC/BD,UAAWpD,EAAMwD,eAAeJ,UAChCF,SAAUlD,EAAMwD,eAAeN,SAC/BC,UAAWnD,EAAMwD,eAAeL,UAChCG,UAAWtD,EAAMwD,eAAeF,UAChCC,WAAYvD,EAAMwD,eAAeD,cAapB2H,EA1ES,SAACxD,GAKvB,IAAMwO,EACY,WAAhBxO,EAAMkI,OAAsBlI,EAAMtE,UAChC,yBAAKyH,UAAU,sBACb,kBAAC,GAAD,CAAoB+E,MAAOlI,EAAMkI,SAEjB,UAAhBlI,EAAMkI,OAAqBlI,EAAMrE,SACnC,yBAAKwH,UAAU,sBACb,kBAAC,GAAD,CAAoB+E,MAAOlI,EAAMkI,SAEjC,KAMAuG,EACY,WAAhBzO,EAAMkI,OAAsBlI,EAAMvE,UAChC,yBAAK0H,UAAU,sBACb,kBAAC,GAAD,CAAmB+E,MAAOlI,EAAMkI,MAAO3C,WAAYvF,EAAM5G,UAEzC,UAAhB4G,EAAMkI,OAAqBlI,EAAMxE,SACnC,yBAAK2H,UAAU,sBACb,kBAAC,GAAD,CAAmB+E,MAAOlI,EAAMkI,MAAO3C,WAAYvF,EAAM/G,SAEzD,KAMAyV,EACY,WAAhB1O,EAAMkI,OAAsBlI,EAAMnE,WAChC,yBAAKsH,UAAU,sBACb,kBAAC,GAAD,CAAY+E,MAAOlI,EAAMkI,SAET,UAAhBlI,EAAMkI,OAAqBlI,EAAMpE,UACnC,yBAAKuH,UAAU,sBACb,kBAAC,GAAD,CAAY+E,MAAOlI,EAAMkI,SAEzB,KAEN,OACE,yBAAK/E,UAAU,YACZsL,EACAD,EACAE,MCYDnL,GAAoB,CACxBvB,YAAaA,IAQAwB,gBAbS,SAAClL,GAAD,MAAY,CAClCW,MAAOX,EAAMW,SAYyBsK,GAAzBC,EAlED,SAAC,GAA4B,IAA1BxB,EAAyB,EAAzBA,YAAa/I,EAAY,EAAZA,MAItB0V,EAAclJ,mBAKpBxB,qBAAU,WACRhE,GAAKqB,WAAWqN,EAAYxK,YAQ9B,IAAMyK,EAAS,SAACrN,GACW,iDAArBA,EAAIlG,OAAO4K,MACbjE,EAAY,IAEZA,EAAYT,EAAIlG,OAAO4K,MAAMtN,QAAQ,iBAAkB,MAI3D,OACE,yBAAKwK,UAAU,SACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,gBAAf,SACA,kBAAC,GAAD,OAEF,yBAAKA,UAAU,wBACb,8BACEU,IAAK8K,EACLE,KAAK,YACL1L,UAAU,eACV8C,MAAOhN,EACPwK,QAAS,SAAClC,GACRqN,EAAOrN,GACPtB,GAAKqB,WAAWC,IAElBwI,SAAU,SAACxI,GACTqN,EAAOrN,GACPtB,GAAKqB,WAAWC,OAItB,kBAAC,GAAD,CAAiB2G,MAAO,QAASjP,MAAOA,QCR/BuK,gBARS,SAAClL,GAAD,MAAY,CAClCc,OAAQd,EAAMc,UAODoK,EA3CA,SAAC,GAAgB,IAAdpK,EAAa,EAAbA,OAIVuV,EAAclJ,mBASpB,OAJAxB,qBAAU,WACRhE,GAAKqB,WAAWqN,EAAYxK,YAI5B,yBAAKhB,UAAU,SACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,gBAAf,UACA,kBAAC,GAAD,OAEF,yBAAKA,UAAU,yBACb,8BACEU,IAAK8K,EACLxL,UAAU,gBACV0L,KAAK,SACL5I,MAAO7M,GAAkB,GACzB2Q,SAAU,SAACxI,GACTtB,GAAKqB,WAAWC,OAItB,kBAAC,GAAD,CAAiB2G,MAAO,SAAU9O,OAAQA,QC9BjC0V,GARQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACrB,yBAAK5L,UAAU,mBAAmB4L,ICJpC,SAASC,KAA2Q,OAA9PA,GAAWnD,OAAOoD,QAAU,SAAU5T,GAAU,IAAK,IAAIwB,EAAI,EAAGA,EAAIqS,UAAUnV,OAAQ8C,IAAK,CAAE,IAAIsS,EAASD,UAAUrS,GAAI,IAAK,IAAI0N,KAAO4E,EAActD,OAAOuD,UAAUC,eAAexI,KAAKsI,EAAQ5E,KAAQlP,EAAOkP,GAAO4E,EAAO5E,IAAY,OAAOlP,IAA2BiU,MAAMC,KAAML,WAEhT,SAASM,GAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkE5E,EAAK1N,EAAnExB,EAEzF,SAAuC8T,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2D5E,EAAK1N,EAA5DxB,EAAS,GAAQqU,EAAa7D,OAAOC,KAAKqD,GAAqB,IAAKtS,EAAI,EAAGA,EAAI6S,EAAW3V,OAAQ8C,IAAO0N,EAAMmF,EAAW7S,GAAQ4S,EAASnP,QAAQiK,IAAQ,IAAalP,EAAOkP,GAAO4E,EAAO5E,IAAQ,OAAOlP,EAFxMsU,CAA8BR,EAAQM,GAAuB,GAAI5D,OAAO+D,sBAAuB,CAAE,IAAIC,EAAmBhE,OAAO+D,sBAAsBT,GAAS,IAAKtS,EAAI,EAAGA,EAAIgT,EAAiB9V,OAAQ8C,IAAO0N,EAAMsF,EAAiBhT,GAAQ4S,EAASnP,QAAQiK,IAAQ,GAAkBsB,OAAOuD,UAAUU,qBAAqBjJ,KAAKsI,EAAQ5E,KAAgBlP,EAAOkP,GAAO4E,EAAO5E,IAAU,OAAOlP,EAMne,IAAI,GAEJ,IAAM0U,cAAc,UAAW,CAC7BC,OAAQ,6CAGN,GAAW,SAAkBC,GAC/B,IAAIzK,EAASyK,EAAKzK,OACdtC,EAAQ+M,EAAK/M,MACblD,EAAQwP,GAAyBS,EAAM,CAAC,SAAU,UAEtD,OAAO,IAAMF,cAAc,MAAOf,GAAS,CACzCnU,GAAI,QACJ8C,EAAG,MACHC,EAAG,MACHsS,QAAS,sBACTzO,MAAO,CACL0O,iBAAkB,2BAEpBC,SAAU,WACVvM,IAAK2B,GACJxF,GAAQkD,EAAQ,IAAM6M,cAAc,QAAS,KAAM7M,GAAS,KAAM,KAGnEmN,GAAa,IAAMC,YAAW,SAAUtQ,EAAO6D,GACjD,OAAO,IAAMkM,cAAc,GAAUf,GAAS,CAC5CxJ,OAAQ3B,GACP7D,O,IAEU,I,iBCoCTuD,GAAoB,CACxBgN,cAAe1Y,KACfoK,gBAAiBA,IAWJuB,gBAnBS,SAAClL,GAAD,MAAY,CAClC8C,UAAW9C,EAAMD,MACjBW,UAAWV,EAAMU,UACjB3F,OAAQiF,EAAMjF,UAgBwBkQ,GAAzBC,CAA4CgN,IAAMC,MAzEpD,SAACzQ,GACZ,OACE,yBAAKmD,UAAU,wBACb,4BACEA,UAAU,6BACVM,QAAS,kBAAMzD,EAAMuQ,kBAEpBG,KAAyB1Q,EAAM3M,QAAQsa,QACxC,kBAAC,GAAD,CAAOxK,UAAU,WAEnB,yBAAKA,UAAU,gCACb,4BACE8C,MAAM,UACNxC,QAAS,SAAClC,GACRvB,EAAMiC,gBAAgBV,EAAIlG,OAAO4K,QAEnC9C,UAAS,sCACa,YAApBnD,EAAMhH,WACN,0CAPJ,WAYA,4BACEiN,MAAM,UACNxC,QAAS,SAAClC,GACRvB,EAAMiC,gBAAgBV,EAAIlG,OAAO4K,QAEnC9C,UAAS,sCACa,YAApBnD,EAAMhH,WACN,0CAPJ,WAYC0X,KAAyB1Q,EAAM3M,QAAQsd,MACtC,4BACE1K,MAAM,QACNxC,QAAS,SAAClC,GACRvB,EAAMiC,gBAAgBV,EAAIlG,OAAO4K,QAEnC9C,UAAS,sCACa,UAApBnD,EAAMhH,WACN,0CAPJ,SAYE,WCtDC4X,GAAiB,SAACpX,GAAD,MAAmB,CAC/ClG,KAAMe,KACNmF,iBC2BI+J,GAAoB,CACxBqN,eAAgBA,IASHpN,gBAfS,SAAClL,GAAD,MAAY,CAClCgB,SAAUhB,EAAMgB,SAASA,SACzBuX,eAAgBvY,EAAMgB,SAASC,UAaOgK,GAAzBC,EAvCE,SAAC,GAAkD,IAAhDlK,EAA+C,EAA/CA,SAAUuX,EAAqC,EAArCA,eAAgBD,EAAqB,EAArBA,eAC5C,OACE,yBAAKzN,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,YACA,yBAAKA,UAAU,uCACb,8BACEA,UAAS,oCACP0N,EACI,oCACA,0CAEN5K,MAAO3M,EACPwX,UAAWD,EACX9G,SAAU,SAACxI,GACTqP,EAAerP,EAAIlG,OAAO4K,gBCfzB8K,GALY,SAAC5X,GAAD,MAAY,CACrC7F,KAAMU,KACNmF,UCGa6X,GALU,SAAC3X,GAAD,MAAiB,CACxC/F,KAAMY,KACNmF,eCoEIkK,I,OAAoB,CACxBwN,mBAAoBA,GACpBE,WAAYA,KASCzN,gBAfS,SAAClL,GAAD,MAAY,CAClCY,aAAcZ,EAAMY,gBAckBqK,GAAzBC,EAxEM,SAACxD,GACpB,OACE,yBAAKmD,UAAU,iCACb,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,yEAAf,QAGA,yBAAKA,UAAU,mFACb,4BACE+N,aAAclR,EAAM3G,WACpB0Q,SAAU,SAACxI,GACTvB,EAAMiR,WAAW1P,EAAIlG,OAAO4K,QAE9B9C,UAAU,2DAEV,4BAAQ8C,MAAM,YAAd,iBACA,4BAAQA,MAAM,UAAd,kBAIN,yBAAK9C,UAAU,2CACb,yBAAKA,UAAU,yEAAf,iBAGA,yBAAKA,UAAU,mFACb,4BACEA,UACyB,YAAvBnD,EAAM9G,aACF,sCACA,gBAENuK,QAAS,SAAClC,GACRvB,EAAM+Q,mBAAmBxP,EAAIlG,OAAO4K,QAEtCA,MAAM,WATR,WAaA,4BACE9C,UACyB,YAAvBnD,EAAM9G,aACF,gBACA,sCAENuK,QAAS,SAAClC,GACRvB,EAAM+Q,mBAAmBxP,EAAIlG,OAAO4K,QAEtCA,MAAM,UATR,gBC/CGkL,GAAY,SAACpY,GAAD,MAAa,CACpCzF,KAAMM,IACNmF,WC0DIwK,GAAoB,CACxB4N,UAAWA,IAOEX,OAAMC,KACnBjN,aAbsB,SAAClL,GAAD,MAAY,CAClCS,OAAQT,EAAMS,UAYWwK,GAAzBC,EAlEkB,SAACxD,GAMnB,IAAMoR,EAAY,SAAC7P,GACjB,IAAIlO,EAASkO,EAAIlG,OAAOgW,QAAQC,IACjB,MAAXje,EACE2M,EAAMjH,OAAS,EACjBiH,EAAMmR,UAAU,IAEhBnR,EAAMmR,UAAUnR,EAAMjH,OAAS,GAEb,MAAX1F,IACL2M,EAAMjH,OAAS,GACjBiH,EAAMmR,UAAU,GAEhBnR,EAAMmR,UAAUnR,EAAMjH,OAAS,KAKrC,OACE,yBAAKoK,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,SACA,yBAAKA,UAAU,uCACb,yBACEoO,WAAS,IACTpO,UAAU,qCACVM,QAAS,SAAClC,GACR6P,EAAU7P,KAJd,KASA,yBAAK4B,UAAU,sCACZnD,EAAMjH,QAET,yBACEwY,WAAS,IACTpO,UAAU,qCACVM,QAAS,SAAClC,GAAD,OAAS6P,EAAU7P,KAH9B,Y,UCxCJiQ,G,8MAMJC,YAAc,WACZ,GAAmC,IAA/B,EAAKzR,MAAM1G,SAASS,OAAxB,CACA,IAAIT,EAAW,EAAK0G,MAAM1G,SAAS8G,cAAcuJ,MAAM,IAAI+H,OAC3DpY,EAAQ,YAAO,IAAIqY,IAAIrY,IACvB,IAAIF,EAAS,GAJK,uBAKlB,YAAoBE,EAApB,+CAA8B,CAAC,IAAtB0H,EAAqB,QAC5B5H,EAAOmH,KACL,yBACE4C,UAC4B,MAA1BnC,EAAQZ,cACJ,yDACA,0BAENmK,IAAKqH,gBAEL,6BAAM5Q,GACN,yBAAKmC,UAAqC,MAA1BnC,EAAQZ,cAAwB,GAAK,SAArD,aAhBY,kFAoBlB,OAAOhH,I,EAMTyY,WAAa,SAACC,GACZ,GAAmC,IAA/B,EAAK9R,MAAM1G,SAASS,OAAxB,CACA,IAAIT,EAAW,EAAK0G,MAAM1G,SAAS8G,cAAcuJ,MAAM,IAAI+H,OAC3DpY,EAAQ,YAAO,IAAIqY,IAAIrY,IACvB,IAAK,IAAIuD,EAAI,EAAGA,EAAIiV,EAAOjV,IAAK,CAC9B,IAAIkV,EAAOzY,EAASwY,QACpBxY,EAASiH,KAAKwR,GAGhB,IADA,IAAI3Y,EAAS,GACJyD,EAAI,EAAGA,EAAIvD,EAASS,OAAQ8C,IACnCzD,EAAOmH,KACL,yBACE4C,UACgC,MAA9B7J,EAASuD,GAAGuD,cACR,yDACA,0BAENmK,IAAKqH,gBAEL,yBAAKzO,UAAyC,MAA9B7J,EAASuD,GAAGuD,cAAwB,GAAK,SAAzD,UAGA,6BAAM9G,EAASuD,MAIrB,OAAOzD,I,0EAIP,OACE,yBAAK+J,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,+BAGA,yBAAKA,UAAU,6EACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,0BAA0BoM,KAAKkC,eAC9C,yBAAKtO,UAAU,iCACZoM,KAAKsC,WAAWtC,KAAKvP,MAAMjH,WAIlC,uBAAGoK,UAAU,iCAAb,6CAC4C,oCAD5C,mB,GA5EwBqN,IAAMwB,eA6FzBxO,gBARS,SAAClL,GAAD,MAAY,CAClCS,OAAQT,EAAMS,UAODyK,CAAyBgO,IChG3BS,GAAiB,SAACvY,GAAD,MAAmB,CAC/CpG,KAAMkB,IACNkF,iBAGWwY,GAAgB,SAACvY,GAAD,MAAkB,CAC7CrG,KAAMmB,IACNkF,gBCwEI4J,GAAoB,CACxB0O,eAAgBA,GAChBC,cAAeA,IAUF1O,gBAjBS,SAAClL,GAAD,MAAY,CAClCoB,aAAcpB,EAAMsB,OAAOF,aAC3BC,YAAarB,EAAMsB,OAAOD,eAeY4J,GAAzBC,EAtFY,SAACxD,GA+B1B,OACE,yBAAKmD,UAAU,iCACb,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,sHAAf,UAGA,yBAAKA,UAAU,mFACb,4BACE8C,MAAOjG,EAAMtG,aACbyJ,UAAU,sDACV4G,SAAU,SAACxI,GACTvB,EAAMiS,eAAe1Q,EAAIlG,OAAO4K,SAvBvB,WACnB,IAAIkM,EAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAQ1D,OAPAA,EAAcA,EAAYtN,KAAI,SAACoB,GAC7B,OACE,4BAAQA,MAAOA,EAAOsE,IAAG,sBAAiBtE,IACvCA,MAqBEmM,MAIP,yBAAKjP,UAAU,2CACb,yBAAKA,UAAU,sHAAf,UAGA,yBAAKA,UAAU,mFACb,4BACE8C,MAAOjG,EAAMrG,YACbwJ,UAAU,0BACV4G,SAAU,SAACxI,GACTvB,EAAMkS,cAAc3Q,EAAIlG,OAAO4K,SAtDvB,WAElB,IADA,IAAMoM,EAAe,GACZxV,EAAI,EAAGA,GAAK,GAAIA,IACvBwV,EAAa9R,KACX,4BAAQ0F,MAAOpJ,EAAG0N,IAAG,qBAAgB1N,IAClCA,IAIP,OAAOwV,EAgDEC,UC7DEC,GALY,SAAC9Y,GAAD,MAAsB,CAC/CnG,KAAMgB,IACNmF,oBC0BI8J,GAAoB,CACxBgP,mBAAoBA,IAQP/O,gBAbS,SAAClL,GAAD,MAAY,CAClCmB,gBAAiBnB,EAAMmB,mBAYe8J,GAAzBC,EAhCS,SAAC,GAA6C,IAA3C/J,EAA0C,EAA1CA,gBAAiB8Y,EAAyB,EAAzBA,mBAC1C,OACE,yBAAKpP,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,WACA,yBAAKA,UAAU,uCACb,8BACEA,UAAU,4BACV+N,aAAczX,EACdsQ,SAAU,SAACxI,GACTgR,EAAmBhR,EAAIlG,OAAO4K,MAAM7F,wBCfrCoS,GAAqB,SAAClU,GAAD,MAAsB,CACtDhL,KAAMiB,IACN+J,oBC2BIiF,GAAoB,CACxBiP,mBAAoBA,IAQPhP,gBAbS,SAAClL,GAAD,MAAY,CAClCgG,gBAAiBhG,EAAMkG,SAASF,mBAYMiF,GAAzBC,EAjCS,SAAC,GAA6C,IAA3ClF,EAA0C,EAA1CA,gBAAiBkU,EAAyB,EAAzBA,mBAC1C,OACE,yBAAKrP,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,WACA,yBAAKA,UAAU,uCACb,8BACE+N,aAAc5S,EACdyL,SAAU,SAACxI,GACTiR,EAAmBjR,EAAIlG,OAAO4K,MAAM7F,gBAEtC+C,UAAU,+BAGd,yBAAKtI,GAAG,gBCID4X,GAvBK,WAClB,OACE,yBAAKtP,UAAU,iCACb,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,yEAAf,uBAGA,yBAAKA,UAAU,mFACb,yBAAKA,UAAU,sCAAf,OAGJ,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,yEAAf,uBAGA,yBAAKA,UAAU,mFACb,yBAAKA,UAAU,sCAAf,SCVJuP,I,qNACJC,mBAAqB,WAGnB,IAFA,IAAIC,EAAS,GACTC,EAAW,GACNhW,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIiW,EAAK,QAAUjW,EACnBgW,EAAStS,KACP,yBAAKgK,IAAKqH,eAAU/W,GAAIiY,EAAI3P,UAAU,4BACnC,EAAKnD,MAAMzB,WAAW1B,KAS7B,OALA+V,EAAOrS,KACL,yBAAK4C,UAAU,kBAAkBoH,IAAKqH,gBACnCiB,IAGED,G,0EAIP,OACE,yBAAKzP,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,mBACA,yBAAKA,UAAU,uCACZoM,KAAKoD,sBAER,uBAAGxP,UAAU,iCAAb,4V,GA5BoBqN,IAAMwB,gBAiDrBxO,gBARS,SAAClL,GAAD,MAAY,CAClCiG,WAAYjG,EAAMkG,SAASD,cAOdiF,CAAyBkP,ICvD3Bja,GAAkB,SAACA,GAAD,MAAsB,CACnDnF,KAAMG,IACNmF,QAAS,CACPH,qBAISC,GAAgB,SAACA,GAAD,MAAoB,CAC/CpF,KAAMI,IACNkF,QAAS,CACPF,mBCmCE6K,GAAoB,CACxBwP,mBAAoBra,GACpBsa,qBAAsBva,IAQT+K,gBAfS,SAAClL,GAAD,MAAY,CAClCG,gBAAiBH,EAAMK,QAAQF,gBAC/BC,cAAeJ,EAAMK,QAAQD,iBAaS6K,GAAzBC,EAlDC,SAACxD,GACf,OACE,yBAAKmD,UAAU,iCACb,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,yEAAf,WAGA,yBAAKA,UAAU,mFACb,8BACE+N,aAAclR,EAAMvH,gBACpBsR,SAAU,SAACxI,GACTvB,EAAMgT,qBAAqBzR,EAAIlG,OAAO4K,QAExC9C,UAAU,kEAIhB,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,yEAAf,gBAGA,yBAAKA,UAAU,mFACb,8BACE+N,aAAclR,EAAMtH,cACpBqR,SAAU,SAACxI,GACTvB,EAAM+S,mBAAmBxR,EAAIlG,OAAO4K,QAEtC9C,UAAU,sEC3BT8P,GAAgB,SAACjZ,GAAD,MAAiB,CAC5C1G,KAAMO,IACNmG,eCoDIuJ,GAAoB,CACxB0P,cAAeA,IAQFzP,gBAbS,SAAClL,GAAD,MAAY,CAClC0B,WAAY1B,EAAM2B,QAAQD,cAYYuJ,GAAzBC,EAjEI,SAACxD,GAIlB,IAAMkT,EAAyB,SAAC3R,GAEhB,MADFA,EAAIlG,OAAOgW,QAAQpL,MAEzBjG,EAAMhG,WAAa,EACrBgG,EAAMiT,cAAc,IAEpBjT,EAAMiT,cAAcjT,EAAMhG,WAAa,GAGrCgG,EAAMhG,WAAa,GACrBgG,EAAMiT,cAAc,GAEpBjT,EAAMiT,cAAcjT,EAAMhG,WAAa,IAI7C,OACE,yBAAKmJ,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,iBACA,yBAAKA,UAAU,uCACb,yBACEgQ,aAAW,IACXhQ,UAAU,qCACVM,QAAS,SAAClC,GACR2R,EAAuB3R,KAJ3B,KASA,yBAAK4B,UAAU,sCACZnD,EAAMhG,YAET,yBACEmZ,aAAW,IACXhQ,UAAU,qCACVM,QAAS,SAAClC,GACR2R,EAAuB3R,KAJ3B,WClCJ6R,I,OAAY,CAChBC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,EACHC,EAAG,EACHC,EAAG,IACHC,EAAG,EACHC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAGAC,G,gMASeC,EAAa7J,EAAW8J,GACzC,IAAIC,EAAsB,GACN,IAAhBF,GAAoC,IAAfC,IACvBC,EAAsB,WAIxB,IAAIC,EAAqBhK,EAA4B,GAAhB,cAMjCtQ,EAAI,GAAK4R,KAAK2I,IAAM,IAAMrF,KAAKvP,MAAMhG,WAAa,KAAO,EAAI,EAG7D6a,EACF,IAAMtF,KAAKvP,MAAMhG,WACF,IAAdwa,EAAqBjF,KAAKvP,MAAMhG,WACjC,IAAMuV,KAAKvP,MAAMhG,WAEf8a,EAAgB,GAAKvF,KAAKvP,MAAMhG,WAAcwa,EAC9CO,EAAa,CACfC,gBAAgB,WAAD,OAAaH,EAAb,2BAA2Cxa,EAA3C,0BAA8Dya,EAA9D,qBACb1B,GAAU7D,KAAKvP,MAAMhG,YADR,QAGfyI,gBAC0B,KAAxBiS,EAA6BA,EAAsBC,GAGvD,OADApF,KAAK0F,WACEF,I,6CAMcG,EAAkBvK,EAAW8J,GAUlD,OARE,yBACElK,IAAKqH,eACLzO,UAAU,wBACV1B,MAAO8N,KAAK4F,mBAAmBD,EAAkBvK,EAAW8J,IAE3D9J,K,8CASiB8J,GAEtB,IADA,IAAI7B,EAAS,GACJ/V,EAAI,EAAGA,EAAI0S,KAAKvP,MAAMhG,WAAY6C,IAAK,CAG9C,IAAI5D,EAAQsW,KAAKvP,MAAM/G,MAAM0Q,MAAM,KAAKnJ,KAAK,IAC7CoS,EAAOrS,KACLgP,KAAK6F,uBACHvY,EACA5D,EAAM4D,EAAI4X,EAAalF,KAAKvP,MAAMhG,YAClCya,IAIN,OAAO7B,I,yCAQP,IADA,IAAIA,EAAS,GACJ/V,EAAI,EAAGA,EAAI0S,KAAKvP,MAAMqV,cAAexY,IAAK,CACjD,IAAI4X,EAAa5X,EACjB+V,EAAOrS,KACL,yBAAKgK,IAAK1N,EAAI,OAAQsG,UAAU,wBAC7BoM,KAAK+F,wBAAwBb,KAIpC,OAAO7B,I,+BAGP,OACE,yBAAKzP,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,WACA,yBAAKA,UAAU,iGACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,4BACV1B,MAAO,CAAEC,OAAO,GAAD,OAAgC,GAA3B6N,KAAKvP,MAAMqV,cAAhB,QAEd9F,KAAKgG,qBAGV,uBAAGpS,UAAU,iCAAb,8FAE4B,qDAF5B,MAE6D,IAC3D,2DAHF,iIAME,0BAAMA,UAAU,sCAAhB,e,GAjHMqN,IAAMwB,eAsIXxO,gBAZS,SAAClL,GAAD,MAAY,CAClC0B,WAAY1B,EAAM2B,QAAQD,WAC1Bqb,cAAe/c,EAAM2B,QAAQF,OAC7Bd,MAAOX,EAAMW,SASAuK,CAAyB+Q,IC9JlCiB,G,8MAIJ/D,YAAc,SAACgE,GACb,IAAIhU,EAAQ,CAAEiB,MAAO,SAEjBpJ,EAAW,EAAK0G,MAAM1G,SAAS8G,cAAcuJ,MAAM,IAAI+H,OAE3DpY,EAAWmc,EACP,YAAI,IAAI9D,IAAIrY,IAAWmc,UADT,YAEV,IAAI9D,IAAIrY,IAEhB,IAAIF,EAAS,GATY,uBAWzB,YAAoBE,EAApB,+CAA8B,CAAC,IAAtB0H,EAAqB,QACxB0U,EACwB,MAA1B1U,EAAQZ,eAAmD,MAA1BY,EAAQZ,cACrC,QACA,2BAENhH,EAAOmH,KACL,yBACE4C,UAAU,0BACVoH,IAAKqH,eACLnQ,MAC4B,MAA1BT,EAAQZ,eAAmD,MAA1BY,EAAQZ,cACrCqB,EACA,CAAEiB,MAAO,4BAGf,yBAAKS,UAAWsS,EAAU,QAAU,GAAIhU,MAAO,CAAEiB,MAAOgT,IACrDD,EAAU,SAAMzU,GAEnB,yBAAKmC,UAAWsS,EAAU,GAAK,QAAShU,MAAO,CAAEiB,MAAOgT,IACrDD,EAAUzU,EAAU,aA/BJ,kFAoCzB,OAAO5H,G,0EAIP,OACE,yBAAK+J,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,+BAGA,yBAAKA,UAAU,6EACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,0BACZoM,KAAKkC,aAAY,IAEpB,yBAAKtO,UAAU,iCACZoM,KAAKkC,aAAY,OAK1B,uBAAGtO,UAAU,iCAAb,6T,GA7D0BqN,IAAMmF,WA6EzBnS,iBAAUgS,IC3EVI,GALG,SAAC9b,GAAD,MAAa,CAC7BxG,KAAMoB,IACNoF,WCMI+b,I,mBACJ,WAAY7V,GAAQ,IAAD,+BACjB,8CAAMA,KAeR8V,aAAe,WAIb,IAHA,IAAIC,EAAY,GACZvJ,EAAU,EAAKxM,MAAM1G,SAASqQ,MAAM,IACpC1Q,EAAQ,GACH4D,EAAI,EAAGA,EAAI,EAAKmD,MAAM/G,MAAMc,OAAQ8C,IACvC,EAAKmD,MAAM1G,SAASgH,SAAiC,IAAzB,EAAKN,MAAM/G,MAAM4D,KAC/C5D,EAAMsH,KAAK,EAAKP,MAAM/G,MAAM4D,IAIhC,IADA,IAAImZ,EAAc/c,EAAMc,OACf8C,EAAI,EAAGA,EAAImZ,EAAanZ,IAC/BkZ,EAAUxV,KAAKiM,EAAQP,KAAKgK,MAAsB,GAAhBhK,KAAKiK,YAEzC,OAAOH,EAAUvV,KAAK,KA3BtB,EAAKsV,aAAe,EAAKA,aAAaK,KAAlB,iBAFH,E,mFASjB5G,KAAKvP,MAAM4V,UAAUrG,KAAKuG,kB,+BAuBlB,IAAD,OACP,OACE,yBAAK3S,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,mCAAf,uBAGA,yBAAKA,UAAU,iGACb,yBAAKA,UAAU,oCACZoM,KAAKvP,MAAMlG,QAEd,4BACEe,GAAG,WACHsI,UAAU,4EACVM,QAAS,WACP,EAAKzD,MAAM4V,UAAU,EAAKE,kBAJ9B,2BASA,uBAAG3S,UAAU,iCAAb,+L,GArDMqN,IAAMwB,gBAuElBzO,GAAoB,CACxBqS,UAAWA,IAUEpS,gBAjBS,SAAClL,GAAD,MAAY,CAClCwB,OAAQxB,EAAMwB,OACdR,SAAUhB,EAAMgB,SAASA,SACzBL,MAAOX,EAAMW,SAcyBsK,GAAzBC,CAA4CqS,IClF9CO,GAAY,SAAClc,GAAD,MAAa,CACpC5G,KAAMa,IACN+F,WAGWmc,GAAY,SAAClc,GAAD,MAAa,CACpC7G,KAAMc,IACN+F,WAQWmc,GAAU,SAAC9b,GAAD,MAAQ,CAC7BlH,KAAM4B,IACNsF,MCsKI+I,GAAoB,CACxB6S,aACAC,aACAC,YAgBa9F,OAAMC,KAAKjN,aA7BF,SAAClL,GAAD,MAAY,CAClC4B,OAAQ5B,EAAMmC,IAAIP,OAClBC,OAAQ7B,EAAMmC,IAAIN,OAClBC,gBAAiB9B,EAAMmC,IAAIL,gBAC3BC,EAAG/B,EAAMmC,IAAIJ,EACbC,IAAKhC,EAAMmC,IAAIH,IACfC,EAAGjC,EAAMmC,IAAIF,EACbC,EAAGlC,EAAMmC,IAAID,KAsBoC+I,GAAzBC,EA7MX,SAACxD,GAId,IAAMuW,EAAa,SAACC,GAClB,GAAwB,IAApBA,EAASzc,OAAc,CACzB,IACI4S,EAAa,GAFQ,uBAGzB,YAAoB6J,EAApB,+CAA8B,CAAC,IAAtBxV,EAAqB,SACM,IAHtB,aAGAV,QAAQU,IAAiB2L,EAAWpM,KAAKS,IAJ9B,kFAMzB,GAAsB,MAAlB2L,EAAW,GAAY,OAC3B,GACyB,IAAtBA,EAAW5S,SACS,MAAlB4S,EAAW,IAAgC,MAAlBA,EAAW,KACjB,IAAtBA,EAAW5S,OAEX,OACF,OAAO4S,EAAWnM,KAAK,MAG3B,OACE,kBAAC,IAAMiW,SAAP,KACE,yBAAKtT,UAAU,iCACb,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,yEAAf,WAGA,yBAAKA,UAAU,mFACb,8BACEA,UAAU,oEACV7P,KAAK,OACLub,KAAK,YACLqC,aAAclR,EAAM9F,OACpB6P,SAAU,SAACvP,GACT,IAAIvB,EAAQsd,EAAW/b,EAAEa,OAAO4K,OAChCjG,EAAMoW,UAAUnd,QAKxB,yBAAKkK,UAAU,2CACb,yBAAKA,UAAU,yEAAf,WAGA,yBAAKA,UAAU,mFACb,8BACEA,UAAU,oEACV7P,KAAK,OACLub,KAAK,YACLqC,aAAclR,EAAM7F,OACpB4P,SAAU,SAACvP,GACT,IAAIvB,EAAQsd,EAAW/b,EAAEa,OAAO4K,OAChCjG,EAAMqW,UAAUpd,SAM1B,yBAAKkK,UAAU,iCACb,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,yEAAf,kBAGA,yBAAKA,UAAU,mFACb,8BACEA,UAAU,oEACV7P,KAAK,OACLub,KAAK,YACLqC,aAAclR,EAAMxF,EACpBuP,SAAU,SAACvP,GACTwF,EAAMsW,QAAQ9b,EAAEa,OAAO4K,YAK/B,yBAAK9C,UAAU,2CACb,yBAAKA,UAAU,yEAAf,kBAGA,yBAAKA,UAAU,mFACb,8BACEA,UAAU,oEACV2N,UAAQ,EACR7K,MAAOjG,EAAMzF,EACbjH,KAAK,OACLub,KAAK,iBAKb,yBAAK1L,UAAU,iCACb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,yEAAf,SACG,0DAEH,yBAAKA,UAAU,mFACb,8BACEA,UAAU,oEACV2N,UAAQ,EACR7K,MAAOjG,EAAM1F,IACbhH,KAAK,OACLub,KAAK,gBAIX,yBAAK1L,UAAU,2CACb,yBAAKA,UAAU,yEAAf,KACI,2DAEJ,yBAAKA,UAAU,mFACb,8BACEA,UAAU,oEACV2N,UAAQ,EACR7K,MAAOjG,EAAM3F,EACb/G,KAAK,OACLub,KAAK,iBAKb,yBAAK1L,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,qBAGA,yBAAKA,UAAU,iGACb,yBAAKA,UAAU,2EACZnD,EAAM5F,oBAKf,yBAAK+I,UAAU,iCACb,sGAGE,uBACEuT,KAAK,wDACLrb,OAAO,SAFT,kBAMA,6BATF,iKAcA,mDACuB,4BAAQ8H,UAAU,aAAlB,QAA4C,IADnE,6LAMA,wLAKA,0ZAMkD,IAChD,4BAAQA,UAAU,aAAlB,uICxKJwT,G,8MACJlF,YAAc,WAKZ,IAAIxY,EAAQ,EAAK+G,MAAM/G,MAAM0Q,MAAM,KAAKnJ,KAAK,IAAImJ,MAAM,IACvD1Q,EAAQA,EAAMc,QAAU,GAAKd,EAAM2d,MAAM,EAAG,IAAM3d,EAMlD,IAAIQ,EAAkB,EAAKuG,MAAMvG,gBACjC,GAA+B,IAA3BA,EAAgBM,OAAc,OAAO,KAEzC,IADA,IAAIwQ,EAAM,IAAIzF,MAAM7L,EAAMc,QACjB+C,EAAI,EAAGA,EAAImP,KAAK4K,KAAK5d,EAAMc,OAASN,EAAgBM,QAAS+C,IACpE,IAAK,IAAID,EAAI,EAAGA,EAAIpD,EAAgBM,OAAQ8C,IAC1C0N,EAAIzN,EAAIrD,EAAgBM,OAAS8C,GAAKpD,EAAgBoD,GAO1D,IAAIia,EAAM,EAAK9W,MAAM5G,OAAOuQ,MAAM,KAAKnJ,KAAK,IAAImJ,MAAM,IACtDmN,EAAMA,EAAI/c,QAAU,GAAK+c,EAAIF,MAAM,EAAG,IAAME,EAK5C,IAAI1d,EAAS,GACT2d,EAAU,EA/BI,uBAgClB,YAAoB9d,EAApB,+CAA2B,CAAC,IAAnB+H,EAAkB,QACzB5H,EAAOmH,KACL,yBAAK4C,UAAU,0BAA0BoH,IAAKqH,gBAC5C,yBAAKzO,UAAU,kCAAkCnC,GACjD,yBAAKmC,UAAU,SAAf,KACA,yBACEA,UACE4T,EAAUtd,EAAgBM,OACtB,iCACA,uBAGLwQ,EAAIwM,IAEP,yBAAK5T,UAAU,SAAf,KACA,yBAAKA,UAAU,kCAAkC2T,EAAIC,MAGzDA,KAlDgB,kFAoDlB,OAAO3d,G,0EAIP,OACE,yBAAK+J,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,oCAGA,yBAAKA,UAAU,6EACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,0BAA0BoM,KAAKkC,iBAGlD,uBAAGtO,UAAU,iCAAb,+E,GApE0BqN,IAAMwB,eA4F3BxO,gBAdS,SAAClL,GAAD,MAAY,CAClCmB,gBAAiBnB,EAAMmB,gBACvBL,OAAQd,EAAMc,OACdH,MAAOX,EAAMW,MACbD,UAAWV,EAAMU,aAUJwK,CAAyBmT,IC/F3BK,GAAyB,SAAC1a,GAAD,MAAkB,CACtDhJ,KAAMqC,IACN2G,gBCOE2a,GAAU,CACZ,aACA,aACA,aACA,mBACA,gBA+CI1T,GAAoB,CACxByT,2BAQaxT,gBAbS,SAAClL,GAAD,MAAY,CAClC+D,oBAAqB/D,EAAM+D,uBAYWkH,GAAzBC,EArDO,SAACxD,GASrB,OACE,yBAAKmD,UAAU,aAAa1B,MAAO,CAAEyV,aAAc,SACjD,yBAAK/T,UAAU,mBACb,yBAAKA,UAAU,kCAAf,eACA,yBAAKA,UAAU,kFACb,yBAAKA,UAAU,uDAAf,gBAGA,4BACEA,UAAU,wDACV4G,SAAU,SAACvP,GAAD,OAfK,SAACA,GACxB,IAAI8W,EAAM9W,EAAEa,OAAO4K,MAAM0D,MAAM,KAAK,GAAGvJ,cACvCJ,EAAMgX,uBAAuB1F,GAaJ6F,CAAiB3c,IAClCyL,MAAOjG,EAAM3D,qBAEZ4a,GAAQpS,KAAI,SAACqJ,GACZ,OACE,4BACE3D,IAAKqH,eACL3L,MAAOiI,EAAOvE,MAAM,KAAK,GAAGvJ,cAC5B+C,UAAU,kCAET+K,aCxCNkJ,GAAoB,SAAC3Y,GAAD,MAAqB,CACpDnL,KAAMuC,IACN4I,mBAGW4Y,GAAqB,SAAC3Y,GAAD,MAAsB,CACtDpL,KAAMsC,IACN8I,oBCmCI6E,GAAoB,CACxB6T,qBACAC,uBAUa7T,gBAjBS,SAAClL,GAAD,MAAY,CAClCoG,gBAAiBpG,EAAMwG,SAASJ,gBAChCD,eAAgBnG,EAAMwG,SAASL,kBAeO8E,GAAzBC,EApDU,SAACxD,GACxB,OACE,kBAAC,IAAMyW,SAAP,KACE,yBAAKtT,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,uBAGA,yBAAKA,UAAU,uCACb,8BACE+N,aAAclR,EAAMtB,gBACpByE,UAAU,4BACV4G,SAAU,SAACxI,GACTvB,EAAMqX,mBAAmB9V,EAAIlG,OAAO4K,MAAM7F,qBAMpD,yBAAK+C,UAAU,cACb,yBAAKA,UAAU,kCAAf,aACA,yBAAKA,UAAU,uCACb,8BACEA,UAAU,4BACV+N,aAAclR,EAAMvB,eACpBsL,SAAU,SAACxI,GACTvB,EAAMoX,kBAAkB7V,EAAIlG,OAAO4K,MAAM7F,wBC5BjDkX,I,qNAMJ3E,mBAAqB,WAMnB,KAAI,EAAK3S,MAAMnB,eAAe9E,OAAS,KAClC,EAAKiG,MAAMnB,gBAAuD,IAArC,EAAKmB,MAAMnB,eAAe9E,QAuB5D,OApBE,2BAAOoJ,UAAU,kBACf,+BACE,4BACG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK0B,KAAI,SAAC0S,GAAD,OAClC,wBAAIhN,IAAKqH,gBAAW2F,OAGvB,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK1S,KAAI,SAAC0S,GAC9B,OACE,wBAAIhN,IAAKqH,gBACP,4BAAK2F,GACJ,EAAKvX,MAAMnB,eAAehF,OAAO0d,GAAU,GAAG1S,KAAI,SAACyI,GAAD,OACjD,wBAAI/C,IAAKqH,gBAAWtE,a,0EAYlC,OACE,yBAAKnK,UAAU,aAAa1B,MAAO,CAAEyV,aAAc,SACjD,yBAAK/T,UAAU,mBACb,yBAAKA,UAAU,kCAAf,4BAGA,yBAAKA,UAAU,uCACZoM,KAAKoD,sBAER,uBAAGxP,UAAU,iCAAb,kN,GAjDmBqN,IAAMwB,gBAoEpBxO,gBARS,SAAClL,GAAD,MAAY,CAClCuG,eAAgBvG,EAAMwG,SAASD,kBAOlB2E,CAAyB8T,ICvElCE,G,8MACJ/F,YAAc,WAKZ,IAAIgG,EAAiB,EAAKzX,MAAMrB,qBAChC8Y,EACEA,EAAe1d,QAAU,GACrB0d,EAAeb,MAAM,EAAG,IACxBa,EAMN,IAAIlN,EAAM,EAAKvK,MAAMpB,mBACrB2L,EAAMA,EAAIxQ,QAAU,GAAKwQ,EAAIqM,MAAM,EAAG,IAAMrM,EAM5C,IAAIuM,EACuB,YAAzB,EAAK9W,MAAMhH,UACP,EAAKgH,MAAM5G,OAAOuQ,MAAM,KACxB,EAAK3J,MAAM/G,MAAM0Q,MAAM,KAC7BmN,EAAMA,EAAI/c,QAAU,GAAK+c,EAAIF,MAAM,EAAG,IAAME,EAK5C,IAAIY,EACuB,YAAzB,EAAK1X,MAAMhH,UACP,EAAKgH,MAAM/G,MAAM0Q,MAAM,KAAKnJ,KAAK,IAAImJ,MAAM,IAC3C,EAAK3J,MAAM5G,OAAOuQ,MAAM,KAAKnJ,KAAK,IAAImJ,MAAM,IAClD+N,EAAYA,EAAU3d,QAAU,GAAK2d,EAAUd,MAAM,EAAG,IAAMc,EAU9D,IAHA,IAAIC,EAAW,EAAK3X,MAAMvB,eAAekL,MAAM,IAC3CiO,EAAS,GACT/a,EAAI,EACD+a,EAAO7d,OAAS,IACjB8C,EAAI8a,EAAS5d,QACf6d,EAAOrX,KAAKoX,EAAS9a,IACrBA,KAEAA,EAAI,EASR,IAAIzD,EAAS,GACT2d,EAAU,EA5DI,uBA6DlB,YAAoBU,EAApB,+CAAoC,CAAC,IAA5BzW,EAA2B,QAClC5H,EAAOmH,KACL,yBACE4C,UAAU,2BACV1B,MAAO,CAAEmB,SAAU,QACnB2H,IAAKqH,gBAEL,6BAAM8F,EAAUX,IAChB,yBAAK5T,UAAU,SAAf,KACA,6BAAMnC,GACN,yBAAKmC,UAAU,SAAf,KACA,6BAAMyU,EAAOb,IACb,yBAAK5T,UAAU,SAAf,KACA,6BAAMoH,EAAIwM,IACV,yBAAK5T,UAAU,SAAf,KACA,6BAAM2T,EAAIC,MAGdA,KA/EgB,kFAiFlB,MAA0B,sBAAtB,EAAK/W,MAAM5G,OAAuC,KAC/CA,G,0EAIP,OACE,kBAAC,IAAMqd,SAAP,KACyB,sBAAtBlH,KAAKvP,MAAM5G,QACU,6BAAtBmW,KAAKvP,MAAM5G,OACT,yBACE+J,UAAU,aACV1B,MAAO,CACLyV,aAAc,OACd7I,UAAW,yCAGb,yBAAKlL,UAAU,mBACb,yBAAKA,UAAU,kCAAf,iCAGA,yBAAKA,UAAU,6EACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,0BACZoM,KAAKkC,iBAIZ,uBAAGtO,UAAU,iCAAb,2EAMF,U,GAnHwBqN,IAAMwB,eA2I3BxO,gBAlBS,SAAClL,GAAD,MAAY,CAClCsG,mBAAoBtG,EAAMwG,SAASF,mBACnCD,qBAAsBrG,EAAMwG,SAASH,qBACrCF,eAAgBnG,EAAMwG,SAASL,eAC/BxF,MAAOX,EAAMW,MACbG,OAAQd,EAAMc,OACdJ,UAAWV,EAAMU,aAYJwK,CAAyBgU,ICzIzBK,GALiB,SAAC/Z,GAAD,MAA2B,CACzDxK,KAAM2C,IACN6H,yBCkFIyF,I,OAAoB,CACxBsU,6BAQarU,gBAdS,SAAClL,GAAD,MAAY,CAClCgB,SAAUhB,EAAMgB,SAASA,SACzBwE,qBAAsBxF,EAAMwF,wBAc5ByF,GAFaC,EApFc,SAACxD,GAsC5B,OApBAiE,qBAAU,WAGR,IAFA,IAAI6T,EAA6BjM,OAAOkM,OAAO/X,EAAMlC,sBACjDka,EAAS,GACb,MAAsBF,EAAtB,eAAkD,CAA7C,IAAInN,EAAS,KAEdmN,EAA2BxX,QAAQqK,KACnCmN,EAA2BG,YAAYtN,KAER,IAA/BqN,EAAO1X,QAAQqK,IAAqBqN,EAAOzX,KAAKoK,GAIpD,IAAIuN,EAASC,SAASC,uBAAuB,uBAZ/B,uBAad,YAAkBF,EAAlB,+CAA0B,CAAC,IAAlBjf,EAAiB,SACa,IAAjC+e,EAAO1X,QAAQrH,EAAMgN,QACvBhN,EAAMof,UAAUC,IAAI,0CAfV,sFAqBd,yBAAKnV,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,yCAGA,yBAAKA,UAAU,8FACZnD,EAAM1G,SAASqQ,MAAM,IAAI9E,KAAI,SAAC8F,GAC7B,OACE,yBAAKxH,UAAU,eAAeoH,IAAKqH,gBACjC,yBAAKzO,UAAU,2BAA2BwH,GAC1C,yBAAKxH,UAAU,SAAf,UACA,yBAAKA,UAAU,+BACb,2BACEA,UAAU,sBACV4G,SAAU,SAACvP,GAAD,OAjDC,SAACA,GAC5B,IAAMoY,EAASpY,EAAEa,OAAOgW,QAAQuB,OAC1B3M,EAAQzL,EAAEa,OAAO4K,MACvB,IAAqD,IAAjDjG,EAAM1G,SAASgH,QAAQ2F,EAAM7F,eAAuB,CACtD,IAAI2R,EAAO/R,EAAMlC,qBACjBiU,EAAKa,GAAU3M,EACfjG,EAAM6X,wBAAwB9F,IA2CCwG,CAAqB/d,IACtCge,cAAa7N,EACbwI,aAAYnT,EAAMlC,qBAAqB6M,GACvCuG,aAAclR,EAAMlC,qBAAqB6M,GACzC8N,UAAU,IACVC,KAAK,iBC7DnBC,GAAe,SAAC3a,GAAD,MAAgB,CACnC1K,KAAM4C,IACN8H,cAGI4a,GAAsB,SAAC3a,GAAD,MAAuB,CACjD3K,KAAM6C,IACN8H,qBAGI4a,GAAqB,SAAC3a,GAAD,MAAsB,CAC/C5K,KAAM8C,IACN8H,oBCyFIqF,GAAoB,CACxBsV,sBACAF,gBACAC,wBAYapV,gBArBS,SAAClL,GAAD,MAAY,CAClC0F,UAAW1F,EAAM+F,OAAOL,UACxBC,iBAAkB3F,EAAM+F,OAAOJ,iBAC/BC,gBAAiB5F,EAAM+F,OAAOH,mBAkBQqF,GAAzBC,EAjHQ,SAACxD,GAItB,IAAM8Y,EAAwB,SAACte,GACnB,MAANA,EACEwF,EAAM9B,iBAAmB,IAC3B8B,EAAM6Y,mBAAmB7Y,EAAM9B,gBAAkB,GAEpC,MAAN1D,GACLwF,EAAM9B,iBAAmB,GAC3B8B,EAAM6Y,mBAAmB7Y,EAAM9B,gBAAkB,IAqBvD,OACE,kBAAC,IAAMuY,SAAP,KACE,yBAAKtT,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,kBACA,yBAAKA,UAAU,uCACb,8BACE8C,MAAOjG,EAAMhC,UACb+L,SAAU,SAACvP,GAAD,OArBM,SAACA,GAC3BwF,EAAM2Y,aAAane,EAAEa,OAAO4K,OAoBD8S,CAAoBve,IACrC2I,UAAU,iCAMlB,yBAAKA,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,qBAGA,yBAAKA,UAAU,uCACb,yBACE8C,MAAM,IACN9C,UAAU,qCACVM,QAAS,kBAAMqV,EAAsB,OAHvC,KAOA,yBAAK3V,UAAU,sCACZnD,EAAM9B,iBAET,yBACE+H,MAAM,IACN9C,UAAU,qCACVM,QAAS,kBAAMqV,EAAsB,OAHvC,QAUN,yBAAK3V,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,sBAGA,yBAAKA,UAAU,uCACb,8BACE8C,MAAOjG,EAAM/B,iBACb8L,SAAU,SAACvP,GAAD,OAvDK,SAACA,GAC1B,IAAIyL,EAAQzL,EAAEa,OAAO4K,MACA,IAAjBA,EAAMlM,SAAckM,EAAQ,KAChCjG,EAAM4Y,oBAAoB3S,GAoDC+S,CAAmBxe,IACpC2I,UAAU,kEACVsV,UAAU,aCdTjV,I,OAAAA,aARS,SAAClL,GAAD,MAAY,CAClC6F,aAAc7F,EAAM+F,OAAOF,gBAOdqF,EAxEM,SAACxD,GAQpB,OACE,yBAAKmD,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,iBACA,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,gBACZ,CAAC,EAAG,EAAG,GAAG0B,KAAI,SAAC7D,GACd,OACE,2BAAOuJ,IAAKqH,eAAUzO,UAAU,iBAC9B,2BAAOA,UAAU,6BACf,wBAAIA,UAAU,2BACX,CAAC,IAAD,OAAKnC,EAAU,GAAK,IAAK,IAAK,KAAK6D,KAAI,SAAC0S,GAAD,OACtC,wBACEhN,IAAKqH,eACLzO,UAAU,oDAEToU,OAIN,CAAC,IAAK,IAAK,KAAK1S,KAAI,SAAC0S,GACpB,OACE,wBAAIhN,IAAKqH,eAAUzO,UAAU,2BAC3B,wBAAIA,UAAU,oDACXoU,GAEFvX,EAAM7B,aAAa6C,GAASnH,OAAO0d,GAAU,GAAG1S,KAC/C,SAACyI,GACC,OACE,wBACE/C,IAAKqH,eACLzO,UAAU,oDAETmK,iBAc3B,uBAAGnK,UAAU,iCAAb,mHCoFOK,gBAlBS,SAAClL,GAAD,MAAY,CAClC8F,aAAc9F,EAAM+F,OAAOD,aAC3BF,gBAAiB5F,EAAM+F,OAAOH,gBAC9BD,iBAAkB3F,EAAM+F,OAAOJ,iBAC/BhF,MAAOX,EAAMW,MACbK,SAAUhB,EAAMgB,SAASA,SACzBF,OAAQd,EAAMc,UAYDoK,EA3IM,SAACxD,GAKpB,IAAM2M,EAAa,GAcnB,OACE,yBAAKxJ,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kCAAf,iBACA,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,gBACZ,YACI2B,MACDmH,KAAK4K,KArBM,WAEvB,IADA,IAAIoC,EAAmB,EACdpc,EAAI,EAAGA,EAAImD,EAAM/G,MAAMc,OAAQ8C,KAEsB,IAA1DmD,EAAM1G,SAASgH,QAAQN,EAAM/G,MAAM4D,GAAGuD,gBACtCJ,EAAM/G,MAAM4D,GAAGuD,gBAAkBJ,EAAM/B,iBAAiBmC,gBAExD6Y,IACAtM,EAAWpM,KAAKP,EAAM/G,MAAM4D,KAGhC,OAAOoc,EAUeA,GAAqBpf,OAAOmG,EAAM9B,mBAC5C4N,QACFjH,KAAI,SAAC7D,GACL,OAaE,2BAAOuJ,IAAKqH,eAAUzO,UAAU,iBAC9B,2BAAOA,UAAU,6BACf,4BACGwJ,EACEiK,MACC5V,EAAUhB,EAAM9B,gBAChB8C,EAAUhB,EAAM9B,gBACd8B,EAAM9B,iBAET2G,KAAI,SAACqU,GAAD,OACH,wBACE/V,UAAU,2BACVoH,IAAKqH,gBAEJsH,OAIR,CAAC,EAAG,EAAG,GAAGrU,KAAI,SAAC0S,GACd,OACE,wBAAIhN,IAAKqH,eAAUzO,UAAU,2BAC1BnD,EAAM5B,aACJwY,MACC5V,EAAUhB,EAAM9B,gBAChB8C,EAAUhB,EAAM9B,gBACd8B,EAAM9B,iBAET2G,KAAI,SAAC7D,GACJ,OACE,wBACEuJ,IAAKqH,eACLzO,UAAU,yBAETnC,EAAQuW,GAAU,UAOjC,4BACGvX,EAAM5G,OACJuQ,MAAM,IACNiN,MACC5V,EAAUhB,EAAM9B,gBAChB8C,EAAUhB,EAAM9B,gBACd8B,EAAM9B,iBAET2G,KAAI,SAACqU,GACJ,OACE,wBACE/V,UAAU,2BACVoH,IAAKqH,gBAEJsH,cAWvB,uBAAG/V,UAAU,iCAAb,6WC2DOK,gBAdS,SAAClL,GAAD,MAAY,CAClCU,UAAWV,EAAMU,UACjB3F,OAAQiF,EAAMjF,OACdiG,SAAUhB,EAAMgB,SAASA,SACzBuX,eAAgBvY,EAAMgB,SAASC,UAUlBiK,EAjJE,SAACxD,GAgIhB,OAAO,kBAAC,WAAD,KA/HgB,WACrB,GAAwB,UAApBA,EAAMhH,UAAuB,OAAO,KACxC,OAAQgH,EAAM3M,QACZ,IAAK,SACH,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAGN,IAAK,eACH,OAAO,kBAAC8lB,GAAD,MACT,IAAK,gBACH,OAAO,kBAAC,GAAD,MACT,IAAK,UACH,OAAO,kBAAC,GAAD,MACT,IAAK,WACH,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAGN,IAAK,SACH,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CAAqB7f,SAAU0G,EAAM1G,WACrC,kBAAC,GAAD,CACEA,SAAU0G,EAAM1G,SAChBuX,eAAgB7Q,EAAM6Q,iBAExB,kBAAC,GAAD,OAGN,IAAK,MACH,OAAO,kBAAC,GAAD,MACT,IAAK,QACH,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CACEvX,SAAU0G,EAAM1G,SAChBuX,eAAgB7Q,EAAM6Q,iBAExB,kBAAC,GAAD,OAGN,IAAK,SACH,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAqBvX,SAAU0G,EAAM1G,WACrC,kBAAC,GAAD,CACEA,SAAU0G,EAAM1G,SAChBuX,eAAgB7Q,EAAM6Q,iBAExB,kBAAC,GAAD,OAGN,IAAK,SACH,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CACEvX,SAAU0G,EAAM1G,SAChBuX,eAAgB7Q,EAAM6Q,iBAExB,kBAAC,GAAD,OAGN,IAAK,WACH,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAuBvX,SAAU0G,EAAM1G,WACvC,kBAAC,GAAD,CACEA,SAAU0G,EAAM1G,SAChBuX,eAAgB7Q,EAAM6Q,iBAExB,kBAAC,GAAD,OAGN,IAAK,WACH,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACuI,GAAD,MACA,kBAAC,GAAD,CACE9f,SAAU0G,EAAM1G,SAChBuX,eAAgB7Q,EAAM6Q,kBAI9B,IAAK,QACH,OAAO,KACT,IAAK,UACH,OAAO,kBAACwI,GAAD,MACT,IAAK,UACH,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CACE/f,SAAU0G,EAAM1G,SAChBuX,eAAgB7Q,EAAM6Q,iBAExB,kBAAC,GAAD,OAGN,IAAK,MACH,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CACEvX,SAAU0G,EAAM1G,SAChBuX,eAAgB7Q,EAAM6Q,iBAExB,kBAAC,GAAD,OAGN,QACE,OAAO,MAIKyI,OC7JPC,I,OAAoBvQ,cAAW,SAACzG,GAAD,MAAY,CACtDkL,KAAM,CACJtH,MAAO,QAET8C,QAAS,CACPrG,SAAUL,EAAMM,WAAWC,QAAQ,IACnCoG,WAAY3G,EAAMM,WAAWsG,mBAE/BE,KAAM,CACJzG,SAAUL,EAAMM,WAAWC,QAAQ,KAErC0W,KAAM,CACJlL,UAAW,OACX1L,SAAUL,EAAMM,WAAWC,QAAQ,UCwHxB2W,GAtIK,CAClBC,OAAQ,CACNC,OAAO,qPAGPhJ,MAAM,iQAGNiJ,QAAQ,uCACRC,SAAS,2BAEXC,MAAO,CACLH,OAAO,yLAEPhJ,MAAM,4BACNiJ,QAAQ,sCACRC,SAAS,oBAEXE,OAAQ,CACNJ,OAAO,uPAGPhJ,MAAM,6QAGNiJ,QAAQ,8CACRC,SAAS,6BAEXjgB,OAAQ,CACN+f,OAAO,+QAGPhJ,MAAM,4BACNiJ,QAAQ,8CACRC,SAAS,2BAEX/a,SAAU,CACR6a,OAAO,6KAEPhJ,MAAM,4BACNiJ,QAAQ,gDACRC,SAAS,6BAEXG,aAAc,CACZL,OAAO,yKAEPhJ,MAAM,4BACNiJ,QAAQ,oDACRC,SAAS,kCAEXxb,OAAQ,CACNsb,OAAO,iUAIPC,QAAQ,8CACRC,SAAS,iBAEXI,cAAe,CACbN,OAAO,6DAETlE,QAAS,CACPkE,OAAO,sBACPhJ,MAAM,6BAERuJ,SAAU,CACRP,OAAO,gOAGPhJ,MAAM,4BACNiJ,QAAQ,qDACRC,SAAS,6BAEXrb,SAAU,CACRmb,OAAO,2UAIPhJ,MAAM,4BACNiJ,QAAQ,gDACRC,SAAS,6BAEXM,MAAO,CACLR,OAAO,gwBASPhJ,MAAM,4BACNiJ,QAAS,2CACTC,SAAS,wBAEXlhB,QAAS,CACPghB,OAAO,qFACPhJ,MAAO,GACPiJ,QAAS,GACTC,SAAU,IAEZ5f,QAAS,CACP0f,OAAO,+MAGPhJ,MAAM,4BACNiJ,QAAQ,wCACRC,SAAS,qBAEXO,IAAK,CACHT,OAAO,4OAGPhJ,MAAM,4BACNiJ,QAAQ,6CACRC,SAAS,gBAEXpf,IAAK,CACHkf,OAAO,syBASPhJ,MAAM,4BACNiJ,QAAQ,6CACRC,SAAS,iBCzDErW,gBAVS,SAAClL,GAAD,MAAY,CAClCU,UAAWV,EAAMU,UACjB3F,OAAQiF,EAAMjF,UAQDmQ,EAzDK,SAACxD,GAInB,IAAM4J,EAAU2P,KAEhB,OAAKc,GAAuBra,EAAM3M,QAEP,UAApB2M,EAAMhH,UACX,kBAAC6Q,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACdrP,GAAG,kBAEH,kBAACuN,GAAA,EAAD,CAAYjF,UAAWyG,EAAQX,SAA/B,iBAEF,kBAACkB,GAAA,EAAD,KACE,kBAAC/B,GAAA,EAAD,CAAYjF,UAAWyG,EAAQP,MAC5BgR,GAAuBra,EAAM3M,QAA7B,QAEH,kBAAC+U,GAAA,EAAD,CAAYjF,UAAWyG,EAAQ4P,MAC7B,uBACE9C,KAAM2D,GAAuBra,EAAM3M,QAA7B,QACNgI,OAAO,SAENgf,GAAuBra,EAAM3M,QAA7B,aAMT,yBAAK8P,UAAU,0BACb,uBAAGA,UAAU,0BACVkX,GAAuBra,EAAM3M,QAA7B,OAEH,uBACE8P,UAAU,oBACVuT,KAAM2D,GAAuBra,EAAM3M,QAA7B,QACNgI,OAAO,SAENgf,GAAuBra,EAAM3M,QAA7B,WAnC2C,QCArCinB,GAZK,WAClB,OACE,yBAAKnX,UAAU,kBACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,wBACb,kBAAC,GAAD,MACA,kBAAC,GAAD,S,+BCDFoX,I,iCACJ,WAAYva,GAAQ,IAAD,+BACjB,8CAAMA,KAqBRwa,cAAgB,WACd,OAAI,EAAKC,GACA,GAtBT,EAAKC,KAAO,EAAKA,KAAKvE,KAAV,iBACZ,EAAKwE,SAAW,EAAKA,SAASxE,KAAd,iBAChB,EAAK7d,MAAQ,CACXsiB,SAAU,EACVC,YAAa,GAEf,EAAKJ,GAAKxO,KAAK6O,IACb3C,SAAS4C,gBAAgBC,YACzB/iB,OAAOgjB,YAAc,GAVN,E,sEAejB1L,KAAK2L,OAAOC,c,iCAIZ5L,KAAK2L,OAAOE,c,yCASKC,EAAWC,GAM5B,IAAIC,EAAepD,SAASC,uBAAuB,kBAAkB,GASrE,GAPEmD,GACAA,EAAalD,WACbkD,EAAalD,UAAUmD,SAAS,mBAEhCD,EAAalD,UAAU7Q,OAAO,kBAG5B6T,EAAUhoB,SAAWkc,KAAKvP,MAAM3M,OAAQ,CAC1C,IAAIooB,EAAM/K,KAAyBnB,KAAKvP,MAAM3M,QAAQqoB,YACtD,GAAID,GAAO,EACT,OAAOlM,KAAK2L,OAAOS,UAAUF,GAEftD,SAASC,uBAAuB,iBAAiB,GACvDC,UAAUC,IAAI,kBAI1B,GAAIgD,EAAUT,cAAgBtL,KAAKjX,MAAMuiB,YACvC,cAAsBhP,OAAOkM,OAAOrH,MAApC,eAA+D,CAA1D,IAAM1P,EAAO,KAChB,GAAIA,EAAQ0a,cAAgBnM,KAAKjX,MAAMuiB,YACrC,OAAOtL,KAAKvP,MAAM5M,aAAa4N,EAAQ6N,S,+BAMrC,IAAD,OACD+M,EAAW,CACfC,UAAU,EACVC,MAAO,IACPC,aAAcxM,KAAKiL,gBACnBwB,eAAgB,EAChBC,QAAQ,EACRC,aAAc,EACdC,aAAc,SAAChY,EAASuW,GAAV,OACZ,EAAK0B,SAAS,CACZxB,SAAUzW,EACV0W,YAAaH,MAoCnB,OACE,yBAAKvX,UAAU,YACb,yBAAKA,UAAU,qBAEf,kBAAC,KAAD,eAAQU,IAAK,SAACpH,GAAD,OAAQ,EAAKye,OAASze,IAAQmf,GApCd,WAC/B,IAAIS,EAAmB,GACvB,IAAK,IAAIrb,KAAW0P,KAClB,IAA+C,IAA3CA,KAAyB1P,GAASsb,KAAtC,CACA,IAAI/R,EAAM,EACV8R,EAAiB9b,KACf,yBACEgK,IAAKA,EACLtE,MAAOjF,EACPyC,QAAS,SAAClC,GACR,EAAKvB,MAAM5M,aAAamO,EAAIlG,OAAOkhB,aAAa,UAChD,EAAKrB,OAAOS,UAAU,KAGxB,yBAAK1V,MAAOjF,EAASmC,UAAU,mBAC7B,wBAAI8C,MAAOjF,EAASmC,UAAU,yBAC3BuN,KAAyB1P,GAASsb,MAErC,yBAAKrW,MAAOjF,EAASmC,UAAU,yBAC/B,yBACE8C,MAAOjF,EACPmC,UAAU,2CAETuN,KAAyB1P,GAAS2M,YAK3CpD,IAEF,OAAO8R,EAAiBxX,KAAI,SAAC2X,GAAD,OAAUA,KAOjCC,S,GAnHYjM,IAAMwB,gBA8HvBzO,GAAoB,CACxBnQ,aAAcA,MAGDoQ,gBARS,SAAClL,GAAD,MAAY,CAClCjF,OAAQiF,EAAMjF,UAOwBkQ,GAAzBC,CAA4C+W,I,iDCvI9CmC,GAAY,SAACC,GAAD,gDAAc,WAAOC,GAAP,kBAAArgB,EAAA,sEAE7BsgB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAJe,SAOjBC,KAAMC,KAAK,gBAAiBL,EAAUE,GAPrB,OAO7BI,EAP6B,OAQnCL,EAAS,CACPtpB,KAAM6D,IACNyB,QAASqkB,EAAInkB,OAVoB,gDAanC8jB,EAAS,CACPtpB,KAAM8D,IACNwB,QAAS,CACPskB,IAAK,KAAMC,SAASC,WACpBC,OAAQ,KAAMF,SAASE,UAjBQ,yDAAd,uD,qBC2PnB9Z,GAAoB,CACxB+Z,aDrN0B,SAACziB,GAAD,gDAAQ,WAAO+hB,GAAP,gBAAArgB,EAAA,+EAEdwgB,KAAMQ,OAAN,wBAA8B1iB,IAFhB,OAE1BoiB,EAF0B,OAGhCL,EAAS,CACPtpB,KAAMmE,IACNmB,QAASqkB,EAAInkB,KACb+B,GAAIA,IAN0B,gDAShC2iB,QAAQxhB,MAAM,QAAd,MACA4gB,EAAS,CACPtpB,KAAMkE,MAXwB,yDAAR,uDCsN1B2K,yBACAgP,aACAnP,eACAiP,cACAF,sBACAH,kBACAxd,kBACA6O,mBACAmU,aACAC,aACAC,WACA/D,sBACAC,sBACAoD,aACA3C,iBACAwK,mBAAoBhlB,GACpBilB,iBAAkBhlB,GAClBuZ,kBACAC,iBACAkF,qBACAC,sBACAQ,2BACAgB,sBACAF,gBACAC,uBACA5B,2BAGaxT,gBA3DS,SAAClL,GAAD,MAAY,CAClC2D,QAAS3D,EAAM2D,QACfxD,gBAAiBH,EAAMK,QAAQF,gBAC/BC,cAAeJ,EAAMK,QAAQD,cAC7BK,OAAQT,EAAMS,OACdC,UAAWV,EAAMU,UACjBC,MAAOX,EAAMW,MACb5F,OAAQiF,EAAMjF,OACd6F,aAAcZ,EAAMY,aACpBG,WAAYf,EAAMe,WAClBC,SAAUhB,EAAMgB,SAASA,SACzBY,OAAQ5B,EAAMmC,IAAIP,OAClBC,OAAQ7B,EAAMmC,IAAIN,OAClBV,gBAAiBnB,EAAMmB,gBACvB6E,gBAAiBhG,EAAMkG,SAASF,gBAChC5E,aAAcpB,EAAMsB,OAAOF,aAC3BC,YAAarB,EAAMsB,OAAOD,YAC1BG,OAAQxB,EAAMwB,OACdE,WAAY1B,EAAM2B,QAAQD,WAC1B0E,gBAAiBpG,EAAMoG,gBACvBD,eAAgBnG,EAAMmG,eACtBX,qBAAsBxF,EAAMwF,qBAC5BE,UAAW1F,EAAM+F,OAAOL,UACxBC,iBAAkB3F,EAAM+F,OAAOJ,iBAC/BC,gBAAiB5F,EAAM+F,OAAOH,gBAC9B1D,EAAGlC,EAAMmC,IAAID,EACb6B,oBAAqB/D,EAAM+D,uBAmC3BkH,GAFaC,EA7PiB,SAACxD,GAAW,IAAD,EACZ8D,mBAAS,GADG,oBAClCqC,EADkC,KAC3BwX,EAD2B,KAGnCC,EAAiB,WAErB,OADc3lB,OAAOgjB,YAIvBhX,qBAAU,WACR,IAAM4Z,EAAe,WACnBF,EAAYC,IAOd,OAJAC,IAEA5lB,OAAO6lB,iBAAiB,SAAUD,GAE3B,kBAAM5lB,OAAO8lB,oBAAoB,SAAUF,MACjD,IAqIH,OACE,kBAAC,WAAD,KACE,yBAAK1a,UAAU,8CAAf,gBAEE,4BAAQA,UAAU,oBAChB,kBAAC,KAAD,CAAkBM,QAAS,kBAAMzD,EAAMmC,6BAG3C,yBAAKgB,UAAU,eACb,2BAAOA,UAAU,uBACf,+BACE,4BACGgD,GAAS,IAAM,KACd,wBAAIhD,UAAU,4BAAd,QAEF,wBAAIA,UAAU,4BAAd,eACA,wBAAIA,UAAU,4BAAd,UACCgD,GAAS,IAAM,KACd,wBAAIhD,UAAU,4BAAd,eAEF,wBAAIA,UAAU,6DAAd,QAGA,wBAAIA,UAAU,6DAAd,WA5DK,WACf,IAAI6a,EAAc,GADG,uBAErB,IAFqB,IAErB,EAFqB,iBAEZ1e,EAFY,QAGfjM,EAASiM,EAAOA,OAAOjM,OAC3B2qB,EAAYzd,KACV,wBAAIgK,IAAKjL,EAAOC,KACb4G,GAAS,SACUsG,IAAhBnN,EAAO2e,MACL,wBAAI9a,UAAU,6BAA6B7D,EAAO2e,MAEpD,KACJ,wBAAI9a,UAAU,6BAA6B7D,EAAOuP,MAClD,wBAAI1L,UAAU,6BACXuN,KAAyBrd,GAAQsa,SAEnCxH,GAAS,IACR,wBAAIhD,UAAU,6BAA6B7D,EAAOnD,aAChD,KACJ,wBACEtB,GAAIyE,EAAOC,IACXkE,QAAS,SAACjJ,GAAD,OAlHM,SAACK,GACxB,IAAIqjB,EAD2B,uBAE/B,YAAqBle,EAAM/D,QAA3B,+CAAoC,CAAC,IAA1BqD,EAAyB,QAC9BA,EAAOC,MAAQ1E,IACjBqjB,EAAW5e,IAJgB,wFAiC3B4e,EAAS5e,OAzBXjM,EAR6B,EAQ7BA,OACA4F,EAT6B,EAS7BA,MACAK,EAV6B,EAU7BA,SACAP,EAX6B,EAW7BA,OACAC,EAZ6B,EAY7BA,UACAmlB,EAb6B,EAa7BA,WACAjlB,EAd6B,EAc7BA,aACAgB,EAf6B,EAe7BA,OACAC,EAhB6B,EAgB7BA,OACAK,EAjB6B,EAiB7BA,EACAf,EAlB6B,EAkB7BA,gBACA6E,EAnB6B,EAmB7BA,gBACAxE,EApB6B,EAoB7BA,OACAE,EArB6B,EAqB7BA,WACAtB,EAtB6B,EAsB7BA,cACAD,EAvB6B,EAuB7BA,gBACAiB,EAxB6B,EAwB7BA,aACAC,EAzB6B,EAyB7BA,YACA+E,EA1B6B,EA0B7BA,gBACAD,EA3B6B,EA2B7BA,eACAX,EA5B6B,EA4B7BA,qBACAE,EA7B6B,EA6B7BA,UACAC,EA9B6B,EA8B7BA,iBACAC,EA/B6B,EA+B7BA,gBACA7B,EAhC6B,EAgC7BA,oBAYF,OATAmhB,QAAQY,IAAIF,EAAS5e,QAErBU,EAAM5M,aAAaC,GACnB2M,EAAMgC,YAAY/I,GAClB+G,EAAM4Q,eAAetX,GACrB0G,EAAMiC,gBAAgBjJ,GACtBgH,EAAMiR,WAAWkN,GAAc,YAC/Bne,EAAM+Q,mBAAmB7X,GAAgB,WAEjC7F,GACN,IAAK,SACH2M,EAAMmR,UAAUpY,GAChB,MACF,IAAK,MACHiH,EAAMoW,UAAUlc,GAChB8F,EAAMqW,UAAUlc,GAChB6F,EAAMsW,QAAQ9b,GACd,MACF,IAAK,gBACHwF,EAAMgX,uBAAuB3a,GAC7B,MACF,IAAK,WACH2D,EAAMuS,mBAAmB9Y,GACzB,MACF,IAAK,WACHuG,EAAMwS,mBAAmBlU,GACzB,MACF,IAAK,MACH0B,EAAM4V,UAAU9b,GAChB,MACF,IAAK,UACHkG,EAAMiT,cAAcjZ,GACpB,MACF,IAAK,UACHgG,EAAM0d,iBAAiBhlB,GACvBsH,EAAMyd,mBAAmBhlB,GACzB,MACF,IAAK,SACHuH,EAAMiS,eAAevY,GACrBsG,EAAMkS,cAAcvY,GACpB,MACF,IAAK,WACHqG,EAAMqX,mBAAmB3Y,GACzBsB,EAAMoX,kBAAkB3Y,GACxB,MACF,IAAK,eACHuB,EAAM6X,wBAAwB/Z,GAC9B,MACF,IAAK,SACHkC,EAAM4Y,oBAAoB3a,GAC1B+B,EAAM6Y,mBAAmB3a,GACzB8B,EAAM2Y,aAAa3a,GAKvBgC,EAAMmC,wBAuBkBkc,CAAiB/e,EAAOC,MACxC4D,UAAU,iEAEV,kBAAC,KAAD,OAEF,wBACEM,QAAS,SAACjJ,GAAD,OAAOwF,EAAMsd,aAAahe,EAAOC,MAC1C4D,UAAU,gEAEV,kBAAC,KAAD,UA3BR,EAAmBnD,EAAM/D,QAAzB,+CAAmC,IAFd,kFAkCrB,OAAO+hB,EA8BEM,GAAWzZ,KAAI,SAAC0Z,GAAD,OAASA,QAI/B,yBAAKpb,UAAU,8DACb,4BACEA,UAAU,mCACVM,QAAS,kBAAMzD,EAAMmC,0BAFvB,c,qBClJFoB,GAAoB,CACxBpB,yBACAC,0BAGaoB,gBAVS,SAAClL,GAAD,MAAY,CAClC0G,gBAAiB1G,EAAM0G,gBACvBD,gBAAiBzG,EAAMyG,mBAUvBwE,GAFaC,EApEyB,SAACxD,GACvC,IAUMwe,EAA6B,WAC7Bxe,EAAMhB,gBACRgB,EAAMoC,wBAENpC,EAAMmC,yBAIV,OACE,yBACEgB,UAAU,gBACVM,QAAS,SAACjJ,GAAD,OArBqB,SAACA,GACN,kBAAvBA,EAAEa,OAAO8H,YACPnD,EAAMhB,gBACRgB,EAAMoC,wBAENpC,EAAMmC,yBAgBQsc,CAA0BjkB,KAE1C,yBAAK2I,UAAU,SACb,yBAAKA,UAAU,8CACG,SAAfnD,EAAM1M,KAAkB,gBAAkB,iBAC3C,4BAAQ6P,UAAU,oBAChB,kBAAC,KAAD,CAAkBM,QAAS,kBAAM+a,SAGrC,yBAAKrb,UAAU,0CACb,kBAAC,KAAD,CAA+B1B,MAAO,CAAEmB,SAAU,WAClD,wBAAIO,UAAU,kBAAd,gDAIF,yBAAKA,UAAU,8DACb,kBAAC,IAAD,CACEA,UAAU,cACVM,QAAS,kBAAM+a,KACfE,GAAG,UAHL,SAOA,kBAAC,IAAD,CACEvb,UAAU,cACVM,QAAS,kBAAM+a,KACfE,GAAG,WAHL,gBCvBJnb,GAAoB,CACxBpB,0BAGaqB,gBATS,SAAClL,GAAD,MAAY,CAClC2C,gBAAiB3C,EAAM4G,KAAKjE,gBAC5B8D,gBAAiBzG,EAAMyG,mBAOewE,GAAzBC,EA5BI,SAACxD,GAMlB,OAAIA,EAAM/E,iBAAmB+E,EAAMjB,gBAE/B,yBAAKoE,UAAU,gBAAgBM,QAAS,SAACjJ,GAAD,OAPxB,SAACA,GACQ,kBAAvBA,EAAEa,OAAO8H,WACXnD,EAAMmC,wBAKyCtK,CAAY2C,KACzD,yBAAK2I,UAAU,SACb,kBAAC,GAAD,QAIGnD,EAAMjB,gBACR,kBAAC,GAAD,CAAiCzL,KAAM,SAClC,QCnBDqrB,GALc,SAACxiB,GAAD,MAAkB,CAC7C7I,KAAMgE,IACN6E,gBCGayiB,GALO,SAACxiB,GAAD,MAAiB,CACrC9I,KAAMiE,IACN6E,eCJIyiB,GAAU,CACd,SACA,QACA,YACA,eACA,aACA,YAGWC,GAAuB,CAClC/E,OAAO,GAAD,OAAM8E,GAAN,CAAe,WACrB5E,cAAc,GAAD,OAAM4E,GAAN,CAAe,wBAC5BlmB,QAAQ,GAAD,OAAMkmB,GAAN,CAAe,kBAAmB,kBACzCpJ,QAAQ,GAAD,OAAMoJ,IACbpkB,IAAI,GAAD,OAAMokB,GAAN,CAAe,SAAU,SAAU,MACtCxgB,OAAO,GAAD,OAAMwgB,GAAN,CAAe,YAAa,mBAAoB,oBACtD7E,aAAa,GAAD,OAAM6E,GAAN,CAAe,yBAC3B/f,SAAS,GAAD,OAAM+f,GAAN,CAAe,kBAAmB,mBAC1C5kB,QAAQ,GAAD,OAAM4kB,GAAN,CAAe,eACtBzE,IAAI,GAAD,OAAMyE,GAAN,CAAe,WAClBjlB,OAAO,GAAD,OAAMilB,GAAN,CAAe,eAAgB,gBACrC3E,SAAS,GAAD,OAAM2E,GAAN,CAAe,oBACvBrgB,SAAS,GAAD,OAAMqgB,GAAN,CAAe,oBACvBnF,OAAO,GAAD,OAAMmF,IACZ/E,MAAM,GAAD,OAAM+E,IACX1E,MAAM,GAAD,OAAM0E,KCsIPtb,GAAoB,CACxBqb,iBACAxc,yBACAuc,wBACAjC,cAuCalZ,gBA3ES,SAAClL,GAAD,MAAY,CAClCgD,aAAchD,EAAMgD,aAAaF,UACjCc,kBAAmB5D,EAAM4D,kBACzBE,WAAY9D,EAAM8D,WAClB3D,gBAAiBH,EAAMK,QAAQF,gBAC/BC,cAAeJ,EAAMK,QAAQD,cAC7BK,OAAQT,EAAMS,OACdC,UAAWV,EAAMU,UACjBC,MAAOX,EAAMW,MACb5F,OAAQiF,EAAMjF,OACd6F,aAAcZ,EAAMY,aACpBG,WAAYf,EAAMe,WAClBC,SAAUhB,EAAMgB,SAASA,SACzBY,OAAQ5B,EAAMmC,IAAIP,OAClBC,OAAQ7B,EAAMmC,IAAIN,OAClBV,gBAAiBnB,EAAMmB,gBACvB6E,gBAAiBhG,EAAMkG,SAASF,gBAChC5E,aAAcpB,EAAMsB,OAAOF,aAC3BC,YAAarB,EAAMsB,OAAOD,YAC1BG,OAAQxB,EAAMwB,OACdilB,WAAYzmB,EAAMymB,WAClB/kB,WAAY1B,EAAM2B,QAAQD,WAC1B0E,gBAAiBpG,EAAMoG,gBACvBD,eAAgBnG,EAAMmG,eACtBX,qBAAsBxF,EAAMwF,qBAC5BE,UAAW1F,EAAM+F,OAAOL,UACxBC,iBAAkB3F,EAAM+F,OAAOJ,iBAC/BC,gBAAiB5F,EAAM+F,OAAOH,gBAC9B1D,EAAGlC,EAAMmC,IAAID,EACb6B,oBAAqB/D,EAAM+D,uBAgD3BkH,GAFaC,EAzLiB,SAACxD,GAuC/B,OACE,kBAAC,WAAD,KACE,yBAAKmD,UAAU,8CAAf,iBAEE,4BAAQA,UAAU,oBAChB,kBAAC,KAAD,CAAkBM,QAAS,kBAAMzD,EAAMoC,6BAG3C,yBAAKe,UAAU,eACb,0BACE6b,SAAU,SAACxkB,IAhDM,SAACA,GACxBA,EAAEykB,iBAIF,IAAMC,EAAiB,GAKjBC,EAAmBL,GAAqB9e,EAAM3M,QAVtB,uBAgB9B,YAAuB8rB,EAAvB,+CAAyC,CAAC,IAA/BC,EAA8B,QACvCF,EAAeE,GAAYpf,EAAMof,IAjBL,kFAuB9Bpf,EAAM0c,UAAU,CACd7N,KAAM7O,EAAM5D,WACZD,YAAa6D,EAAM9D,kBACnBoD,OAAO,eACF4f,KAOPlf,EAAM4e,cAAc,IACpB5e,EAAM2e,qBAAqB,IAC3B3e,EAAMoC,wBAaEid,CAAiB7kB,KAGnB,2BAAO2I,UAAU,uBACf,+BACE,4BACE,wBAAIA,UAAU,4BAAd,eACA,wBAAIA,UAAU,4BAAd,eACA,wBAAIA,UAAU,6DAAd,SAIF,4BACE,wBAAIA,UAAU,6BACZ,2BACEA,UAAU,4BACVmc,UAAQ,EACRrZ,MAAOjG,EAAM5D,WACb2N,SAAU,SAACvP,GAAD,OAAOwF,EAAM4e,cAAcpkB,EAAEa,OAAO4K,QAC9C3S,KAAK,OACLub,KAAK,OACL0Q,YAAY,iBAGhB,wBAAIpc,UAAU,6BACZ,2BACEA,UAAU,4BACVmc,UAAQ,EACRrZ,MAAOjG,EAAM9D,kBACb6N,SAAU,SAACvP,GAAD,OAAOwF,EAAM2e,qBAAqBnkB,EAAEa,OAAO4K,QACrD3S,KAAK,OACLub,KAAK,cACL0Q,YAAY,iBAGhB,wBAAIpc,UAAU,+DACZ,4BACEA,UAAU,oCACV7P,KAAK,UAEL,kBAAC,KAAD,aAQd,yBAAK6P,UAAU,8DACb,4BACEA,UAAU,mCACVM,QAAS,kBAAMzD,EAAMoC,0BAFvB,cClFFmB,GAAoB,CACxBnB,0BAGaoB,gBATS,SAAClL,GAAD,MAAY,CAClC2C,gBAAiB3C,EAAM4G,KAAKjE,gBAC5B+D,gBAAiB1G,EAAM0G,mBAOeuE,GAAzBC,EA5BI,SAACxD,GAMlB,OAAIA,EAAM/E,iBAAmB+E,EAAMhB,gBAE/B,yBAAKmE,UAAU,gBAAgBM,QAAS,SAACjJ,GAAD,OAPxB,SAACA,GACQ,kBAAvBA,EAAEa,OAAO8H,WACXnD,EAAMoC,wBAKyCvK,CAAY2C,KACzD,yBAAK2I,UAAU,SACb,kBAAC,GAAD,QAIGnD,EAAMhB,gBACR,kBAAC,GAAD,CAAiC1L,KAAM,SAClC,QC1BV2M,GAAQ,WACZ,IAAI3G,EAAW,6BAoIf,MAAO,CACLkmB,sBAlC4B,SAC5Bte,EACAue,EACAtB,EACAuB,GAEA,IAAIC,EACJ,GAAmB,aAAfxB,EAA2B,CAC7B,GAAqB,YAAjBuB,EAGF,OAFAC,EAAc1f,GAAK2f,oBAAoB1e,EAAWue,GAClDE,EAAc1f,GAAK4f,YAAY3e,EAAWye,GAErC,GAAqB,WAAjBD,EAIT,OAHAC,EAAc1f,GAAK2f,oBAAoB1e,EAAWue,GAClDE,EAAc1f,GAAK4f,YAAY3e,EAAWye,GAC1CA,EAAc1f,GAAK0M,WAAWgT,GAAa,GAAM,QAG9C,GAAmB,WAAfxB,EAAyB,CAClC,GAAqB,YAAjBuB,EAGF,OAFAC,EAAc1f,GAAK2f,oBAAoB1e,EAAWue,IAClDE,EAAc1f,GAAK4f,YAAY3e,EAAWye,IACvBvf,cACd,GAAqB,WAAjBsf,EAIT,OAHAC,EAAc1f,GAAK2f,oBAAoB1e,EAAWue,GAClDE,EAAc1f,GAAK4f,YAAY3e,EAAWye,QAEtBlT,KADpBkT,EAAc1f,GAAK0M,WAAWgT,GAAa,GAAM,KACA,OAAhBA,EAA6B,GACvDA,EAAYvf,gBAOvBuM,WA/GiB,SAAC1T,EAAO6mB,EAAaC,EAAeC,GAErD,KADA/mB,EAAQA,EAAM+L,aACiB,IAAjB/L,EAAMc,OAAc,OAAO,KACzC,IAII4lB,EAJEM,EAAWhnB,EAAMmH,cAAcuJ,MAAM,IA4B3C,OA1BKqW,IAAQA,EAAS1mB,GAIlBwmB,EACEC,EACFJ,EAAc1mB,EACX0Q,MAAM,IACN/O,QACC,SAACyF,GAAD,OAAkD,IAAxC2f,EAAO1f,QAAQD,EAAKD,gBAAkC,MAATC,KAEjD0f,IACVJ,EAAcM,EAASrlB,QACrB,SAACyF,GAAD,OAAoC,IAA1B2f,EAAO1f,QAAQD,IAAyB,MAATA,MAGnCyf,IACNC,EACFJ,EAAc1mB,EACX0Q,MAAM,IACN/O,QAAO,SAACyF,GAAD,OAAkD,IAAxC2f,EAAO1f,QAAQD,EAAKD,kBAC9B2f,IACVJ,EAAcM,EAASrlB,QAAO,SAACyF,GAAD,OAAoC,IAA1B2f,EAAO1f,QAAQD,QAIpDsf,EAAYnf,KAAK,KAiFxBqf,YA3EkB,SAAC5mB,EAAOG,GAC1BH,EAAQA,EAAM0Q,MAAM,IACpBvQ,EAASA,EAAOuQ,MAAM,IAItB,IAFA,IAAIuW,EAAkB,GAEbrjB,EAAI,EAAGA,EAAI5D,EAAMc,OAAQ8C,IAC5BzD,EAAOyD,IAAM5D,EAAM4D,KACrB5D,EAAM4D,GAAGuD,gBAAkBnH,EAAM4D,GAC7BqjB,EAAgB3f,KAAKnH,EAAOyD,GAAGuD,eAC/B8f,EAAgB3f,KAAKnH,EAAOyD,GAAGwE,gBAIvC,OAAO6e,EAAgB1f,KAAK,KA8D5Bof,oBAxD0B,SAAC3mB,EAAOG,GAClCH,EAAQknB,OAAOlnB,GACfG,EAAS+mB,OAAO/mB,GAEhB,IAAI6L,EAAQ,EACRmb,EAA0B,GALe,uBAO7C,YAAsBnnB,EAAtB,+CAA6B,CAAC,IAArB0R,EAAoB,SACwB,IAA/CrR,EAASgH,QAAQqK,EAAUvK,gBAC7BggB,EAAwB7f,KAAKnH,EAAO6L,IACpCA,MACwD,IAA/C3L,EAASgH,QAAQqK,EAAUvK,gBACpCggB,EAAwB7f,KAAKoK,IAZY,kFAgB7C,OAAOyV,EAAwB5f,KAAK,KAyCpC6f,WArIiB,SAAC9jB,EAAGC,GACrBD,GAAKC,EACL,IAAK,IAAImB,EAAI,EAAGA,EAAInB,EAAGmB,IACrB,GAAKpB,EAAIoB,EAAKnB,IAAM,EAClB,OAAOmB,GAkIX2iB,0BA7HgC,SAACrnB,GAEjC,OADAA,EAAQA,EAAM+L,aACiB,IAAjB/L,EAAMc,OACHd,EAAMmH,cAAcuJ,MAAM,IACd/O,QAC3B,SAACyF,GAAD,OAAsC,IAA5B/G,EAASgH,QAAQD,MAHY,KAhB/B,GA+ICJ,MCqFA8Z,GAlOC,WAEd,IAAI7Y,EACFqf,EACAjnB,EACAN,EACAH,EACA6mB,EACAvB,EAUIqC,EAAgB,SAACvnB,GACrBklB,EAAallB,GAGTwnB,EAAc,SAACxnB,GACnBK,EAAWL,EAAM0Q,MAAM,KAOnB+W,EAAe,SAACznB,GACpBD,EAAYC,GAGR0nB,EAAc,SAACC,GACnB/nB,EAAW+nB,GAGPC,EAAS,SACbhoB,EACAI,EACAK,EACAP,EACAC,EACAE,EACAilB,GAEAwC,EAAY9nB,GArCO,SAACI,GACpBiI,EAAYif,OAAOlnB,GAqCnB6nB,CAAa7nB,GACbwnB,EAAYnnB,GAnCO,SAACL,GACpBsnB,EAAY1mB,OAAOZ,GAmCnB8nB,CAAahoB,GACb2nB,EAAa1nB,GAzBS,SAACC,GACvBymB,EAAezmB,EAyBf+nB,CAAgB9nB,GAChBsnB,EAAcrC,IAMV8C,EAAY,SAAC5gB,GACjB,IAAM4E,EAAQ3L,EAASgH,QAAQD,GAC3B6gB,EAAW5nB,EAASS,OAExB,MAAkB,YAAdf,EACEiM,EAAQsb,EAAYW,EACfjc,EAAQsb,EAERtb,EAAQsb,EAAYW,EAGzBjc,EAAQsb,GAAa,EAChBtb,EAAQsb,EAERtb,EAAQsb,EAAYW,GAK3BC,EAAW,WACf,GAAKjgB,EAAL,CACA,IAAMkgB,EAAiB,GAEnBzU,EAAa1M,GAAK0M,WAAWzL,GAAW,GAAO,EAAO5H,GAJrC,uBAMrB,YAAiBqT,EAAjB,+CAA6B,CAAC,IACxB0U,EADuB,QACNjhB,cACjB6E,EAAQgc,EAAUI,GAClBC,EAAgBhoB,EAAS2L,GAC7Bmc,EAAe7gB,KAAK+gB,IAVD,kFAarB,OAAOF,EAAe5gB,KAAK,MAMvB+gB,EAAgB,SAACphB,EAAWqhB,GAChC,IAAMJ,EAAiB,GADkB,uBAEzC,YAAmBjhB,EAAnB,+CAA8B,CAAC,IAApBE,EAAmB,QACtBghB,EAAYhhB,EAAKD,cACvB,GAAI9G,EAASmoB,SAASJ,GAAY,CAChC,IAAMK,EAAWC,EAAeN,EAAWG,GACvCH,IAAchhB,EAChB+gB,EAAe7gB,KAAKjH,EAASooB,IAE7BN,EAAe7gB,KAAKjH,EAASooB,GAAUrgB,oBAEpC+f,EAAe7gB,KAAKF,IAXY,kFAazC,OAAO+gB,EAAe5gB,KAAK,KAGvBmhB,EAAiB,SAACthB,EAAMkgB,GAC5B,IAAMtb,EAAQ3L,EAASgH,QAAQD,GAC/B,OAAI4E,EAAQsb,EAAYjnB,EAASS,OACxBkL,EAAQsb,EAERtb,EAAQsb,EAAYjnB,EAASS,QA8BlC6nB,EAAoB,SAACC,GAIzB,IAHA,IAEIC,EADAC,EAAU,EAEd,MAHalW,OAAOC,KAAK+V,GAGzB,eAAwB,CAAnB,IAAMtX,EAAG,KACRsX,EAAqBtX,GAAKO,MAAQiX,IACpCA,EAAUF,EAAqBtX,GAAKO,MACpCgX,EAAS,GAAKD,EAAqBtX,GAAKuX,QAI5C,OA1BoB,SAACC,EAASD,GAC9B,OAAgB,IAAZC,EACI,4HAAN,OAAmI7gB,EAAnI,KAEK8gB,EACL,KACA9gB,EACA5H,EAASkH,KAAK,IACdshB,EACA,UACA3D,EACAuB,GAeKuC,CAAcF,EAASD,IAG1BI,EAAmB,WACvB,GAAKhhB,EAAL,CACA,IAAIihB,EA1CmB,WAGvB,IAFA,IAAIvhB,EAAM,GACJwhB,EAAYniB,GAAK0M,WAAWzL,GAAW,GAAM,GAC1CrE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IACMkE,EAAawgB,EAAca,EADtBvlB,GAEX+D,EAAIL,KAAK,CAACQ,EAAW4I,MAAM,KAAM9M,IAEnC,OAAO+D,EAkCUyhB,GACbR,EAAuB,GACvB9K,EAAU,EAJe,uBAM7B,YAAmBoL,EAAnB,+CAA+B,CAAC,IAAvB/oB,EAAsB,QAC7ByoB,EAAqB9K,GAAW,GAChC8K,EAAqB9K,GAASjM,MAAQ,EAFT,2BAG7B,YAAiB1R,EAAO,GAAxB,+CAA4B,CAAC,IAApBkpB,EAAmB,QAC1BT,EAAqB9K,GAAS+K,OAAS1oB,EAAO,GAC1CP,EAASypB,IACXT,EAAqB9K,GAASjM,SANL,kFAS7BiM,KAf2B,kFAiB7B,OAAO6K,EAAkBC,KAGrBU,EAAe,WACnB,QAAOjpB,EAASS,OAAS,KAGrBioB,EAAU,SACdnpB,EACAI,EACAK,EACAP,EACAC,EACAmlB,EACAjlB,GAWA,GATA2nB,EACEhoB,EACAI,EACAK,EACAP,EACAC,EACAE,EACAilB,GAEgB,UAAdnlB,EAAuB,CACzB,IAAMymB,EAAY0B,IAClB,OAAIoB,IACKtiB,GAAKuf,sBACVte,EACAue,EACAtB,EACAuB,GAEUD,EAEd,MAAiB,SAAb5mB,EACKqpB,IACF,0BAIX,MAAO,CACLF,QAASA,GA9NG,GCmHDpoB,GAnHC,WAGd,IAAIsH,EAAW5H,EAAUomB,EAAc8C,EAAOC,EAAMC,EAgB9CjC,EAAc,SAACxnB,GACnBK,EAAWL,EAAM0Q,MAAM,KAsBnBkX,EAAS,SAACvnB,EAAUL,EAAO0pB,EAAaC,EAAY1pB,GACxDunB,EAAYnnB,GAtCO,SAACL,GACpBiI,EAAYjI,EAAM+L,WAClB,IAAM2H,EAAa1M,GAAKqgB,0BAA0Bpf,GAClDwhB,EAAiB/V,EAAWnM,KAAK,IAoCjCsgB,CAAa7nB,GAjCE,SAACA,GAChBupB,EAAQ3oB,OAAOZ,GAiCf4pB,CAASF,GA9BK,SAAC1pB,GACfwpB,EAAO5oB,OAAOZ,GA8Bd6pB,CAAQF,GAvBc,SAAC3pB,GACvBymB,EAAezmB,EAuBf+nB,CAAgB9nB,IAGZ8oB,EAAU,WAEd,IADA,IAAMphB,EAAM,GACH/D,EAAI,EAAGA,EAAI6lB,EAAe3oB,OAAQ8C,IAAK,CAC9C,IAAMwD,EAAOqiB,EAAe7lB,GAC5B,IAAgC,IAA5BvD,EAASgH,QAAQD,GAAc,CACjC,IAAM0iB,GACHP,EAAQlpB,EAASgH,QAAQD,GAAQoiB,GAAQnpB,EAASS,OAC/C4Q,EAAYrR,EAASypB,QACTtW,IAAd9B,EACF/J,EAAIL,KAAKF,GACJO,EAAIL,KAAKoK,QACX/J,EAAIL,KAAKmiB,EAAe7lB,IAEjC,OAAO+D,EAAIJ,KAAK,KAGZwiB,EAAU,WAGd,IAFA,IAvCczmB,EAAGC,EAuCXoE,EAAM,GACNqiB,EAnCW,SAAC1mB,EAAGC,GACrBD,GAAKC,EACL,IAAK,IAAImB,EAAI,EAAGA,EAAInB,EAAGmB,IACrB,GAAKpB,EAAIoB,EAAKnB,IAAM,EAClB,OAAOmB,EA+BU0iB,CAAWmC,EAAOlpB,EAASS,QACvC8C,EAAI,EAAGA,EAAI6lB,EAAe3oB,OAAQ8C,IAAK,CAC9C,IAAMwD,EAAOqiB,EAAe7lB,GAC5B,IAAgC,IAA5BvD,EAASgH,QAAQD,GAAc,CACjC,IAAM6iB,EAAY5pB,EAASgH,QAAQD,GAC7B8iB,GA7CI5mB,EA8CR0mB,GAAgBC,EAAYT,GA9CjBjmB,EA+CXlD,EAASS,QA9CNwC,EAAIC,EAAKA,GAAKA,GAgDflD,EAAS6pB,GACXviB,EAAIL,KAAKjH,EAAS6pB,IAElBviB,EAAIL,KAAKF,QAGXO,EAAIL,KAAKF,GAGb,OAAOO,EAAIJ,KAAK,KAwBlB,MAAO,CACLwhB,QAtBgB,SAChB1oB,EACAL,EACA0pB,EACAC,EACA5pB,EACAE,EACAilB,GAEA0C,EAAOvnB,EAAUL,EAAO0pB,EAAaC,EAAY1pB,GAEjD,IAAMumB,EAA0B,YAAdzmB,EAA0BgpB,IAAYgB,IAExD,OAAO/iB,GAAKuf,sBACVte,EACAue,EACAtB,EACAuB,KA1GU,GCsMD0D,GAxMG,WAGhB,IAAIliB,EAAW5H,EAAUsF,EAAoBD,EAUzC0kB,EAKAC,EATE7C,EAAc,SAACxnB,GACnBK,EAAWL,GASPsqB,EAAgB,SAACtqB,GACrBqqB,EAAarqB,GAGTuqB,EAAwB,WAC5B,OAAO5kB,GAGH6kB,EAA0B,WAC9B,OAAO9kB,GAGH+kB,EAAiB,WACI,kBAAdL,IAAwBA,EAAYA,EAAU1Z,MAAM,KAE/D,IADA,IAAM/I,EAAM,GACH/D,EAAI,EAAGA,EAAIwmB,EAAUtpB,OAAQ8C,KAEgB,IAAlDvD,EAASgH,QAAQ+iB,EAAUxmB,GAAGuD,gBAC7BQ,EAAI6gB,SAAS4B,EAAUxmB,GAAGuD,gBACI,MAA/BijB,EAAUxmB,GAAGuD,eAEbQ,EAAIL,KAAK8iB,EAAUxmB,GAAGuD,eAG1B,IAAK,IAAIvD,EAAI,EAAGA,EAAIvD,EAASS,OAAQ8C,IAC9B+D,EAAI6gB,SAASnoB,EAASuD,KAAuB,MAAhBvD,EAASuD,IACzC+D,EAAIL,KAAKjH,EAASuD,IAItB,IADA,IAAMiN,EAAS,GACNjN,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BiN,EAAOvJ,KAAK,IACZ,IAAK,IAAIzD,EAAI,EAAGA,EAAI,EAAGA,IACrBgN,EAAOjN,GAAG0D,KAAKK,EAAQ,EAAJ/D,EAAQC,IAG/B,OAAOgN,GAGH6Z,EAAkB,SAACzK,GACvB,IAAI0K,EACFC,EACAhnB,EAAI,EACFinB,EAAYJ,IAJkB,uBAKlC,YAAoBI,EAApB,+CAA+B,CAAC,IAAvB9iB,EAAsB,QAC7B,GAAIA,EAAQygB,SAASvI,EAAO9Y,eAAgB,CAC1CwjB,EAAO/mB,EAAI,EACXgnB,EAAO7iB,EAAQV,QAAQ4Y,EAAO9Y,eAAiB,EAC/C,MACKvD,KAVyB,kFAYlC,MAAM,GAAN,OAAU+mB,GAAV,OAAiBC,IAGbE,EAAiB,SAACzc,GAEtB,IADA,IAAI0c,EAAQ,GACHnnB,EAAI,EAAGA,EAAIyK,EAAKvN,OAAQ8C,KACkB,IAA7CvD,EAASgH,QAAQgH,EAAKzK,GAAGuD,iBACvB1F,MAAMipB,EAAgBrc,EAAKzK,KAAMmnB,EAAMzjB,KAAKojB,EAAgB,MAC3DK,EAAMzjB,KAAKojB,EAAgBrc,EAAKzK,MAGzC,OAAOmnB,GAGHC,EAAa,WAGjB,MAAO,CAFUF,EAAe7iB,GACjB6iB,EAAeT,KAwD1BN,EAAU,WACd,IAAIkB,EAAcD,IAAa,GAC3BE,EAAajjB,EAAUyI,MAAM,KACjC,GAA6B,IAAzBwa,EAAW,GAAGpqB,OAAc,MAAO,GAEvC,IAAIqqB,EAAc,GACdrX,EAAM,EAEV,GAAIoX,EAAWpqB,OAASmqB,EAAYnqB,OAClC,IAAK,IAAI8C,EAAI,EAAGA,EAAIsnB,EAAWpqB,OAAQ8C,IACjCkQ,EAAMmX,EAAYnqB,OAAS,GAC7BqqB,EAAY7jB,KAAK2jB,EAAYnX,IAC7BA,MAEAqX,EAAY7jB,KAAK2jB,EAAYnX,IAC7BA,EAAM,QAGLqX,EAAcF,EAKrB,MAAO,CAnCsB,SAACG,GAC9B,IAAMva,EAAS4Z,IAETY,EAAiB,GAHmB,uBAI1C,YAAmBD,EAAnB,+CAA4B,CAAC,IAApB9M,EAAmB,QACtBgN,EAAUpE,OAAO5I,GAAQ5N,MAAM,IAC/BuP,EAASpP,EAAOjQ,OAAO0qB,EAAQ,IAAM,GAAG1qB,OAAO0qB,EAAQ,IAAM,GACjED,EAAe/jB,KAAK2Y,IAPoB,kFAS1C,OAAOoL,EAwBeE,CAzCS,SAACL,EAAYC,GAE5C,IADA,IAAIK,EAAgB,GACX5nB,EAAI,EAAGA,EAAIsnB,EAAWpqB,OAAQ8C,IACrC4nB,EAAclkB,KAAK4jB,EAAWtnB,GAAKunB,EAAYvnB,IAEjD,OAAO4nB,EAmCYC,CAAyBP,EAAYC,IAItC5jB,KAAK,IACrBkjB,IACAF,IACAC,MAeE5C,EAAS,SAAC5nB,EAAOK,EAAUqrB,EAASrB,IAnLrB,SAACrqB,GACpBiI,EAAYif,OAAOlnB,GAmLnB6nB,CAAa7nB,GACbwnB,EAAYnnB,GA5KO,SAACL,GACpBoqB,EAAYpqB,EA4KZ2rB,CAAaD,GACbpB,EAAcD,IAGhB,MAAO,CACLzC,OAAQA,EACRmB,QApBoB,SAAC/oB,EAAOK,EAAUN,EAAW2rB,EAASrB,GAE1D,GADAzC,EAAO5nB,EAAOK,EAAUqrB,EAASrB,GACP,IAAtBA,EAAWvpB,OAAc,MAAO,2BACpC,IAAK,IAAI8C,EAAI,EAAGA,EAAIvD,EAASS,OAAQ8C,IACnC,GAAInC,MAAMb,OAAOqH,EAAUrE,MAAsB,YAAd7D,EACjC,MAAO,oBAGX,MAAqB,YAAdA,EA3FO,WACd,IAAIkrB,EAAcD,IACdG,EAAc,GACdrX,EAAM,EACV,GAAImX,EAAY,GAAGnqB,OAASmqB,EAAY,GAAGnqB,OACzC,IAAK,IAAI8C,EAAI,EAAGA,EAAIqnB,EAAY,GAAGnqB,OAAQ8C,IACrCkQ,EAAMmX,EAAY,GAAGnqB,OAAS,GAChCqqB,EAAY7jB,KAAK2jB,EAAY,GAAGnX,IAChCA,MAEAqX,EAAY7jB,KAAK2jB,EAAY,GAAGnX,IAChCA,EAAM,QAGLqX,EAAcF,EAAY,GAEjCtlB,EAAqBwlB,EACrBzlB,EAAuBulB,EAAY,GAGnC,IADA,IAAIpN,EAAM,GACDja,EAAI,EAAGA,EAAIqnB,EAAY,GAAGnqB,OAAQ8C,IACzCia,EAAIvW,KAAK1G,OAAOqqB,EAAY,GAAGrnB,IAAMhD,OAAOuqB,EAAYvnB,KAG1D,MAAO,CACLia,EAAItW,KAAK,KACTkjB,IACAF,IACAC,KA+D+BzB,GAAYgB,KAa7C6B,UAAWnB,EACXF,wBACAC,2BApMc,GC8KHvJ,GA9KG,WAGhB,IAAIhZ,EAAW5H,EAAUN,EAAW0mB,EAAcjmB,EAM5CgnB,EAAc,SAACxnB,GACnBK,EAAWL,EAAM0Q,MAAM,IAEvBrQ,GADAA,EAAW,YAAI,IAAIqY,IAAIrY,IAAWkH,KAAK,KACnB7H,QAAQ,iBAAkB,KAO1C+nB,EAAe,SAACznB,GACpBD,EAAYC,GAOR6rB,EAAkB,SAACtD,EAAMY,GAG7B,IAFA,IAAM2C,EAAY,GACdloB,EAAI,EACDulB,EAAUroB,QAAUgrB,EAAUhrB,QAC/B8C,IAAM2kB,EAAKznB,SAAQ8C,EAAI,GAC3BkoB,EAAUxkB,KAAKihB,EAAK3kB,IACpBA,IAEF,OAAOkoB,GAGHC,EAAwB,SAAC3kB,GAG7B,IAFA,IAAI4E,EAAQ3L,EAASgH,QAAQD,GACvB4kB,EAAc,GACbA,EAAYlrB,OAAS,IAC1BkrB,EAAY1kB,KAAKjH,EAAS2L,IACZ,KAAVA,EACFA,EAAQ,EACCA,EAAQ,IAAIA,IAEzB,OAAOggB,GAGHC,EAA2B,SAAC9C,EAAWZ,EAAMvc,GACjD,IAAM5E,EAAO+hB,EAAUnd,GACjBkgB,EAAaL,EAAgBtD,EAAMY,GAAWnd,GAGpD,OAFoB+f,EAAsBG,GACH7rB,EAASgH,QAAQD,KAIpD+kB,EAA2B,SAAChD,EAAWZ,EAAMvc,GACjD,IAAM5E,EAAO+hB,EAAUnd,GACjBkgB,EAAaL,EAAgBtD,EAAMY,GAAWnd,GAC9CogB,EAAcL,EAAsBG,GAC1C,OAAO7rB,EAAS+rB,EAAY/kB,QAAQD,KAqChCilB,EAAgB,SAACnlB,EAAWY,GAEhC,IADA,IAAI3H,EAAS,GACJyD,EAAI,EAAGA,EAAIsD,EAAUpG,OAAQ8C,IAChCkE,EAAWlE,KACbsD,EAAUtD,GAAGwE,gBAAkBlB,EAAUtD,GACrCzD,EAAOmH,KAAKQ,EAAWlE,GAAGwE,eAC1BjI,EAAOmH,KAAKQ,EAAWlE,GAAGuD,gBAGlC,OAAOhH,EAAOoH,KAAK,KAGfN,EAAc,SAACC,EAAWolB,GAG9B,IAAInsB,EAAS,GAH4B,uBAIzC,YAAiB+G,EAAjB,+CAA4B,CAAC,IAApBE,EAAmB,SACX,IAAXklB,GAC4C,IAA1CjsB,EAASgH,QAAQD,EAAKD,gBACxBhH,EAAOmH,KAAKF,IAEM,IAAXklB,KACqC,IAA1CjsB,EAASgH,QAAQD,EAAKD,gBAAkC,MAATC,GACjDjH,EAAOmH,KAAKF,KAXuB,kFAezC,OAAOjH,EAAOoH,KAAK,KAGfM,EAAW,SAACC,EAAYZ,GAC5BA,EAAYA,EAAUC,cACtB,IAAIhH,EAAS,GACTyD,EAAI,EAHkC,uBAI1C,YAAoBsD,EAApB,+CAA+B,CAAC,IAAvBa,EAAsB,SACM,IAA/B1H,EAASgH,QAAQU,GACnB5H,EAAOmH,KAAKS,IAEZ5H,EAAOmH,KAAKQ,EAAWlE,IACvBA,MATsC,kFAY1C,OAAOzD,EAAOoH,KAAK,KAGf2gB,EAAW,SAAChhB,EAAWqhB,GAE3B,IADA,IAAIla,EAAO,GACFzK,EAAI,EAAGA,EAAIsD,EAAUpG,OAAQ8C,KACI,IAApCvD,EAASgH,QAAQH,EAAUtD,IAC7ByK,EAAK/G,KAAKJ,EAAUtD,IAEF,YAAd7D,EACFsO,EAAK/G,KAAK2kB,EAAyB/kB,EAAWqhB,EAAM3kB,IAEpDyK,EAAK/G,KAAK6kB,EAAyBjlB,EAAWqhB,EAAM3kB,IAI1D,OAAOyK,GAGHuZ,EAAS,SAAC5nB,EAAOK,EAAUN,EAAWE,EAAcyrB,IA3JrC,SAAC1rB,GACpBiI,EAAYif,OAAOlnB,GA2JnB6nB,CAAa7nB,GACbwnB,EAAYnnB,GACZonB,EAAa1nB,GApJS,SAACC,GACvBymB,EAAezmB,EAoJf+nB,CAAgB9nB,GA7IC,SAACD,GAClBQ,EAAkBR,EAAMmH,cA6IxBolB,CAAWb,IAGb,MAAO,CACL9D,OAAQA,EACRmB,QAzGoB,SACpB/oB,EACAK,EACAN,EACAE,EACAilB,EACAwG,GAEA,GAAuB,IAAnBA,EAAQ5qB,OACV,MAAO,yBAGT8mB,EAAO5nB,EAAOK,EAAUN,EAAWE,EAAcyrB,GACjD,IAAMc,EAAmBvlB,EAAYgB,EAAUd,eAAe,GAC1DW,EAAaogB,EAASsE,EAAkBhsB,GAG5C,GADAsH,EAAaD,EAASC,EAAYG,GACf,WAAfid,EAAyB,CAC3B,GAAqB,YAAjBuB,EACF,OAAO3e,EACF,GAAqB,WAAjB2e,EACT,OAAOxf,EAAYa,GAAY,QAE5B,GAAmB,aAAfod,EAA2B,CACpC,GAAqB,YAAjBuB,EACF,OAAO4F,EAAcpkB,EAAWH,GAC3B,GAAqB,WAAjB2e,EACT,OAAOxf,EAAYolB,EAAcpkB,EAAWH,IAAa,MA5F/C,GC+OH2kB,GA/OG,WAGhB,IAAIxkB,EAAW5H,EAAUN,EAAWqqB,EAGhCtE,EAEE8F,EAAY,kBAAM9F,GAMlB0B,EAAc,SAACxnB,GACnBK,EAAWL,EAAM0Q,MAAM,KAGnB+W,EAAe,SAACznB,GACpBD,EAAYC,GAyBR0sB,EAAmB,SAAC3kB,EAAS4kB,GAKjC,IAFA,IAAIzsB,EAAQ,GAEH0D,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMoI,EAAQjE,EAAQV,QAAQslB,EAAS/oB,IACvC,GAAc,IAAVoI,EACgB,YAAdjM,EACFG,EAAMoH,KAAKS,EAAQ,IAEnB7H,EAAMoH,KAAKS,EAAQ,SAGrB,GAAkB,YAAdhI,EAAyB,CAC3B,IAAI6sB,EAAW5gB,EAAQ,EACnB4gB,EAAW,IAAGA,EAAW,GAC7B1sB,EAAMoH,KAAKS,EAAQ6kB,SAEnB1sB,EAAMoH,KAAKS,EAAQiE,EAAQ,IAIjC,OAAO9L,GAGH2sB,EAAe,SAACxsB,EAAUssB,GAC9B,IAAMG,EA7CkB,SAACzsB,GAMzB,IAHA,IAAMysB,EAAmB,GACrBC,EAAO,GAEFnpB,EAAI,EAAGA,GAAKvD,EAASS,OAAQ8C,IAC1B,IAANA,GAAWA,EAAI,IAAM,EACvBmpB,EAAKzlB,KAAKjH,EAASuD,IACVmpB,EAAK,KACdD,EAAiBxlB,KAAKylB,IACtBA,EAAO,IACFzlB,KAAKjH,EAASuD,KAGvB,OAAOkpB,EA8BkBE,CAAkB3sB,GADA,uBAO3C,YAAoBysB,EAApB,+CAAsC,CAAC,IAA9B/kB,EAA6B,QACpC,IACoC,IAAlCA,EAAQV,QAAQslB,EAAS,MACS,IAAlC5kB,EAAQV,QAAQslB,EAAS,IAGzB,OAAOD,EAAiB3kB,EAAS4kB,IAbM,kFAsB3C,IAFA,IAAMM,EAA0B,GAEvBrpB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAIspB,EAAY,GACPrpB,EAAI,EAAGA,EAAI,EAAGA,IACrBqpB,EAAU5lB,KAAKwlB,EAAiBjpB,GAAGD,IAErCqpB,EAAwB3lB,KAAK4lB,GAC7BA,EAAY,GAKd,cAAoBD,EAApB,eAA6C,CAAxC,IAAIllB,EAAO,KACd,IACoC,IAAlCA,EAAQV,QAAQslB,EAAS,MACS,IAAlC5kB,EAAQV,QAAQslB,EAAS,IAEzB,OAAOD,EAAiB3kB,EAAS4kB,GAQrC,IAcIQ,EACAC,EAfEC,EAAU,GACZC,EAAQX,EAAS,GACjBY,EAAQZ,EAAS,GAhDsB,uBAkD3C,YAAoBG,EAApB,+CAAsC,CAAC,IAA9B/kB,EAA6B,SACJ,IAA5BA,EAAQV,QAAQimB,GAClBD,EAAQ,GAAKtlB,EAAQV,QAAQimB,IACQ,IAA5BvlB,EAAQV,QAAQkmB,KACzBF,EAAQ,GAAKtlB,EAAQV,QAAQkmB,KAtDU,6GA+D3C,YAAoBT,EAApB,+CAAsC,CAAC,IAA9B/kB,EAA6B,SACJ,IAA5BA,EAAQV,QAAQimB,KAClBH,EAAiBplB,EAAQslB,EAAQ,MAEH,IAA5BtlB,EAAQV,QAAQkmB,KAClBH,EAAiBrlB,EAAQslB,EAAQ,MApEM,kFAuE3C,MAAO,CAACF,EAAgBC,IAGpBrB,EAAwB,WAC5B,IAIMza,EAAG,YAAO,IAAIoH,IAAI0R,IALU,uBAMlC,YAAiB/pB,EAAjB,+CAA2B,CAAC,IAAnB+G,EAAkB,SACE,IAAvBkK,EAAIjK,QAAQD,IACdkK,EAAIhK,KAAKF,IARqB,kFAclC,IAAMO,EAAM,GAdsB,uBAgBlC,YAAiB2J,EAAjB,+CAAsB,CAAC,IAAdlK,EAAa,QA3JJ,MA4JZA,IAAgD,IAA5B/G,EAASgH,QAAQD,IACvCO,EAAIL,KAAKF,IAlBqB,kFAsBlC,OADA0e,EAAane,EACNA,GA6BHV,EAAc,WAClB,IAAIC,EAAYe,EAAUd,cACtBhH,EAAS,GAFW,uBAGxB,YAAiB+G,EAAjB,+CAA4B,CAAC,IAApBE,EAAmB,SACM,IAA5B/G,EAASgH,QAAQD,IACnBjH,EAAOmH,KAAKF,IALQ,kFAQxB,OAAOjH,EAAOoH,KAAK,KAsBfqgB,EAAS,SAAC5nB,EAAOK,EAAUN,EAAW2rB,IAvNvB,SAAC1rB,GACpBiI,EAAYif,OAAOlnB,GAuNnB6nB,CAAa7nB,GACbwnB,EAAYnnB,GACZonB,EAAa1nB,GA9MM,SAACC,GACpBoqB,EAAYpqB,EA8MZ2rB,CAAaD,IAGf,MAAO,CACLE,UAAWA,EACXhE,OAAQA,EACRmB,QA7BoB,SAAC/oB,EAAOK,EAAUN,EAAW2rB,GACjD9D,EAAO5nB,EAAOK,EAAUN,EAAW2rB,GAEnC,IACM8B,EAzCe,SAACtmB,GAMtB,IALA,IAAMumB,EAAiB,GACjBC,EAAS,YAAOxmB,GAIbtD,EAAI,EAAGA,EAAI8pB,EAAU5sB,OAAQ8C,GAAK,EACrC8pB,EAAU9pB,KAAO8pB,EAAU9pB,EAAI,IACjC8pB,EAAU9lB,OAAOhE,EAAI,EAAG,EA7KV,KAmLd8pB,EAAU5sB,OAAS,IAAM,GAC3B4sB,EAAUpmB,KApLM,KAyLlB,IAAK,IAAI1D,EAAI,EAAGA,EAAI8pB,EAAU5sB,OAAQ8C,GAAK,EACzC6pB,EAAenmB,KAAK,CAAComB,EAAU9pB,GAAI8pB,EAAU9pB,EAAI,KAEnD,OAAO6pB,EAkBOE,CADK1mB,KAEb2mB,EAAc7B,IAGdrkB,EAAY,GAR2C,uBAU7D,YAAoB8lB,EAApB,+CAA2B,CAAC,IAAnBzlB,EAAkB,QACzBL,EAAUJ,KAAKulB,EAAae,EAAa7lB,KAXkB,kFAgB7D,MAAO,CAFWL,EAAUH,KAAK,IAAImJ,MAAM,KAAKnJ,KAAK,IAEhCqkB,OA9NP,GCoHH1K,GApHA,WAGb,IAAIjZ,EAEE4lB,EAAa,CACjBvqB,EAAG,KACHC,EAAG,OACHC,EAAG,OACHpC,EAAG,MACHG,EAAG,IACHkC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,KACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,KACH1C,EAAG,KACH2C,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,MACHC,EAAG,IACHC,EAAG,MACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACH,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACLkpB,OAAG,OACHC,OAAG,QACHC,OAAG,QACHC,OAAG,QACHC,OAAG,QACHC,OAAG,OACHC,OAAG,OACH,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SAgDP,MAAO,CACLrF,QAboB,SAAC/oB,EAAOD,GAG5B,OAFAkI,EAAYjI,EAEM,YAAdD,EApCU,SAACmrB,GACf,IAAMmD,EAAc,GADU,uBAE9B,YAAmBnD,EAAnB,+CAA+B,CAAC,IAArB9jB,EAAoB,QACvBknB,EAAYlnB,EAAKD,cACvB,GAAI0mB,EAAWS,GACbD,EAAY/mB,KAAKumB,EAAWS,GAAa,SACpC,IAAa,MAATlnB,EAGT,MAAO,CAACA,EAAM,mCAFdinB,EAAY/mB,KAAK,QAPS,kFAY9B,OAAO+mB,EA0BEtF,CADS,YAAO9gB,IACIV,KAAK,KAvBpB,SAAC2jB,GAGf,IAFA,IAAMmD,EAAc,GACdvP,EAASlM,OAAOkM,OAAO+O,GAFC,WAGrBjqB,GACP,IAAMwD,EAAO8jB,EAAWtnB,GACxB,GAAa,MAATwD,EACFinB,EAAY/mB,KAAK,UACZ,IAA8B,IAA1BwX,EAAOzX,QAAQD,GACxBinB,EAAY/mB,KACVsL,OAAOC,KAAKgb,GAAYU,MAAK,SAACjd,GAAD,OAASuc,EAAWvc,KAASlK,WAEvD,GAAIA,EACT,MAAM,CAAN,EAAO,CAAC,gDATHxD,EAAI,EAAGA,EAAIsnB,EAAWpqB,OAAQ8C,IAAK,CAAC,IAAD,IAAnCA,GAAmC,kCAY5C,OAAOyqB,EAWEtE,CADY9hB,EAAUumB,OAAO9d,MAAM,MACfnJ,KAAK,MA3GvB,GCoBA7H,GALN,CACLqpB,QALc,SAAC/oB,EAAOR,EAAiBC,GACvC,OAXkBgvB,EAWAjvB,EAXMkvB,EAWWjvB,EAXLkvB,GAWoB,EAAM3uB,EAVvCN,QACf,IAAIkvB,OACFH,EAAK/uB,QAAQ,gCAAiC,QAC9CivB,EAAS,KAAO,KAEH,iBAARD,EAAmBA,EAAKhvB,QAAQ,MAAO,QAAUgvB,GANzC,IAACD,EAAMC,EAAMC,ICiInB3tB,GAlIE,WACf,IAAIiH,EAAWid,EAAYnkB,EAAYhB,EAAWE,EAO5C4uB,EAAU,SAAC7hB,GACfkY,EAAalY,GAGTya,EAAe,SAACza,GACpBjN,EAAYiN,GAGR+a,EAAkB,SAAC/a,GACvB/M,EAAe+M,GAGX8hB,EAAgB,SAAC9hB,GACrBjM,EAAaiM,GAGT+hB,EAAoB,WACxB,OAAO/b,KAAK4K,KAAK3V,EAAUnH,OAASC,IAGhCiuB,EAAgB,WACpB,IAAIhvB,EAAQiI,EACZ,GAAqB,WAAjBhI,EAA2B,CAG7B,IAFA,IAAIgvB,EAAM,GAEDrrB,EAAI,EAAGA,EAAI5D,EAAMc,OAAQ8C,KACkB,IAFrC,6BAEAyD,QAAQrH,EAAM4D,GAAGuD,gBAAuB8nB,EAAI3nB,KAAKtH,EAAM4D,IAEtE5D,EAAQivB,EAAI1nB,KAAK,IAGnB,GAAkB,YAAdxH,EAAyB,CAG3B,IAFA,IAAMmvB,EAAa,CAAC,IAChBrrB,EAAI,EACCD,EAAI,EAAGA,EAAI5D,EAAMc,OAAQ8C,IAC5BA,EAAI7C,IAAe,GAAW,IAAN6C,GAC1BC,IACAqrB,EAAW5nB,KAAK,IAChB4nB,EAAWrrB,GAAGyD,KAAKtH,EAAM4D,KAEzBsrB,EAAWrrB,GAAGyD,KAAKtH,EAAM4D,IAK7B,IADA,IAAMurB,EAAgB,GACbvrB,EAAI,EAAGA,EAAI7C,EAAY6C,IAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIqrB,EAAWpuB,OAAQ+C,IACjCqrB,EAAWrrB,GAAGD,IAAIurB,EAAc7nB,KAAK4nB,EAAWrrB,GAAGD,IAa3D,MAAO,CAPY,WAAfshB,EACUiK,EAAc5nB,KAAK,IAAIJ,cAEvBgoB,EAAc5nB,KAAK,IAGbwnB,KAEf,GAAkB,YAAdhvB,EAAyB,CAClC,IAAMqvB,EAAcpc,KAAK4K,KAAK5d,EAAMc,OAASC,GACzCsuB,EAAgBrvB,EAAMc,OAASC,EACb,IAAlBsuB,IAAqBA,EAAgBtuB,GAIzC,IAFA,IAAMuuB,EAAS,GAEN1rB,EAAI,EAAGA,EAAIwrB,EAAaxrB,IAC/B0rB,EAAOhoB,KAAK,IAId,IADA,IAAIioB,EAAW,EACN3rB,EAAI,EAAGA,EAAIyrB,EAAezrB,IACjC,IAAK,IAAIC,EAAI,EAAGA,EAAIurB,EAAavrB,IAC/ByrB,EAAOzrB,GAAGyD,KAAKtH,EAAMuvB,IACrBA,IAOJ,IAHA,IAAIC,EAAYxvB,EAAM2d,MAAMyR,EAAcC,GAEtCI,EAAW,EACN5rB,EAAI,EAAGA,EAAI9C,EAAasuB,EAAexrB,IAC9C,IAAK,IAAID,EAAI,EAAGA,EAAIwrB,EAAc,EAAGxrB,IACnC0rB,EAAO1rB,GAAG0D,KAAKkoB,EAAUC,IACzBA,IAaJ,MAAO,CAPY,WAAfvK,EACUoK,EAAOI,OAAOnoB,KAAK,IAAIJ,cAEvBmoB,EAAOI,OAAOnoB,KAAK,IAGbwnB,OAWlBnH,EAAS,SAAC7nB,EAAWmlB,EAAYllB,EAAOe,EAAYd,GAlHrC,IAAC+M,EAmHpBya,EAAa1nB,GACb8uB,EAAQ3J,GAnHRlY,GADoBA,EAqHPhN,GApHC0Q,MAAM,KAAKnJ,KAAK,IAC9BU,EAAY+E,EAoHZ8hB,EAAc/tB,GACdgnB,EAAgB9nB,IAGlB,MAAO,CACL8oB,QAfc,SAAChpB,EAAWmlB,EAAYllB,EAAOe,EAAYd,GACzD,MAAkB,UAAdF,EAA8B,CAAC,GAAI,IACvC6nB,EAAO7nB,EAAWmlB,EAAYllB,EAAOe,EAAYd,GAC1C+uB,OAlHM,GCsCFvO,GApCC,WACd,IAAMpgB,EAAW,6BAA6BqQ,MAAM,IA8BpD,MAAO,CACLqY,QAZgB,SAAC/oB,EAAOklB,EAAYjlB,GACpC,IAAMumB,EAlBQ,SAACxmB,GACf,IAAMiI,EAAYjI,EAAM+L,WAClB2H,EAAa1M,GAAKqgB,0BAA0Bpf,GAElD,IAAKyL,EAAW5S,OAAQ,MAAO,GAE/B,IAAM6uB,EAAkB,YAAItvB,GAAUmc,UAChCrc,EAAS,GAPU,uBASzB,YAAwBuT,EAAxB,+CAAoC,CAAC,IAA1BhC,EAAyB,QAC5Bke,EAAiBvvB,EAASgH,QAAQqK,GACxCvR,EAAOmH,KAAKqoB,EAAgBC,KAXL,kFAczB,OAAOzvB,EAAOoH,KAAK,IAIDwhB,CAAQ/oB,GAE1B,OAAOgH,GAAKuf,sBACVvmB,EACAwmB,EACAtB,EACAjlB,KA3BU,GC8MD4vB,GAhNF,WACX,IAEIC,EAAWC,EAAWxuB,EAAGF,EAAK4G,EAAW3G,EAAGF,EAF1C4uB,EAASC,EAAQ,KAYjBC,EAAO,SAAC7X,GACZ9W,EAAI8W,GAOA0Q,EAAU,WACd,GAAkB,KAAd9gB,GAAqBA,GAAc1G,GAAMD,EAA7C,CAEA,IAAI6uB,EAAKC,YAAYC,MAGjBC,EAAMN,EAAOM,IAAIjvB,EAAKE,GAC1B,GAAuC,IAAnCyuB,EAAOM,GAAKC,QAAQP,EAAO,IAC7B,MAAO,CACL,mEACEM,EACA,6FACF,IAIJ,IAAItJ,EAAW/e,EAAUyI,MAAM,IAC3B8f,EAAS,GAjBO,uBAkBpB,YAAoBxJ,EAApB,+CAA8B,CAAC,IAAtBjf,EAAqB,QAC5ByoB,EAAOlpB,KAAKS,EAAQ0oB,WAAW,KAnBb,kFAqBpB,IAAIC,EAAaF,EAAOjpB,KAAK,IAEzBopB,EAAeX,EAAOU,GAAYE,OAAOrvB,EAAGD,GAG5CuvB,EAAKT,YAAYC,MAErB,OAAKM,GAAiBE,GAAOV,GAAMU,EAAKV,SAAO3c,EAExC,CACLmd,EAAa5kB,WACbiH,KAAK8d,OAAOD,EAAKV,GAAM,KAAMpkB,WAAa,IAC1CglB,IACAC,IACAC,KANO,CAAC,YAAa,MAUnBlH,EAAU,WACd,IAAIoG,EAAKC,YAAYC,MACrB,GAAyB,IAArBpoB,EAAUnH,QAAiBM,GAAME,EAArC,CAIA,IADA,IACSsC,EAAI,EAAGA,EAAIqE,EAAUnH,OAAQ8C,IACpC,IAAuC,IAF3B,aAEAyD,QAAQY,EAAUrE,IAC5B,MAAO,CAAC,gGAEN,IAON,IAHA,IAAIstB,EAAelB,EAAO/nB,GAAW2oB,OAAOxvB,EAAGE,GAAGyK,WAC9ColB,EAAe,GAEZD,EAAapwB,OAAS,GAC3B,GACEF,OACEsmB,OAAOgK,EAJL,IAKAhK,OAAOgK,EAAattB,IACpBsjB,OAAOgK,EAAattB,MACnB,IAELutB,EAAa7pB,KACX1G,OACEsmB,OAAOgK,EAXP,IAYEhK,OAAOgK,EAAattB,IACpBsjB,OAAOgK,EAAattB,MAG1BstB,EAAeA,EAAavT,MAAM,OAC7B,MACL/c,OAAOsmB,OAAOgK,EAlBV,IAkB6BhK,OAAOgK,EAAattB,MAAY,KAOjE,MAAO,CAAC,0BAA2B,IALnCutB,EAAa7pB,KACX1G,OAAOsmB,OAAOgK,EArBZ,IAqB+BhK,OAAOgK,EAAattB,MAEvDstB,EAAeA,EAAavT,MAAM,GAOtC,IADA,IAAIyT,EAAmB,GACdxtB,EAAI,EAAGA,EAAIutB,EAAarwB,OAAQ8C,IAAK,CAC5C,IAAIwD,EAAO8f,OAAOmK,aAAaF,EAAavtB,IAC5CwtB,EAAiB9pB,KAAKF,GAGxB,IAAIypB,EAAKT,YAAYC,MAErB,OAAKe,GAAqBP,GAAOV,GAAMU,EAAKV,SAAO3c,EAG5C,CACL4d,EAAiB7pB,KAAK,IACtByL,KAAK8d,OAAOD,EAAKV,GAAM,KAAMpkB,WAAa,IAC1CglB,IACAC,IACAC,KAPO,CAAC,YAAa,MAWnBF,EAAU,WACd,IAAIO,EAAQtB,EAAOF,GACfyB,EAAQvB,EAAOD,GACfyB,EAAOxB,EAAO,GAElB,OADA3uB,EAAM2uB,EAAOsB,GAAOG,MAAMzB,EAAOwB,IAAOE,MAAM1B,EAAOuB,GAAOE,MAAMD,KACvDzlB,YAGPilB,EAAQ,WACZ,GAAKzvB,GAAMF,GAAa,OAANE,GAAsB,OAARF,EAAhC,CAGA,IAAIivB,EAAMN,EAAOM,IAAIjvB,EAAKE,GAC1B,OAAuC,IAAnCyuB,EAAOM,GAAKC,QAAQP,EAAO,IAAkB,CAACM,GAElDlvB,EAAI4uB,EAAOzuB,GAAGowB,OAAO3B,EAAO3uB,IAAM0K,aAI9BklB,EAAQ,WAEZ,OADA3vB,EAAI0uB,EAAOF,GAAW4B,MAAM1B,EAAOD,KAC1BhkB,YAGL6lB,EAAgB,SAAC5xB,GACrB,GAAKA,EAAL,CAEA,IADA,IAAIorB,EAAU,aAAa1a,MAAM,IACxB9M,EAAI,EAAGA,EAAI5D,EAAMc,OAAQ8C,IAChC,IAAmC,IAA/BwnB,EAAQ/jB,QAAQrH,EAAM4D,IAAY,OAAO,EAE/C,OAAO,IAGHgkB,EAAS,SAAC5nB,EAAOiB,EAAQC,EAAQK,GA5IrC0G,EA6IajI,EA1JK,SAACqY,GACnByX,EAAYzX,EA0JZwZ,CAAY5wB,GAvJM,SAACoX,GACnB0X,EAAY1X,EAuJZyZ,CAAY5wB,GACZgvB,EAAK3uB,GAEFqwB,EAAc9B,IACd8B,EAAc7B,IACd6B,EAAcrwB,KAIjBF,EAAM0vB,IACN3vB,EAAI4vB,IACJ1vB,EAAI2vB,MAyBN,MAAO,CACLlI,QAASA,EACTgB,QAASA,EACTiH,MAAOA,EACPD,QAASA,EACTE,MAAOA,EACPrJ,OAAQA,EACRmK,KA7BW,SAAC/xB,EAAOiB,EAAQC,EAAQK,EAAGxB,GAEtC,OADA6nB,EAAO5nB,EAAOiB,EAAQC,EAAQK,GACP,kBAAZyvB,IACF,CACL,mEACEA,IAAQzpB,KAAK,IACb,6FACF,IAGDqqB,EAAc9B,IACd8B,EAAc7B,IACd6B,EAAcrwB,IACdqwB,EAAcxwB,IACdwwB,EAActwB,GAKI,YAAdvB,EAA0BgpB,IAAYgB,IAHpC,CAAC,YAAa,YAAa,YAAa,YAAa,eA/LrD,GC+BEiI,GALN,CACLjJ,QA1Bc,SAAC/oB,EAAOklB,EAAYjlB,EAAcI,GAGhD,IADA,IAAIF,EAAS,GACJyD,EAAI5D,EAAMc,OAAS,EAAG8C,GAAK,EAAGA,IACrCzD,EAAOmH,KAAKtH,EAAM4D,IAIpB,IAAIquB,EAAkB,GAEtB,GAAqB,WAAjBhyB,EAA2B,CAAC,IAAD,uBAC7B,YAAiBE,EAAjB,+CAAyB,CAAC,IAAjBiH,EAAgB,SACuB,IAA1C/G,EAASgH,QAAQD,EAAKD,gBAAkC,MAATC,GACjD6qB,EAAgB3qB,KAAKF,IAHI,wFAMxB6qB,EAAkB9xB,EAMzB,OAHE8xB,EADiB,WAAf/M,EACgB+M,EAAgB1qB,KAAK,IAAIJ,cACpB8qB,EAAgB1qB,KAAK,MC0CnC2qB,GALN,CACLnJ,QAjBc,SAAC/oB,EAAOoD,GACtB,OAAKpD,GACLA,EAAMwuB,OACsB,UAAxBprB,EA5CQ,SAACpD,GACb,OAAOA,EAAMmH,cA4CJgrB,CAAMnyB,GACoB,UAAxBoD,EA1CC,SAACpD,GACb,OAAOA,EAAMoI,cA0CJgqB,CAAMpyB,GACoB,eAAxBoD,EAxCM,SAACpD,GAClB,IAAM2nB,EAAQ3nB,EAAM0Q,MAAM,KACpB2hB,EAAmB,GAFG,uBAG5B,YAAiB1K,EAAjB,+CAAwB,CAAC,IAAhB0B,EAAe,QACtB,GAAa,KAATA,GAAwB,MAATA,EAAc,CAC/B,IAAIiJ,EAAUjJ,EAAKliB,cAAcuJ,MAAM,IACvC4hB,EAAQ,GAAKA,EAAQ,GAAGlqB,cACxBiqB,EAAiB/qB,KAAKgrB,EAAQ/qB,KAAK,OAPX,kFAU5B,OAAO8qB,EAAiB9qB,KAAK,KA+BpBgrB,CAAWvyB,GACe,gBAAxBoD,EA7BO,SAACpD,GAEnB,IADA,IAAMwyB,EAAiB,GACd5uB,EAAI,EAAGA,EAAI5D,EAAMc,OAAQ8C,IAChCA,EAAI,IAAM,EACN4uB,EAAelrB,KAAKtH,EAAM4D,GAAGuD,eAC7BqrB,EAAelrB,KAAKtH,EAAM4D,GAAGwE,eAEnC,OAAOoqB,EAAejrB,KAAK,IAuBlBkrB,CAAYzyB,GACc,YAAxBoD,EArBG,SAACpD,GAEf,IADA,IAAM0yB,EAAe,GACZ9uB,EAAI,EAAGA,EAAI5D,EAAMc,OAAQ8C,IAChC5D,EAAM4D,GAAGuD,gBAAkBnH,EAAM4D,GAC7B8uB,EAAaprB,KAAKtH,EAAM4D,GAAGwE,eAC3BsqB,EAAaprB,KAAKtH,EAAM4D,GAAGuD,eAEjC,OAAOurB,EAAanrB,KAAK,IAehBorB,CAAQ3yB,QADV,GAVY,KCjBR4yB,GALN,CACL7J,QArBc,SAAC/oB,EAAO6E,EAAsB9E,GAC5C,IAAII,EAAS,GACb,GAAkB,YAAdJ,EACF,IAAK,IAAI6D,EAAI,EAAGA,EAAI5D,EAAMc,OAAQ8C,IAChCzD,EAAOmH,KAAKzC,EAAqB7E,EAAM4D,GAAGuD,gBAAkBnH,EAAM4D,QAE7C,YAAd7D,GAA0B,WAInC,IAHA,IAAI8yB,EAAYhuB,EACZiuB,EAAS9yB,EACT6S,EAAOD,OAAOC,KAAKggB,GAHW,WAIzBjvB,GACPzD,EAAOmH,KACLuL,EAAK0b,MAAK,SAACjd,GAAD,OAASuhB,EAAUvhB,KAASwhB,EAAOlvB,GAAGuD,kBAC9CnH,EAAM4D,KAHHA,EAAI,EAAGA,EAAI5D,EAAMc,OAAQ8C,IAAM,EAA/BA,GAJ0B,GAWrC,OAAOzD,EAAOoH,KAAK,MCwSRwrB,GA1TC,WACd,IAAI9qB,EAAWlD,EAAWiuB,EAAWC,EAAqB5yB,EAMpDmnB,EAAc,SAACxa,GACnB3M,EAAW2M,GAGP0S,EAAe,SAAC1S,GACpBjI,EAAYiI,GAGRkmB,EAAe,SAAClmB,GACpBgmB,EAAYpyB,OAAOoM,IAGfmmB,EAA+B,SAACnmB,GACpCimB,EAAsBjmB,GAGlBomB,EAAuB,SAAC7f,GAE5B,IADA,IAAMxL,EAAU,GACPnE,EAAI,EAAGA,EAAI,EAAGA,IACrBmE,EAAQT,KAAKiM,EAAQ3P,IAEvB,OAAOmE,GAGHsrB,EAAmB,SAAC9f,GAExB,IADA,IAAM+f,EAAQ,GACL1vB,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7B,IAAI2vB,EAAe,CAAChgB,EAAQ3P,GAAI2P,EAAQ3P,EAAI,GAAI2P,EAAQ3P,EAAI,IAC5D0vB,EAAMhsB,KAAK8rB,EAAqBG,IAElC,OAAOD,GAuBHE,EAAoB,WAGxB,IAFA,IAAMliB,EArBO,WAEb,IADA,IAAMA,EAAM,GACH1N,EAAI,EAAGA,EAAI,GAAIA,IAEpBmB,EAAUnB,KACmC,IAA7C0N,EAAIjK,QAAQtC,EAAUnB,GAAGuD,iBACyB,IAAlD9G,EAASgH,QAAQtC,EAAUnB,GAAGuD,gBAE9BmK,EAAIhK,KAAKvC,EAAUnB,GAAGuD,eAG1B,IAAK,IAAIvD,EAAI,EAAGA,EAAI,GAAIA,KAC0B,IAA5C0N,EAAIjK,QAAQhH,EAASuD,GAAGuD,gBAC1BmK,EAAIhK,KAAKjH,EAASuD,GAAGuD,eAIzB,OADAmK,EAAIhK,KAAK2rB,GACF3hB,EAIKmiB,GACNC,EAAS,GACN9vB,EAAI,EAAGA,EAAI,EAAGA,IACrB8vB,EAAOpsB,KAAK+rB,EAAiB/hB,EAAIqM,MAAU,EAAJ/Z,EAAW,EAAJA,EAAQ,KAExD,OAAO8vB,GAGHC,EAAkB,SAACL,EAAOrT,GAC9B,IAAIjU,EAAQ,EAD6B,uBAEzC,YAAqBsnB,EAArB,+CAA4B,CAAC,IAApBM,EAAmB,QAC1B,IAAgD,IAA5CA,EAASvsB,QAAQ4Y,EAAO9Y,eAC1B,MAAO,CAAC6E,EAAO4nB,EAASvsB,QAAQ4Y,EAAO9Y,gBAClC6E,KALgC,oFAUrC6nB,EAAmB,SAACH,EAAQzT,GAChC,IAAI6T,EAAa,EAD0B,uBAE3C,YAAyBJ,EAAzB,+CAAiC,CAAC,IAAzBK,EAAwB,QACzBC,EAASL,EAAgBI,EAAc9T,GAC7C,QAAezM,IAAXwgB,EACF,MAAM,CAAEF,GAAR,mBAAuBE,IAClBF,KANkC,oFAWvCG,EAAgB,WAGpB,IAFA,IAAMP,EAASF,IACTpI,EAAU,GACPxnB,EAAI,EAAGA,EAAIqE,EAAUnH,OAAQ8C,IAAK,CACzC,IAAMyQ,EAAMwf,EAAiBH,EAAQzrB,EAAUrE,SACnC4P,IAARa,GACF+W,EAAQ9jB,KAAK+M,GAGjB,OAAO+W,GAGH8I,EAAgB,SAACC,GAGrB,IAFA,IAAIC,EAAoBH,IACpBI,EAAQ,GAENzwB,EAAIuwB,EAAcnB,EACtBpvB,EAAIuwB,EAAcnB,EAAYA,EAC9BpvB,IAEAywB,EAAM/sB,KAAK8sB,EAAkBxwB,IAE/B,OAAOywB,GAGHrU,EAAmB,WAEvB,IADA,IAAIA,EAAmB,EACdpc,EAAI,EAAGA,EAAIqE,EAAUnH,OAAQ8C,KACkB,IAAlDvD,EAASgH,QAAQY,EAAUrE,GAAGuD,gBAChC6Y,IAEJ,OAAOA,GAGHsU,EAAiB,WAErB,IADA,IAAIC,EAAS,GACJ3wB,EAAI,EAAGA,EAAIoP,KAAK4K,KAAKoC,IAAqBgT,GAAYpvB,IAC7D2wB,EAAOjtB,KAAK4sB,EAActwB,IAE5B,OAAO2wB,GAIHC,EAA4B,SAACL,GAIjC,IAHA,IAAIE,EAAQC,IAAiBH,GAEvBM,EAAe,CAAC,IACb7wB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAImvB,IACbqB,EAAMxwB,KAAMpC,MAAM4yB,EAAMxwB,GAAGD,KADHC,IAE7B4wB,EAAa7wB,GAAG0D,KAAK+sB,EAAMxwB,GAAGD,IAEhC6wB,EAAantB,KAAK,IAGpB,IADA,IAAIotB,EAAiB,GACZ9wB,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIC,EAAI,EAAGA,EAAImvB,EAAWnvB,IAC7B6wB,EAAeptB,KAAKmtB,EAAa7wB,GAAGC,IAKxC,IADA,IAAI8wB,EAAsB,GACjB/wB,EAAI,EAAGA,EAAI8wB,EAAe5zB,OAAQ8C,SACf4P,IAAtBkhB,EAAe9wB,IACjB+wB,EAAoBrtB,KAAKotB,EAAe9wB,IAM5C,IAFA,IAAIgxB,EAAsB,CAAC,IACvB5oB,EAAQ,EACHpI,EAAI,EAAGA,EAAI+wB,EAAoB7zB,OAAQ8C,IAC1CA,EAAI,IAAM,GAAW,IAANA,IACjBgxB,EAAoBttB,KAAK,IACzB0E,KAEF4oB,EAAoB5oB,GAAO1E,KAAKqtB,EAAoB/wB,IAEtD,OAAOgxB,GAYHC,EAAsB,WAG1B,IAFA,IAAIN,EAVqB,WAGzB,IAFA,IAAIA,EAAS,GACPzzB,EAASwzB,IAAiBxzB,OACvB8C,EAAI,EAAGA,EAAI9C,EAAQ8C,IAC1B2wB,EAAOjtB,KAAKktB,EAA0B5wB,IAExC,OAAO2wB,EAIMO,GACPC,EAAc,GACXnxB,EAAI,EAAGA,EAAI2wB,EAAOzzB,OAAQ8C,IACjCmxB,EAAYztB,KAAZ,MAAAytB,EAAW,YAASR,EAAO3wB,KAI7B,IAFA,IAAIoxB,EAAYxB,IACZyB,EAAY,GACPrxB,EAAI,EAAGA,EAAImxB,EAAYj0B,OAAQ8C,IAAK,CAC3C,IAAIwnB,EAAU2J,EAAYnxB,GAC1BqxB,EAAU3tB,KAAK0tB,EAAU5J,EAAQ,IAAIA,EAAQ,IAAIA,EAAQ,KAE3D,OAAO6J,EAAU1tB,KAAK,KAIlB2tB,EAA2B,WAG/B,IAFA,IAAIR,EAAiBT,IAAgBvE,OACjC6E,EAAS,GACJ3wB,EAAI,EAAGA,EAAIoP,KAAK4K,KAAKoC,IAAqBgT,GAAYpvB,IAC7D2wB,EAAOjtB,KAAK,IACZitB,EAAO3wB,GAAG0D,KACRotB,EAAe/W,MACb/Z,EAAIovB,EAAY,EAChBpvB,EAAIovB,EAAY,EAAgB,EAAZA,IAM1B,IADA,IAAImC,EAAuB,GAClBvxB,EAAI,EAAGA,EAAI2wB,EAAOzzB,OAAQ8C,IACjCuxB,EAAqB7tB,KAAK8tB,EAA2Bb,EAAO3wB,KAE9D,OAAOuxB,GAGHC,EAA6B,SAACzX,GAElC,IADA,IAAI0X,EAAY,GACPxxB,EAAI,EAAGA,EAAI,EAAGA,IACrBwxB,EAAU/tB,KACRqW,EAAM,GAAGA,MACN9Z,EAAI8Z,EAAM,GAAG7c,OAAU,EACvB+C,EAAI8Z,EAAM,GAAG7c,OAAU,EAAI6c,EAAM,GAAG7c,OAAS,IAMpD,IADA,IAAMw0B,EAAiB,GACd1xB,EAAI,EAAGA,EAAIyxB,EAAUv0B,OAAQ8C,IACR,IAAxByxB,EAAUzxB,GAAG9C,QACfw0B,EAAehuB,KAAK+tB,EAAUzxB,IAIlC,IADA,IAAM2xB,EAAY,GACT3xB,EAAI,EAAGA,EAAIovB,EAAWpvB,IAAK,CAClC2xB,EAAUjuB,KAAK,IACf,IAAK,IAAIzD,EAAI,EAAGA,EAAIyxB,EAAex0B,OAAQ+C,IACzC0xB,EAAU3xB,GAAG0D,KAAKguB,EAAezxB,GAAGD,IAKxC,IADA,IAAM4xB,EAAiB,GACd5xB,EAAI,EAAGA,EAAI2xB,EAAUz0B,OAAQ8C,SACZ4P,IAApB+hB,EAAU3xB,GAAG,IAAkB4xB,EAAeluB,KAAKiuB,EAAU3xB,IAGnE,OAAO4xB,GAGHC,EAAsB,WAG1B,IAFA,IAAIlB,EAASW,IACPH,EAAc,GACXnxB,EAAI,EAAGA,EAAI2wB,EAAOzzB,OAAQ8C,IACjCmxB,EAAYztB,KAAZ,MAAAytB,EAAW,YAASR,EAAO3wB,KAM7B,IAHA,IAAIoxB,EAAYxB,IAEZyB,EAAY,GACPrxB,EAAI,EAAGA,EAAImxB,EAAYj0B,OAAQ8C,IAAK,CAC3C,IAAIwnB,EAAU2J,EAAYnxB,GAC1BqxB,EAAU3tB,KAAK0tB,EAAU5J,EAAQ,IAAIA,EAAQ,IAAIA,EAAQ,KAE3D,OAAO6J,EAAU1tB,KAAK,KAgClBqgB,EAAS,SACb5nB,EACA+E,EACAiuB,EACAC,EACA5yB,GAvSA4H,EAySajI,EACb0f,EAAa3a,GACbmuB,EAAaF,GACbG,EAA6BF,GAC7BzL,EAAYnnB,IAGd,MAAO,CACL0oB,QA5Cc,SACd/oB,EACA+E,EACAiuB,EACAC,EACA5yB,EACAN,GAUA,OARA6nB,EACE5nB,EACA+E,EACAiuB,EACAC,EACA5yB,EACAN,GAEGkI,GAAkC,IAArBA,EAAUnH,OAEV,YAAdf,EACK,CAAC80B,IAAuBrB,IAAqBS,KAE7C,CACLwB,IACAjC,IACA0B,IAA2BxF,KAAK,IAP3B,CAAC,KAAM8D,IAAqB,OA4BrC5L,OAAQA,GAtTI,GC2FDzG,GAzFF,WACX,IAAIlZ,EAAWlI,EAAW0mB,EAAcnV,EAAKjR,EAUvCmnB,EAAc,SAACxnB,GACnBK,EAAWL,GAGPynB,EAAe,SAACznB,GACpBD,EAAYC,GAWRgvB,EAAgB,WAGpB,IAFA,IAAIhjB,EAAQ,EACNhM,EAAQ,GACL4D,EAAI,EAAGA,EAAIqE,EAAUnH,OAAQ8C,KACkB,IAAlDvD,EAASgH,QAAQY,EAAUrE,GAAGuD,gBAChCnH,EAAMsH,KAAKW,EAAUrE,GAAGuD,eAmB5B,OAfanH,EAAM4L,KAAI,SAACxE,GACtB,IAAIsuB,EAdQpyB,EAAGC,EAef,GAAI+N,EAAItF,IAAUhM,GAASK,IAAwC,IAA5BA,EAASgH,QAAQD,GAAc,CACpE,IAAM6iB,EAAY5pB,EAASgH,QAAQD,GAC7BuuB,EAAWt1B,EAASgH,QAAQiK,EAAItF,GAAO7E,eAG7CuuB,EACgB,YAAd31B,EACIM,GAHU,YAAdN,EAA0BkqB,EAAY0L,EAAW1L,EAAY0L,GAGlC,IACvBt1B,GAvBIiD,EAuBY2mB,EAAY0L,EAvBrBpyB,EAuB+B,IAtBvCD,EAAIC,EAAKA,GAAKA,IAuBnByI,IAEF,OAAO0pB,KAEKnuB,KAAK,KAwBfqgB,EAAS,SAAC5nB,EAAOC,EAAcF,EAAWc,EAAQR,IAxEnC,SAACL,GACpBiI,EAAYif,OAAOlnB,GAwEnB6nB,CAAa7nB,GArES,SAACA,GACvBymB,EAAezmB,EAqEf+nB,CAAgB9nB,GAChBwnB,EAAa1nB,GA3DA,SAACC,GACdsR,EAAMtR,EA2DN41B,CAAO/0B,GACP2mB,EAAYnnB,IAGd,MAAO,CACLunB,OAAQA,EACRmB,QA/Bc,SACd/oB,EACAklB,EACAjlB,EACAF,EACAc,EACAR,GAGA,GADAunB,EAAO5nB,EAAOC,EAAcF,EAAWc,EAAQR,GAC7B,UAAdN,EAAuB,CACzB,GAAIkI,EAAUnH,QAAU,EAAG,MAAO,GAClC,IAAI0lB,EAAYwI,IAChB,OAAOhoB,GAAKuf,sBACVte,EACAue,EACAtB,EACAuB,GAEG,MAAO,KAxEL,GCsBEiB,GAtBK,2DAAM,WAAO/D,GAAP,kBAAArgB,EAAA,4DAEtB,oFAFsB,kBAICuyB,MAFvB,qFAFsB,cAIhB3R,EAJgB,gBAKHA,EAAS4R,OALN,OAKhBj2B,EALgB,OAMtB8jB,EAAS,CACPtpB,KAAMK,IACNiF,QAAS,CACPE,UATkB,kDAatB8jB,EAAS,CACPtpB,KAAMK,IACNiF,QAAS,CACPE,KAAM,UAhBY,0DAAN,uDCKLk2B,GALG,SAAC51B,GAAD,MAAa,CAC7B9F,KAAMW,KACNmF,WCmHImK,I,OAAoB,CACxBrB,oBAAqBA,GACrByF,4BAA6BA,GAC7BC,6BAA8BA,GAC9BC,4BAA6BA,GAC7BC,6BAA8BA,GAC9BE,8BAA+BA,GAC/BD,6BAA8BA,KAqBjBvE,gBAvCS,SAAClL,GAAD,MAAY,CAClCiD,cAAejD,EAAMiD,cACrBC,SAAUlD,EAAMwD,eAAeN,SAC/BC,UAAWnD,EAAMwD,eAAeL,UAChCE,SAAUrD,EAAMwD,eAAeH,SAC/BD,UAAWpD,EAAMwD,eAAeJ,UAChCE,UAAWtD,EAAMwD,eAAeF,UAChCC,WAAYvD,EAAMwD,eAAeD,WACjCZ,gBAAiB3C,EAAM4G,KAAKjE,mBA+BUsI,GAAzBC,EAjIO,SAAC,GAgBhB,IAfLjI,EAeI,EAfJA,cACA2G,EAcI,EAdJA,oBACA2F,EAaI,EAbJA,4BACAC,EAYI,EAZJA,6BACAH,EAWI,EAXJA,4BACAC,EAUI,EAVJA,6BACAI,EASI,EATJA,8BACAD,EAQI,EARJA,6BACApM,EAOI,EAPJA,SACAD,EAMI,EANJA,UACAF,EAKI,EALJA,SACAC,EAII,EAJJA,UACAI,EAGI,EAHJA,WACAD,EAEI,EAFJA,UACAX,EACI,EADJA,gBAEA,OACE,kBAAC,WAAD,KACGM,EACC,yBAAK4H,UAAU,gBAAgBM,QAAS,kBAAMvB,MAC5C,yBAAKiB,UAAU,SACb,yBAAKA,UAAU,iBAAf,kCACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,kBACb,4BACGxH,GACDD,GACAF,GACAC,GACAI,GACAD,EACE,wBAAIuH,UAAU,0CAAd,2CAGE,KACFlI,EAIE,KAHF,wBAAIkI,UAAU,gEAAd,+CAIA3H,GAAaC,EAYX,KAXF,wBAAI0H,UAAU,oBACZ,4BACEA,UAAU,2BACVM,QAAS,YACNjI,GAAYmM,KACZlM,GAAamM,MAJlB,uBAWFjM,GAAaD,EAYX,KAXF,wBAAIyH,UAAU,oBACZ,4BACEA,UAAU,2BACVM,QAAS,YACN9H,GAAYkM,KACZnM,GAAaoM,MAJlB,yBAWFlM,GAAcC,EAYZ,KAXF,wBAAIsH,UAAU,oBACZ,4BACEA,UAAU,2BACVM,QAAS,YACN7H,GAAamM,KACblM,GAAcmM,MAJnB,qBAgBZ,SC/CJinB,GAAQze,IAAM0e,MAAK,kBAAM,iCAEzBC,G,YACJ,WAAYnvB,GAAQ,IAAD,+BACjB,8CAAMA,KACDgiB,QAAU,EAAKA,QAAQ7L,KAAb,iBAFE,E,mFAUjB5G,KAAKyS,UACuB,OAAxBzS,KAAKvP,MAAMnH,UACb0W,KAAKvP,MAAM2gB,gB,yCAIItF,GAObA,EAAUhoB,SAAWkc,KAAKvP,MAAM3M,SAClCkc,KAAKvP,MAAM4Q,eAAe,8BACA,WAAtBrB,KAAKvP,MAAM3M,QAA6C,UAAtBkc,KAAKvP,MAAM3M,OAC/Ckc,KAAKvP,MAAMovB,mBAAkB,GAE7B7f,KAAKvP,MAAMovB,mBAAkB,IAQ7B7f,KAAKvP,MAAM5F,kBAAoBihB,EAAUjhB,iBACxCmV,KAAKyS,Y,gCAOD,IAGLrhB,EAEJ,OAJmB4O,KAAKvP,MAAhB3M,QAKN,IAAK,SACHsN,EAAYqrB,GAAOhK,QAAP,MAAAgK,GAAM,YAAYjsB,GAAgBwP,KAAKvP,SACnDuP,KAAKvP,MAAMgvB,UAAUruB,EAAU,IAC/B4O,KAAKvP,MAAMqvB,gBAAgB1uB,EAAU,IACrC4O,KAAKvP,MAAMsvB,gBAAgB3uB,EAAU,IACrC,MACF,IAAK,eACHA,EAAYkrB,GAAW7J,QAAX,MAAA6J,GAAU,YAAY9rB,GAAgBwP,KAAKvP,SACvDuP,KAAKvP,MAAMgvB,UAAUruB,GACrB,MACF,IAAK,QAIL,IAAK,SACHA,EAAY4uB,GAAOvN,QAAP,MAAAuN,GAAM,YAAYxvB,GAAgBwP,KAAKvP,SACnDuP,KAAKvP,MAAMgvB,UAAUruB,GACrB,MACF,IAAK,MAEH,QAAkB8L,KADlB9L,EAAYmoB,GAAIkC,KAAJ,MAAAlC,GAAG,YAAS/oB,GAAgBwP,KAAKvP,gBACGyM,IAAjB9L,EAAU,GAAkB,MAAO,GAClE4O,KAAKvP,MAAMwvB,mBAAmB7uB,EAAU,IACxC4O,KAAKvP,MAAMgvB,UAAUruB,EAAU,IAC/B4O,KAAKvP,MAAMyvB,UAAU9uB,EAAU,IAC/B4O,KAAKvP,MAAM0vB,QAAQ/uB,EAAU,IAC7B4O,KAAKvP,MAAM2vB,QAAQhvB,EAAU,IAC7B,MACF,IAAK,MACHA,EAAYkV,GAAImM,QAAJ,MAAAnM,GAAG,YAAY9V,GAAgBwP,KAAKvP,SAChDuP,KAAKvP,MAAMgvB,UAAUruB,GACrB,MACF,IAAK,UACHA,EAAYsqB,GAAQjJ,QAAR,MAAAiJ,GAAO,YAAYlrB,GAAgBwP,KAAKvP,SACpDuP,KAAKvP,MAAMgvB,UAAUruB,GACrB,MACF,IAAK,gBACHA,EAAYwqB,GAAcnJ,QAAd,MAAAmJ,GAAa,YAAYprB,GAAgBwP,KAAKvP,SAC1DuP,KAAKvP,MAAMgvB,UAAUruB,GACrB,MACF,IAAK,SACHA,EAAYivB,GAAO5N,QAAP,MAAA4N,GAAM,YAAY7vB,GAAgBwP,KAAKvP,SACnDuP,KAAKvP,MAAMgvB,UAAUruB,GACrB,MACF,IAAK,SACHA,EAAYkvB,GAAO7N,QAAP,MAAA6N,GAAM,YAAY9vB,GAAgBwP,KAAKvP,SACnDuP,KAAKvP,MAAMgvB,UAAUruB,GACrB,MACF,IAAK,WACHA,EAAYmvB,GAAS9N,QAAT,MAAA8N,GAAQ,YAAY/vB,GAAgBwP,KAAKvP,SACrDuP,KAAKvP,MAAMgvB,UAAUruB,GACrB,MACF,IAAK,WACHA,EAAY+kB,GAAS1D,QAAT,MAAA0D,GAAQ,YAAY3lB,GAAgBwP,KAAKvP,SACrDuP,KAAKvP,MAAMgvB,UAAUruB,EAAU,IAC/B4O,KAAKvP,MAAM+vB,cAAcpvB,EAAU,IACnC,MACF,IAAK,QACHA,EAAYqvB,GAAMhO,QAAN,MAAAgO,GAAK,YAAYjwB,GAAgBwP,KAAKvP,SAClDuP,KAAKvP,MAAMgvB,UAAUruB,GACrB,MACF,IAAK,UACHA,EAAYsvB,GAAQjO,QAAR,MAAAiO,GAAO,YAAYlwB,GAAgBwP,KAAKvP,SACpDuP,KAAKvP,MAAMgvB,UAAUruB,GACrB,MACF,IAAK,WAEH,GAAyB,kBADzBA,EAAYyiB,GAASpB,QAAT,MAAAoB,GAAQ,YAAYrjB,GAAgBwP,KAAKvP,UAGnD,YADAuP,KAAKvP,MAAMgvB,UAAUruB,GAGvB4O,KAAKvP,MAAMgvB,UAAUruB,EAAU,IAC/B4O,KAAKvP,MAAMkwB,kBAAkBvvB,EAAU,IACvC4O,KAAKvP,MAAMmwB,sBAAsBxvB,EAAU,IAC3C4O,KAAKvP,MAAMowB,wBAAwBzvB,EAAU,IAC7C,MACF,IAAK,UACHA,EAAY0vB,GAAQrO,QAAR,MAAAqO,GAAO,YAAYtwB,GAAgBwP,KAAKvP,SACpDuP,KAAKvP,MAAMgvB,UAAUruB,EAAU,IAC/B4O,KAAKvP,MAAMswB,iBAAiB3vB,EAAU,IACtC,MACF,QACE,OAAO,Q,+BAKX,OACE,yBAAKwC,UAAU,QACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,mBACb,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAgB4L,KAAM,MACtB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAgBA,KAAM,MACtB,kBAAC,GAAD,OAEF,kBAAC,WAAD,CAAUwhB,SAAU,4CAClB,kBAACtB,GAAD,OAEF,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GAxJWze,IAAMwB,eAmMnBzO,GAAoB,CACxBod,eACAqO,aACApe,kBACAmf,c7D1P2B,SAACxxB,GAAD,MAAiB,CAC5CjL,KAAMqB,IACN4J,e6DyPA+xB,iBvDhQ8B,SAACv2B,GAAD,MAAa,CAC3CzG,KAAMsB,IACNmF,WuD+PAy1B,mBjD3NgC,SAACp1B,GAAD,MAAsB,CACtD9G,KAAMuB,IACNuF,oBiD0NAq1B,UjDjOuB,SAACn1B,GAAD,MAAU,CACjChH,KAAMwB,IACNwF,QiDgOAq1B,QjDvOqB,SAACp1B,GAAD,MAAQ,CAC7BjH,KAAM0B,IACNuF,MiDsOAm1B,QjDlPqB,SAACr1B,GAAD,MAAQ,CAC7B/G,KAAMyB,IACNsF,MiDiPA+0B,kBzErQ+B,SAAC71B,GAAD,MAAa,CAC5CjG,KAAM2B,IACNsE,WyEoQA22B,kB5C5O+B,SAACrxB,GAAD,MAAqB,CACpDvL,KAAMwC,IACN+I,mB4C2OAsxB,sB5ClPmC,SAACvxB,GAAD,MAAyB,CAC5DtL,KAAMyC,IACN6I,uB4CiPAwxB,wB5CxPqC,SAACzxB,GAAD,MAA2B,CAChErL,KAAM0C,IACN2I,yB4CuPA0wB,gBtCpPsB,SAAClxB,GAAD,MAAmB,CACzC7K,KAAM+C,IACN8H,iBsCmPAmxB,gBtChPsB,SAAClxB,GAAD,MAAmB,CACzC9K,KAAMgD,IACN8H,kBsCqSaoF,gBA3GS,SAAClL,GAAD,MAAY,CAClCG,gBAAiBH,EAAMK,QAAQF,gBAC/BC,cAAeJ,EAAMK,QAAQD,cAC7BG,SAAUP,EAAMO,SAChBE,OAAQT,EAAMS,OACdC,UAAWV,EAAMU,UACjBC,MAAOX,EAAMW,MACb5F,OAAQiF,EAAMjF,OACd6F,aAAcZ,EAAMY,aACpBG,WAAYf,EAAMe,WAClBC,SAAUhB,EAAMgB,SAASA,SACzBF,OAAQd,EAAMc,OACdc,OAAQ5B,EAAMmC,IAAIP,OAClBC,OAAQ7B,EAAMmC,IAAIN,OAClBG,IAAKhC,EAAMmC,IAAIH,IACfC,EAAGjC,EAAMmC,IAAIF,EACbF,EAAG/B,EAAMmC,IAAIJ,EACbG,EAAGlC,EAAMmC,IAAID,EACbqW,eAAgBvY,EAAMgB,SAASC,OAC/BE,gBAAiBnB,EAAMmB,gBACvB6E,gBAAiBhG,EAAMkG,SAASF,gBAChC5E,aAAcpB,EAAMsB,OAAOF,aAC3BC,YAAarB,EAAMsB,OAAOD,YAC1BG,OAAQxB,EAAMwB,OACdilB,WAAYzmB,EAAMymB,WAClB/kB,WAAY1B,EAAM2B,QAAQD,WAC1Bqb,cAAe/c,EAAM2B,QAAQF,OAC7BK,gBAAiB9B,EAAMmC,IAAIL,gBAC3BiC,oBAAqB/D,EAAM+D,oBAC3BqC,gBAAiBpG,EAAMwG,SAASJ,gBAChCD,eAAgBnG,EAAMwG,SAASL,eAC/BX,qBAAsBxF,EAAMwF,qBAC5BE,UAAW1F,EAAM+F,OAAOL,UACxBC,iBAAkB3F,EAAM+F,OAAOJ,iBAC/BC,gBAAiB5F,EAAM+F,OAAOH,mBAyEQqF,GAAzBC,CAA4C2rB,I,mDC/T9CqB,GAAexnB,cAAW,SAACzG,GAAD,MAAY,CACjDkL,KAAM,CACJE,QAAS,QAEX8iB,SAAU,CAAE7tB,SAAU,UACtB8tB,OAAQ,CACNnpB,WAAYhF,EAAMouB,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQtuB,EAAMouB,YAAYE,OAAOC,MACjCC,SAAUxuB,EAAMouB,YAAYI,SAASC,gBAEvCtP,SAAU,QACVjf,gBAAiB,sBAEnBwuB,WAAY,CACVC,YAAa3uB,EAAM4uB,QAAQ,GAC3BvuB,SAAU,QAEZwuB,KAAM,CACJzjB,QAAS,QAEX0jB,OAAQ,CACNlrB,MAvBgB,IAwBhBmrB,WAAY,GAEdC,YAAa,CACXprB,MA3BgB,KA6BlBqrB,aAAa,aACX7jB,QAAS,OACT8jB,WAAY,SACZC,eAAgB,WAChBtrB,QAAS7D,EAAM4uB,QAAQ,EAAG,IAEvB5uB,EAAMovB,OAAOC,SAElBC,QAAS,CACPC,SAAU,EACV1rB,QAAS7D,EAAM4uB,QAAQ,GACvB5pB,WAAYhF,EAAMouB,YAAYC,OAAO,SAAU,CAC7CC,OAAQtuB,EAAMouB,YAAYE,OAAOC,MACjCC,SAAUxuB,EAAMouB,YAAYI,SAASC,gBAEvChjB,YA5CgB,KA8ClB+jB,aAAc,CACZxqB,WAAYhF,EAAMouB,YAAYC,OAAO,SAAU,CAC7CC,OAAQtuB,EAAMouB,YAAYE,OAAOmB,QACjCjB,SAAUxuB,EAAMouB,YAAYI,SAASkB,iBAEvCjkB,WAAY,GAEdkkB,YAAa,CACXtvB,SAAU,OACVsuB,YAAa,UAEfiB,iBAAkB,CAChBvvB,SAAU,OACVsuB,YAAa,QAEfkB,WAAY,CACV1vB,MAAO,QACP2vB,eAAgB,QAElB7Y,KAAM,CACJzL,cAAe,WACfrL,MAAO,QACP2vB,eAAgB,QAElBC,aAAc,CACZpB,YAAa,YCtEJqB,GAAW,SAACrV,EAAKsV,GAAN,OAAoB,SAAC5V,GAC3C,IAAM/hB,EAAK+W,eACXgL,EAAS,CACPtpB,KAAMiD,IACNqC,QAAS,CAAEskB,MAAKsV,YAAW33B,QAE7B43B,YAAW,kBAAM7V,EAAS,CAAEtpB,KAAMkD,IAAcoC,QAASiC,MAAO,OCCnD63B,GARM,SAAC53B,GAChBA,EACFiiB,KAAM4V,SAAS7V,QAAQ8V,OAAO,gBAAkB93B,SAEzCiiB,KAAM4V,SAAS7V,QAAQ8V,OAAO,iBCS5BC,GAAW,2DAAM,WAAOjW,GAAP,gBAAArgB,EAAA,6DACxBxB,aAAaD,OACf43B,GAAa33B,aAAaD,OAFA,kBAKRiiB,KAAM+V,IAAI,aALF,OAKpB7V,EALoB,OAM1BL,EAAS,CACPtpB,KAAMqD,KACNiC,QAASqkB,EAAInkB,OARW,gDAW1B8jB,EAAS,CACPtpB,KAAMsD,MAZkB,yDAAN,uDA2EXm8B,GAAS,kBAAM,SAACnW,GAC3BA,EAAS,CACPtpB,KAAM4D,MAER0lB,EAAS,CACPtpB,KAAMyD,QC1DJwM,GAAoB,CACxBwvB,OAAQA,IAOKvvB,eAAQ,KAAMD,GAAdC,EA/BU,SAACxD,GACxB,IAAM4J,EAAU4mB,KAChB,OACE,yBAAKrtB,UAAU,eACb,kBAACiF,GAAA,EAAD,CAAY4qB,QAAQ,QAAQC,QAAM,EAAC9vB,UAAWyG,EAAQsoB,aACpD,kBAAC,IAAD,CAAM/uB,UAAWyG,EAAQ4P,KAAMkF,GAAG,KAAKjb,QAASzD,EAAM+yB,QAAtD,WAIF,kBAAC3qB,GAAA,EAAD,CAAY4qB,QAAQ,QAAQC,QAAM,EAAC9vB,UAAWyG,EAAQsoB,aACpD,kBAAC,IAAD,CAAM/uB,UAAWyG,EAAQ4P,KAAMkF,GAAG,YAAlC,YAIF,kBAACtW,GAAA,EAAD,CAAY4qB,QAAQ,QAAQC,QAAM,EAAC9vB,UAAWyG,EAAQuoB,kBACpD,kBAAC,IAAD,CAAMhvB,UAAWyG,EAAQ4P,KAAMkF,GAAG,UAAlC,cCGOwU,GAvBW,SAAClzB,GACzB,IAAM4J,EAAU4mB,KAChB,OACE,yBAAKrtB,UAAU,eACb,kBAACiF,GAAA,EAAD,CAAY4qB,QAAQ,QAAQC,QAAM,EAAC9vB,UAAWyG,EAAQsoB,aACpD,kBAAC,IAAD,CAAM/uB,UAAWyG,EAAQ4P,KAAMkF,GAAG,UAAlC,UAIF,kBAACtW,GAAA,EAAD,CAAY4qB,QAAQ,QAAQC,QAAM,EAAC9vB,UAAWyG,EAAQsoB,aACpD,kBAAC,IAAD,CAAM/uB,UAAWyG,EAAQ4P,KAAMkF,GAAG,WAAlC,WAIF,kBAACtW,GAAA,EAAD,CAAY4qB,QAAQ,QAAQC,QAAM,EAAC9vB,UAAWyG,EAAQuoB,kBACpD,kBAAC,IAAD,CAAMhvB,UAAWyG,EAAQ4P,KAAMkF,GAAG,UAAlC,Y,uGC8CFnb,GAAoB,CACxBwvB,OAAQA,IAOKvvB,eAAQ,KAAMD,GAAdC,EAzDS,SAACxD,GACvB,IAAM4J,EAAU4mB,KADiB,EAGD1sB,oBAAS,GAHR,oBAG1BqvB,EAH0B,KAGdC,EAHc,KASjC,OACE,kBAAC,WAAD,KACE,kBAACC,GAAA,EAAD,CAAM5vB,QANW,WACnB2vB,GAAWD,KAMP,kBAAC,IAAD,CAAMzU,GAAG,KACP,kBAAC4U,GAAA,EAAD,CAAUC,QAAM,EAACpwB,UAAWyG,EAAQwoB,YAClC,kBAACoB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,WAG1B,kBAAC,IAAD,CAAMhV,GAAG,KAAKjb,QAASzD,EAAM+yB,QAC3B,kBAACO,GAAA,EAAD,CAAUC,QAAM,EAACpwB,UAAWyG,EAAQwoB,YAClC,kBAACoB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,aAG1B,kBAAC,IAAD,CAAMhV,GAAG,YACP,kBAAC4U,GAAA,EAAD,CAAUC,QAAM,EAACpwB,UAAWyG,EAAQwoB,YAClC,kBAACoB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAG1B,kBAAC,IAAD,CAAMhV,GAAG,UACP,kBAAC4U,GAAA,EAAD,CAAUC,QAAM,EAACpwB,UAAWyG,EAAQwoB,YAClC,kBAACoB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,iBCGnBC,GAjDU,WACvB,IAAM/pB,EAAU4mB,KADa,EAGG1sB,oBAAS,GAHZ,oBAGtBqvB,EAHsB,KAGVC,EAHU,KAS7B,OACE,kBAAC,WAAD,KACE,kBAACC,GAAA,EAAD,CAAM5vB,QANW,WACnB2vB,GAAWD,KAMP,kBAAC,IAAD,CAAMzU,GAAG,KACP,kBAAC4U,GAAA,EAAD,CAAUC,QAAM,EAACpwB,UAAWyG,EAAQwoB,YAClC,kBAACoB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,WAG1B,kBAAC,IAAD,CAAMhV,GAAG,UACP,kBAAC4U,GAAA,EAAD,CAAUC,QAAM,EAACpwB,UAAWyG,EAAQwoB,YAClC,kBAACoB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,YAG1B,kBAAC,IAAD,CAAMhV,GAAG,WACP,kBAAC4U,GAAA,EAAD,CAAUC,QAAM,EAACpwB,UAAWyG,EAAQwoB,YAClC,kBAACoB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,aAG1B,kBAAC,IAAD,CAAMhV,GAAG,UACP,kBAAC4U,GAAA,EAAD,CAAUC,QAAM,EAACpwB,UAAWyG,EAAQwoB,YAClC,kBAACoB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eCrCnBE,GAlBa,WAAO,IAAD,EACR9vB,oBAAS,GADD,oBACzBstB,EADyB,KACnByC,EADmB,KAG1BC,EAAe,WACnB,IAAMC,EAAM97B,OAAO+7B,aAAe7b,SAAS4C,gBAAgBkZ,UAC3DJ,EAAQE,GAAO,KAUjB,OAPA9vB,qBAAU,WAER,OADAhM,OAAO6lB,iBAAiB,SAAUgW,GAC3B,WACL77B,OAAO8lB,oBAAoB,SAAU+V,MAEtC,IAEI1C,G,sGC4IH7tB,GAAoB,CACxBwvB,OAAQA,IAQKvvB,gBAjBS,SAAClL,GAAD,MAAY,CAClC4G,KAAM5G,EAAM4G,KACZF,gBAAiB1G,EAAM0G,gBACvBD,gBAAiBzG,EAAMyG,gBACvBxD,cAAejD,EAAMiD,cACrBH,UAAW9C,EAAMD,SAYqBkL,GAAzBC,EAnIA,SAACxD,GAAW,IAAD,EACK8D,qBADL,oBACnBpC,EADmB,KACXwyB,EADW,OAEGpwB,qBAFH,oBAEnBqC,EAFmB,KAEZwX,EAFY,OAGQ7Z,oBAAS,GAHjB,oBAGjBqvB,EAHiB,KAGLC,EAHK,KAQlBe,EAAe,WACnBf,GAAWD,IAGPvpB,EAAU4mB,KAEV4D,EACJ,kBAACC,GAAA,EAAD,CACE3xB,MAAM,UACN4xB,aAAW,cACX7wB,QAAS0wB,EACTI,KAAK,QACLpxB,UAAS,UAAKyG,EAAQqnB,WAAb,YAA2BkC,GAAcvpB,EAAQwnB,OAE1D,kBAAC,KAAD,CAAUjuB,UAAWyG,EAAQ6mB,YAsBjC,OACE,yBACEttB,UACGywB,MACA5zB,EAAMhB,iBACNgB,EAAMjB,iBACNiB,EAAMzE,eACNyE,EAAM5E,UAEH,aADA,cAIN,yBAAK+H,UAAU,gBAAgB1B,MAAO,CAAEC,OAAO,GAAD,OAAKA,EAAL,SAC9C,yBAAKyB,UAAWyG,EAAQ6D,MACtB,kBAAC+mB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAQtxB,UAAWyG,EAAQ8mB,QACzB,kBAAC,KAAD,CACEgE,SAAU,SAACC,GACTT,EAAaS,EAAKjzB,QAClBic,EAAYgX,EAAKxuB,UAGrB,kBAACyuB,GAAA,EAAD,KACE,kBAACxsB,GAAA,EAAD,CAAYjF,UAAWyG,EAAQ0oB,aAAcU,QAAQ,KAAKC,QAAM,GAC9D,yBAAK9vB,UAAU,cACb,kBAAC,IAAD,CAAMub,GAAI,KAAV,UACA,kBAAC,IAAD,CAAMA,GAAI,KACR,yBACEmW,IAAKC,KACL3xB,UAAU,oBACV4xB,IAAI,YA/ChB5uB,EAAQ,KAEPnG,EAAMd,KAAKhE,SACV,kBAAC,WAAD,KACG8E,EAAMd,KAAKjE,gBACV,kBAAC,GAAD,MAEA,kBAAC,GAAD,OAMDm5B,IA0CL,kBAACY,GAAA,EAAD,CACE7xB,UAAWyG,EAAQynB,OACnB2B,QAAQ,aACRiC,OAAO,QACPC,KAAM/B,EACNvpB,QAAS,CACPurB,MAAOvrB,EAAQ2nB,cAGjB,yBAAKpuB,UAAWyG,EAAQ4nB,cACtB,kBAAC6C,GAAA,EAAD,CAAY5wB,QAAS0wB,GACnB,kBAAC,KAAD,QAGJ,kBAACiB,GAAA,EAAD,MACA,kBAAC/B,GAAA,EAAD,CAAM5vB,QAAS0wB,IACXn0B,EAAMd,KAAKhE,SACX,kBAAC,WAAD,KACG8E,EAAMd,KAAKjE,gBACV,kBAAC,GAAD,MAEA,kBAAC,GAAD,c,qBCjHHo6B,I,OAjBA,WACb,OACE,yBAAKlyB,UAAU,eACb,yBAAKA,UAAU,sBACb,uBACEuT,KAAK,4CACLrb,OAAO,QACP8H,UAAU,qBAEV,kBAAC,KAAD,OANJ,gC,SCTOmyB,I,OAAetsB,cAAW,SAACzG,GAAD,MAAY,CACjD4yB,MAAO,CACL7mB,UAAW/L,EAAM4uB,QAAQ,GACzBxjB,QAAS,OACT4nB,cAAe,SACf9D,WAAY,SACZ/uB,MAAO,UACP8yB,YAAa,SAEfC,OAAQ,CACNC,OAAQnzB,EAAM4uB,QAAQ,GACtB1uB,gBAAiBF,EAAMozB,QAAQC,UAAUC,KACzCnzB,MAAO,UACP8yB,YAAa,SAEfM,KAAM,CACJ3vB,MAAO,OACPmI,UAAW/L,EAAM4uB,QAAQ,GACzBzuB,MAAO,UACP8yB,YAAa,SAEfO,OAAQ,CACNL,OAAQnzB,EAAM4uB,QAAQ,EAAG,EAAG,GAC5BzuB,MAAO,UACP8yB,YAAa,SAEfhc,KAAM,CACJ9W,MAAO,YACP2vB,eAAgB,aCPL7uB,I,OAAAA,aARS,SAAClL,GAAD,MAAY,CAClC09B,OAAQ19B,EAAMqC,SAOD6I,EAhBD,SAACxD,GAAD,OACZA,EAAMg2B,OAAOj8B,OAAS,GACtBiG,EAAMg2B,OAAOnxB,KAAI,SAAClK,GAAD,OACf,yBAAK4P,IAAK5P,EAAME,GAAIsI,UAAS,sBAAiBxI,EAAM63B,YACjD73B,EAAMuiB,YCLA+Y,GAAY,WACvB,OACE,kBAAC7tB,GAAA,EAAD,CAAY4qB,QAAQ,QAAQtwB,MAAM,gBAAgBwzB,MAAM,UACrD,kBACD,kBAAC,IAAD,CACEz0B,MAAO,CAAEiB,MAAO,aAChBgc,GAAG,iDAFL,UAKQ,KACP,IAAIyX,MAAOC,cACX,MCfMC,GAAY,WACvB,OACE,yBACEx7B,GAAG,eACHy7B,MAAM,6BACNC,QAAQ,MACRpwB,MAAM,OACNzE,OAAO,MACPwO,QAAQ,cACRsmB,oBAAoB,QAEpB,8BACE,oCAAgB37B,GAAG,QAAQ47B,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,MACtD,0BACEC,OAAO,KACPp1B,MAAO,CAAEq1B,UAAW,mBAAoBC,YAAa,OAEvD,0BACEF,OAAO,OACPp1B,MAAO,CAAEq1B,UAAW,oBAAqBC,YAAa,SAI5D,0BAAM18B,EAAE,+BAA+B0K,KAAK,kBCvBrCiyB,GAAS,WACpB,OACE,yBACEjyB,KAAK,oBACLlK,GAAG,iBACHy7B,MAAM,6BACNC,QAAQ,MACRpwB,MAAM,OACNzE,OAAO,OACPwO,QAAQ,cACRsmB,oBAAoB,QAEpB,oCAAgB37B,GAAG,QAAQ47B,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,MACtD,0BACEC,OAAO,KACPp1B,MAAO,CAAEq1B,UAAW,mBAAoBC,YAAa,OAEvD,0BACEF,OAAO,OACPp1B,MAAO,CAAEq1B,UAAW,oBAAqBC,YAAa,QAG1D,0BAAM18B,EAAE,+BAA+B0K,KAAK,kB,2FC6I5CxB,GAAoB,CACxBgvB,SAAUA,GACV0E,SbtIsB,SAAC,GAAD,IAAGpoB,EAAH,EAAGA,KAAMqoB,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,gDAA+B,WAAOva,GAAP,sBAAArgB,EAAA,6DAC/CsgB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAGdzT,EAAO+tB,KAAKC,UAAU,CAAExoB,OAAMqoB,QAAOC,aANU,kBAQjCpa,KAAMC,KAAK,aAAc3T,EAAMwT,GARE,OAQ7CI,EAR6C,OASnDL,EAAS,CACPtpB,KAAMmD,IACNmC,QAASqkB,EAAInkB,OAEf8jB,EAASiW,MAb0C,kDAe7CyE,EAAS,KAAMna,SAASrkB,KAAKw+B,OACnC9Z,QAAQY,IAAR,MACIkZ,IACFA,EAAO/yB,SAAQ,SAACvI,GAAD,OAAW4gB,EAAS2V,GAASv2B,EAAMkhB,IAAK,cACvDM,QAAQY,IAAI,KAAMlB,MAEpBN,EAAS,CACPtpB,KAAMoD,MAtB2C,0DAA/B,yDamJT8M,gBAVS,SAAClL,GAAD,MAAY,CAClC2C,gBAAiB3C,EAAM4G,KAAKjE,mBASUsI,GAAzBC,EApJA,SAACxD,GAId,IAAM4J,EAAU0rB,KAJQ,EASWxxB,mBAAS,CAC1C+K,KAAM,GACNqoB,MAAO,GACPC,SAAU,KAZY,oBASjBxa,EATiB,KASP4a,EATO,KAehB1oB,EAA0B8N,EAA1B9N,KAAMqoB,EAAoBva,EAApBua,MAAOC,EAAaxa,EAAbwa,SAKfptB,EAAW,SAACvP,GAAD,OACf+8B,EAAe,eAAK5a,EAAN,gBAAiBniB,EAAEa,OAAOwT,KAAOrU,EAAEa,OAAO4K,UAKpD+Y,EAAQ,yCAAG,WAAOxkB,GAAP,UAAA+B,EAAA,sDACf/B,EAAEykB,iBACFjf,EAAMi3B,SAAS,CAAEpoB,OAAMqoB,QAAOC,aAFf,2CAAH,sDAad,OAJIn3B,EAAM/E,kBACRhD,OAAOC,SAASwe,KAAO,KAIvB,yBAAKvT,UAAU,kBACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKA,UAAU,wBACb,kBAACq0B,GAAA,EAAD,CAAWC,UAAU,OAAO90B,SAAS,MACnC,kBAAC6xB,GAAA,EAAD,MACA,yBAAKrxB,UAAWyG,EAAQurB,OACtB,kBAACuC,GAAA,EAAD,CAAQv0B,UAAWyG,EAAQ6rB,QACzB,kBAAC,KAAD,OAEF,kBAACrtB,GAAA,EAAD,CAAYqvB,UAAU,KAAKzE,QAAQ,MAAnC,WAGA,0BAAM7vB,UAAWyG,EAAQksB,KAAM9W,SAAU,SAACxkB,GAAD,OAAOwkB,EAASxkB,KACvD,kBAACm9B,GAAA,EAAD,CAAMC,WAAS,EAACzG,QAAS,GACvB,kBAACwG,GAAA,EAAD,CAAMnb,MAAI,EAACqb,GAAI,IACb,kBAACC,GAAA,EAAD,CACE9E,QAAQ,WACR1T,UAAQ,EACRyY,WAAS,EACT5pB,MAAM,OACNU,KAAK,OACLmpB,aAAa,OACb/xB,MAAO4I,EACP9E,SAAU,SAACvP,GAAD,OAAOuP,EAASvP,OAG9B,kBAACm9B,GAAA,EAAD,CAAMnb,MAAI,EAACqb,GAAI,IACb,kBAACC,GAAA,EAAD,CACE9E,QAAQ,WACR1T,UAAQ,EACRyY,WAAS,EACT5pB,MAAM,gBACNU,KAAK,QACLmpB,aAAa,QACb/xB,MAAOixB,EACPntB,SAAU,SAACvP,GAAD,OAAOuP,EAASvP,OAG9B,kBAACm9B,GAAA,EAAD,CAAMnb,MAAI,EAACqb,GAAI,IACb,kBAACC,GAAA,EAAD,CACE9E,QAAQ,WACR1T,UAAQ,EACRyY,WAAS,EACTlpB,KAAK,WACLV,MAAM,WACN7a,KAAK,WACL0kC,aAAa,mBACb/xB,MAAOkxB,EACPptB,SAAU,SAACvP,GAAD,OAAOuP,EAASvP,OAG9B,kBAACm9B,GAAA,EAAD,CAAMnb,MAAI,EAACqb,GAAI,IACb,kBAACI,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CAAUlyB,MAAM,mBAAmBvD,MAAM,YAE3CyL,MAAM,iFAIZ,kBAAC9F,GAAA,EAAD,CACE/U,KAAK,SACLykC,WAAS,EACT/E,QAAQ,YACRtwB,MAAM,UACNS,UAAWyG,EAAQmsB,QALrB,WASA,kBAAC4B,GAAA,EAAD,CAAMC,WAAS,EAACQ,QAAQ,YACtB,kBAACT,GAAA,EAAD,CAAMnb,MAAI,GACR,kBAAC,IAAD,CACEkC,GAA6B,SAC7Bvb,UAAWyG,EAAQ4P,KACnBwZ,QAAQ,SAHV,wCAWR,kBAACqF,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,SAIN,kBAAC,GAAD,UC9JOC,GAAcvvB,cAAW,SAACzG,GAAD,MAAY,CAChD4yB,MAAO,CACL7mB,UAAW/L,EAAM4uB,QAAQ,GACzBxjB,QAAS,OACT4nB,cAAe,SACf9D,WAAY,SACZ/uB,MAAO,UACP8yB,YAAa,WAEfC,OAAQ,CACNC,OAAQnzB,EAAM4uB,QAAQ,IAExB2E,KAAM,CACJ3vB,MAAO,OACPmI,UAAW/L,EAAM4uB,QAAQ,IAE3B4E,OAAQ,CACNL,OAAQnzB,EAAM4uB,QAAQ,EAAG,EAAG,IAE9B3X,KAAM,CACJ9W,MAAO,YACP2vB,eAAgB,YC8Hd9uB,GAAoB,CACxBi1B,MfzFmB,SAACtB,EAAOC,GAAR,gDAAqB,WAAOva,GAAP,sBAAArgB,EAAA,6DAClCsgB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAGdzT,EAAO+tB,KAAKC,UAAU,CAAEH,QAAOC,aANG,kBAQpBpa,KAAMC,KAAK,YAAa3T,EAAMwT,GARV,OAQhCI,EARgC,OAStCL,EAAS,CACPtpB,KAAMuD,IACN+B,QAASqkB,EAAInkB,OAEf8jB,EAASiW,MAb6B,kDAelC,KAAM1V,WACFma,EAAS,KAAMna,SAASrkB,KAAKw+B,SAEjCA,EAAO/yB,SAAQ,SAACvI,GAAD,OAAW4gB,EAAS2V,GAASv2B,EAAMkhB,IAAK,cAI3DN,EAAS,CACPtpB,KAAMwD,MAvB8B,0DAArB,wDeqGN0M,gBATS,SAAClL,GAAD,MAAY,CAClC2C,gBAAiB3C,EAAM4G,KAAKjE,mBAQUsI,GAAzBC,EAnID,SAACxD,GAIb,IAAM4J,EAAU2uB,KAJO,EASYz0B,mBAAS,CAC1CozB,MAAO,GACPC,SAAU,KAXW,oBAShBxa,EATgB,KASN4a,EATM,KAcfL,EAAoBva,EAApBua,MAAOC,EAAaxa,EAAbwa,SAKTptB,EAAW,SAACvP,GAAD,OACf+8B,EAAe,eAAK5a,EAAN,gBAAiBniB,EAAEa,OAAOwT,KAAOrU,EAAEa,OAAO4K,UAKpD+Y,EAAQ,yCAAG,WAAOxkB,GAAP,UAAA+B,EAAA,sDACf/B,EAAEykB,iBACFjf,EAAMw4B,MAAMtB,EAAOC,GAFJ,2CAAH,sDAad,OAJIn3B,EAAM/E,kBACRhD,OAAOC,SAASwe,KAAO,KAIvB,yBAAKvT,UAAU,iBACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKA,UAAU,uBACb,kBAACq0B,GAAA,EAAD,CAAWC,UAAU,OAAO90B,SAAS,MACnC,kBAAC6xB,GAAA,EAAD,MACA,yBAAKrxB,UAAWyG,EAAQurB,OACtB,kBAACuC,GAAA,EAAD,CAAQv0B,UAAWyG,EAAQ6rB,QACzB,kBAAC,KAAD,OAEF,kBAACrtB,GAAA,EAAD,CAAYqvB,UAAU,KAAKzE,QAAQ,MAAnC,WAGA,0BAAM7vB,UAAWyG,EAAQksB,KAAM9W,SAAU,SAACxkB,GAAD,OAAOwkB,EAASxkB,KACvD,kBAACs9B,GAAA,EAAD,CACE30B,UAAWyG,EAAQksB,KACnB9C,QAAQ,WACR0C,OAAO,SACPpW,UAAQ,EACRyY,WAAS,EACT5pB,MAAM,QACNU,KAAK,QACLmpB,aAAa,QACb/xB,MAAOixB,EACPntB,SAAU,SAACvP,GAAD,OAAOuP,EAASvP,MAE5B,kBAACs9B,GAAA,EAAD,CACE9E,QAAQ,WACR0C,OAAO,SACPpW,UAAQ,EACRyY,WAAS,EACTlpB,KAAK,WACLV,MAAM,WACN7a,KAAK,WACL0kC,aAAa,mBACb/xB,MAAOkxB,EACPptB,SAAU,SAACvP,GAAD,OAAOuP,EAASvP,MAE5B,kBAACy9B,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUlyB,MAAM,WAAWvD,MAAM,YAC1CyL,MAAM,gBAER,kBAAC9F,GAAA,EAAD,CACE/U,KAAK,SACLykC,WAAS,EACT/E,QAAQ,YACRtwB,MAAM,UACNS,UAAWyG,EAAQmsB,QALrB,WASA,kBAAC4B,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMnb,MAAI,EAACqb,IAAE,GACX,kBAAC,IAAD,CAAMnZ,GAAG,IAAIsU,QAAQ,QAAQ7vB,UAAWyG,EAAQ4P,MAAhD,qBAIF,kBAACme,GAAA,EAAD,CAAMnb,MAAI,GACR,kBAAC,IAAD,CACEkC,GAA6B,UAC7Bvb,UAAWyG,EAAQ4P,KACnBwZ,QAAQ,SAEP,sCAMX,kBAACqF,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,SAIN,kBAAC,GAAD,UCrHSG,I,OAtBD,WACZ,OACE,yBAAKt1B,UAAU,SACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,4BAAd,UACA,uBAAGA,UAAU,4BAAb,wBACA,uBAAGA,UAAU,6DAAb,kCAGA,uBACEu1B,IAAI,sBACJr9B,OAAO,SACPqb,KAAK,4CACLvT,UAAU,uBAJZ,wBCZO,qBACb,kBAAC,WAAD,KACE,yBACE1B,MAAO,CACLi0B,OAAQ,OACRiD,WAAY,cACZhrB,QAAS,QACTirB,eAAgB,OAChBzyB,MAAO,QACPzE,OAAQ,SAEVwO,QAAQ,cACRsmB,oBAAoB,YAEpB,0BACEzxB,KAAK,OACL8zB,OAAO,UACPC,eAAa,IACbC,gBAAgB,sCAChB1+B,EAAE,qIACF2+B,iBAAe,QACfv3B,MAAO,CAAEw3B,UAAW,WAAYC,gBAAiB,cAEjD,6BACEC,cAAc,oBACdC,YAAY,aACZC,IAAI,KACJC,SAAS,MACTvhB,OAAO,6BCkCXxU,I,OAAoB,CACxBg2B,kBC7D+B,2DAAM,WAAO3c,GAAP,gBAAArgB,EAAA,+EAEjBwgB,KAAM+V,IAAI,kBAFO,OAE7B7V,EAF6B,OAGnCL,EAAS,CACPtpB,KAAM0D,IACN4B,QAASqkB,EAAInkB,OALoB,gDAQnC8jB,EAAS,CACPtpB,KAAM2D,IACN2B,QAAS,CACPskB,IAAK,KAAMC,SAASC,WACpBC,OAAQ,KAAMF,SAASE,UAZQ,yDAAN,uDD8D/BX,aACA8c,qBC7CkC,2DAAM,WAAO5c,GAAP,gBAAArgB,EAAA,+EAEpBwgB,KAAMQ,OAAO,kBAFO,OAEhCN,EAFgC,OAGtCL,EAAS,CACPtpB,KAAMsE,IACNgB,QAASqkB,EAAInkB,OALuB,gDAQtC8jB,EAAS,CACPtpB,KAAM2D,IACN2B,QAAS,CACPskB,IAAK,KAAMC,SAASC,WACpBC,OAAQ,KAAMF,SAASE,UAZW,yDAAN,uDD8ClC0V,YAUavvB,gBAnBS,SAAClL,GAAD,MAAY,CAClC4G,KAAM5G,EAAM4G,KACZnD,QAASzD,EAAMyD,WAiBuBwH,GAAzBC,EA9DC,SAACxD,GAKf,OAJAiE,qBAAU,WACRjE,EAAMu5B,sBACL,CAACv5B,IAEGA,EAAMjE,QAAQb,SAA6B,OAAlB8E,EAAMjE,QACpC,kBAAC09B,GAAD,MAEA,kBAAC,WAAD,KACE,yBAAKt2B,UAAU,mBACb,yBAAKA,UAAU,yBACb,uCAAanD,EAAMd,KAAK/D,MAAQ6E,EAAMd,KAAK/D,KAAK0T,KAAhD,KACA,yBACEkmB,IAAI,YACJF,IAAM70B,EAAMd,KAAKhE,QAAmC,KAAzB8E,EAAMd,KAAK/D,KAAKs6B,OAC3CtyB,UAAU,8BAEZ,wBAAIA,UAAU,gCAAd,wBACuB,6BADvB,8BAC2D,8BAE3D,4BACEA,UAAU,kCACVM,QAAS,WACPzD,EAAM+yB,WAHV,UAQA,4BACE5vB,UAAU,kCACVM,QAAS,WACPzD,EAAMw5B,uBACNx5B,EAAM+yB,WAJV,wB,QEdKvvB,gBAJS,SAAClL,GAAD,MAAY,CAClC4G,KAAM5G,EAAM4G,QAGCsE,EAzBM,SAAC,GAAD,IACRmS,EADQ,EACnB8hB,UADmB,IAEnBv4B,KAAQjE,EAFW,EAEXA,gBAAiBC,EAFN,EAEMA,QACtBw+B,EAHgB,4CAKnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAC35B,GAAD,OACL/E,GAAoBC,EAGnB,kBAACya,EAAc3V,GAFf,kBAAC,IAAD,CAAU0e,GAAG,kBCQjB3jB,aAAaD,OACf43B,GAAa33B,aAAaD,OAG5B,IAuBe8+B,GAvBH,WAMV,OALA31B,qBAAU,WACRvE,GAAMkd,SAASiW,MACfnzB,GAAMkd,SrDKiB,yCAAM,WAAOA,GAAP,gBAAArgB,EAAA,+EAEXwgB,KAAM+V,IAAI,iBAFC,OAEvB7V,EAFuB,OAG7BL,EAAS,CACPtpB,KAAM+D,IACNuB,QAASqkB,EAAInkB,OALc,gDAQ7B8jB,EAAS,CACPtpB,KAAM8D,MATqB,yDAAN,yDqDJtB,IAGD,kBAAC,IAAD,CAAUsI,MAAOA,IACf,kBAAC,IAAD,CAAQm6B,SAAS,KACf,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,IAAOJ,OAAQ,kBAAM,kBAAC,GAAD,SACtC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAI,UAAatC,UAAWuC,KACzC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAI,SAAYtC,UAAWwC,KACxC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAI,SAAYtC,UAAWgB,KACxC,kBAAC,GAAD,CAAcqB,OAAK,EAACC,KAAI,WAActC,UAAWyC,MAEnD,kBAAC,GAAD,SCvBRC,IAASR,OACP,kBAAC,IAAD,CAAQE,SAAUO,IAChB,kBAAC,GAAD,OAEFjiB,SAASkiB,eAAe,SxK2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,iB,gCyKrInB,kCAAO,IAAMjqB,EAA2B,CACtCgJ,OAAQ,CACN4C,KAAM,WACN3L,OAAO,EACPiqB,UAAU,EACVlf,YAAa,EACb/N,QAAS,SACTkB,KAAM,SACNgsB,SAAU,gBACVC,SAAU,WAEZ7gC,QAAS,CACPqiB,KAAM,WACN3L,OAAO,EACPiqB,UAAU,EACVlf,YAAa,EACb/N,QAAS,UACTkB,KAAM,UACNgsB,SAAU,UACVC,SAAU,WAEZ/gB,OAAQ,CACNuC,KAAM,qBACN3L,OAAO,EACPiqB,UAAU,EACVlf,YAAa,EACb/N,QAAS,WACTkB,KAAM,SACNgsB,SAAU,iBACVC,SAAU,WAEZ5gB,SAAU,CACRoC,KAAM,OACN3L,OAAO,EACPiqB,UAAU,EACVlf,YAAa,EACb/N,QAAS,cACTkB,KAAM,WACNgsB,SAAU,qBACVC,SAAU,0BAEZ3gB,MAAO,CACLmC,KAAM,OACN3L,OAAO,EACPiqB,UAAU,EACVlf,YAAa,EACb/N,QAAS,aACTkB,KAAM,QACNgsB,SAAU,aACVC,SAAU,aAEZt8B,SAAU,CACR8d,KAAM,OACN3L,OAAO,EACPiqB,UAAU,EACVlf,YAAa,EACb/N,QAAS,WACTkB,KAAM,WACNgsB,SAAU,kBACVC,SAAU,WAEZh8B,SAAU,CACRwd,KAAM,OACN3L,OAAO,EACPiqB,UAAU,EACVlf,YAAa,EACb/N,QAAS,WACTkB,KAAM,WACNgsB,SAAU,kBACVC,SAAU,2BAEZ1gB,IAAK,CACHkC,KAAM,OACN3L,OAAO,EACPiqB,UAAU,EACVlf,YAAa,EACb/N,QAAS,MACTkB,KAAM,MACNgsB,SAAU,eACVC,SAAU,WAEZz8B,OAAQ,CACNie,KAAM,OACN3L,OAAO,EACPiqB,UAAU,EACVlf,YAAa,EACb/N,QAAS,SACTkB,KAAM,SACNgsB,SAAU,gBACVC,SAAU,2BAEZrgC,IAAK,CACH6hB,KAAM,OACN3L,OAAO,EACPiqB,UAAU,EACVlf,YAAa,EACb/N,QAAS,MACTkB,KAAM,MACNgsB,SAAU,qCACVC,SAAU,yBAEZlhC,OAAQ,CACN0iB,MAAM,EACN3L,OAAO,EACPiqB,UAAU,EACVlf,aAAc,EACd/N,QAAS,SACTkB,KAAM,SACNgsB,SAAU,gBACVC,SAAU,WAEZhhB,MAAO,CACLwC,MAAM,EACN3L,OAAO,EACPiqB,UAAU,EACVlf,aAAc,EACd/N,QAAS,SACTkB,KAAM,QACNgsB,SAAU,SACVC,SAAU,WAEZniC,QAAS,CACP2jB,MAAM,EACN3L,OAAO,EACPiqB,UAAU,EACVlf,aAAc,EACd/N,QAAS,UACTkB,KAAM,UACNgsB,SAAU,UACVC,SAAU,wBAEZrlB,QAAS,CACP6G,MAAM,EACN3L,OAAO,EACPiqB,UAAU,EACVlf,aAAc,EACd/N,QAAS,UACTkB,KAAM,UACNgsB,SAAU,UACVC,SAAU,wBAEZ7gB,cAAe,CACbqC,MAAM,EACN3L,OAAO,EACPiqB,UAAU,EACVlf,aAAc,EACd/N,QAAS,OACTkB,KAAM,gBACNgsB,SAAU,kBACVC,SAAU,wBAEZ9gB,aAAc,CACZsC,MAAM,EACN3L,OAAO,EACPiqB,UAAU,EACVlf,aAAc,EACd/N,QAAS,eACTkB,KAAM,eACNgsB,SAAU,sBACVC,SAAU,c","file":"static/js/main.28b51984.chunk.js","sourcesContent":["import { CHANGE_METHOD } from './constants';\r\n\r\nexport const changeMethod = (method) => ({\r\n  type: CHANGE_METHOD,\r\n  method,\r\n});\r\n","export const TOGGLE_MODAL = 'TOGGLE_MODAL';\r\nexport const SET_TO_REPLACE_LETTER = 'TO_REPLACE_LETTER';\r\nexport const SET_REPLACE_LETTER = 'REPLACE_LETTER';\r\nexport const SET_WORDBOOK = 'WORDBOOK';\r\nexport const CSHIFT_PLUS = 'CSHIFT_PLUS';\r\nexport const CSHIFT_MINUS = 'CSHIFT_MINUS';\r\nexport const SET_CSHIFT = 'SET_CSHIFT';\r\nexport const SET_RINGLENGTH = 'SET_RINGLENGTH';\r\nexport const TOGGLE_DIRECTION = 'TOGGLE_DIRECTION';\r\nexport const UPDATE_INPUT = 'UPDATE_INPUT';\r\nexport const CHANGE_METHOD = 'CHANGE_METHOD';\r\nexport const TOGGLE_FOREIGN_CHARS = 'TOGGLE_FOREIGN_CHARS';\r\nexport const UPDATE_OUTPUT = 'UPDATE_OUTPUT';\r\nexport const TOGGLE_CASEFORMAT = 'TOGGLE_CASEFORMAT';\r\nexport const SET_PRIME_1 = 'SET_PRIME_1';\r\nexport const SET_PRIME_2 = 'SET_PRIME_2';\r\nexport const UPDATE_ALPHABET = 'UPDATE_ALPHABET';\r\nexport const SET_KEYWORD_VIGENERE = 'SET_KEYWORD_VIGENERE';\r\nexport const SET_KEYWORD_PLAYFAIR = 'SET_KEYWORD_PLAYFAIR';\r\nexport const SET_AFFINE_ALPHA = 'SET_AFFINE_ALPHA';\r\nexport const SET_AFFINE_BETA = 'SET_AFFINE_BETA';\r\nexport const SET_OTP_KEY = 'SET_OTP_KEY';\r\nexport const PLAYSQUARE = 'PLAYSQUARE';\r\nexport const SET_SKYTALE_LENGTH = 'SET_SKYTALE_LENGTH';\r\nexport const SET_IOC_INPUT = 'SET_IOC_INPUT';\r\nexport const SET_IOC_OUTPUT = 'SET_IOC_OUTPUT';\r\nexport const SET_TIME_TO_CALCULATE = 'SET_TIME_TO_CALCULATE';\r\nexport const SET_RSA_PHI = 'SET_RSA_PHI';\r\nexport const SET_RSA_D = 'SET_RSA_D';\r\nexport const SET_RSA_N = 'SET_RSA_N';\r\nexport const SET_ALPHABET_ACTIVE = 'SET_ALPHABET_ACTIVE';\r\nexport const SET_RSA_E = 'SET_RSA_E';\r\nexport const TOGGLE_PRESETS_MODAL = 'TOGGLE_PRESETS_MODAL';\r\nexport const PRESET_LOADED = 'PRESET_LOADED';\r\nexport const PRESET_LOAD_ERROR = 'PRESET_LOAD_ERROR';\r\nexport const TOGGLE_ANALYSIS_MODAL = 'TOGGLE_ANALYSIS_MODAL';\r\nexport const TOGGLE_ANALYSIS_METHOD_FQ_INPUT =\r\n  'TOGGLE_ANALYSIS_METHOD_FQ_INPUT';\r\nexport const TOGGLE_ANALYSIS_METHOD_FQ_OUTPUT =\r\n  'TOGGLE_ANALYSIS_METHOD_FQ_OUTPUT';\r\nexport const TOGGLE_ANALYSIS_METHOD_IC_INPUT =\r\n  'TOGGLE_ANALYSIS_METHOD_IC_INPUT';\r\nexport const TOGGLE_ANALYSIS_METHOD_IC_OUTPUT =\r\n  'TOGGLE_ANALYSIS_METHOD_IC_OUTPUT';\r\nexport const TOGGLE_ANALYSIS_METHOD_CHI_INPUT =\r\n  'TOGGLE_ANALYSIS_METHOD_CHI_INPUT';\r\nexport const TOGGLE_ANALYSIS_METHOD_CHI_OUTPUT =\r\n  'TOGGLE_ANALYSIS_METHOD_CHI_OUTPUT';\r\nexport const SET_CASE_TRANSFORM_CHOICE = 'SET_CASE_TRANSFORM_CHOICE';\r\nexport const SET_KEYWORD_NIHILIST = 'SET_KEYWORD_NIHILIST';\r\nexport const SET_CIPHER_NIHILIST = 'SET_CIPHER_NIHILIST';\r\nexport const SET_NIHILIST_SQUARE = 'SET_NIHILIST_SQUARE';\r\nexport const SET_NIHILIST_RUNNING_KEY = 'SET_NIHILIST_RUNNING_KEY';\r\nexport const SET_NIHILIST_PLAIN_NUMBERS = 'SET_NIHILIST_PLAIN_NUMBERS';\r\nexport const SET_SUBSTITUTION_ALPHABET = 'SET_SUBSTITUTION_ALPHABET';\r\nexport const SET_TRIFID_KEY = 'SET_TRIFID_KEY';\r\nexport const SET_TRIFID_27TH_LETTER = 'SET_TRIFID_27TH_LETTER';\r\nexport const SET_TRIFID_GROUP_SIZE = 'SET_TRIFID_GROUP_SIZE';\r\nexport const SET_TRIFID_LAYERS = 'SET_TRIFID_LAYERS';\r\nexport const SET_TRIFID_GROUPS = 'SET_TRIFID_GROUPS';\r\n\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const ADD_PRESET = 'ADD_PRESET';\r\nexport const UPDATE_PRESETS = 'UPDATE_PRESETS';\r\nexport const PRESET_ERROR = 'PRESET_ERROR';\r\nexport const LOAD_PRESETS = 'LOAD_PRESETS';\r\nexport const SET_PRESET_DESCRIPTION = 'SET_PRESET_DESCRIPTION';\r\nexport const SET_PRESET_NAME = 'SET_PRESET_NAME';\r\nexport const DELETE_PRESET_ERROR = 'DELETE_PRESET_ERROR';\r\nexport const DELETE_PRESET_SUCCESS = 'DELETE_PRESET_SUCCESS';\r\nexport const TOGGLE_LOAD_PRESETS_MODAL = 'TOGGLE_LOAD_PRESETS_MODAL';\r\nexport const TOGGLE_SAVE_PRESETS_MODAL = 'TOGGLE_SAVE_PRESETS_MODAL';\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\r\nexport const DELETE_USER_ERROR = 'DELETE_USER_ERROR';\r\nexport const DELETE_PROFILE = 'DELETE_PROFILE';\r\n","import { TOGGLE_MODAL } from \"./constants\"\r\n\r\nexport const toggleModal = () => ({\r\n    type: TOGGLE_MODAL\r\n})","module.exports = __webpack_public_path__ + \"static/media/key.94d57550.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { TOGGLE_MODAL } from '../actions/constants';\r\n\r\nconst modal = (state = false, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_MODAL:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modal;\r\n","import {\r\n  SET_TO_REPLACE_LETTER,\r\n  SET_REPLACE_LETTER,\r\n} from '../actions/constants';\r\n\r\nconst initialState = {\r\n  toReplaceLetter: 'quick',\r\n  replaceLetter: 'mean',\r\n};\r\n\r\nconst replace = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TO_REPLACE_LETTER:\r\n      return {\r\n        ...state,\r\n        toReplaceLetter: action.payload.toReplaceLetter,\r\n      };\r\n    case SET_REPLACE_LETTER:\r\n      return {\r\n        ...state,\r\n        replaceLetter: action.payload.replaceLetter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default replace;\r\n","import { SET_WORDBOOK } from '../actions/constants';\r\n\r\nconst wordbook = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_WORDBOOK:\r\n      return action.payload.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default wordbook;\r\n","import { SET_CSHIFT } from '../actions/constants';\r\n\r\nconst cShift = (state = 3, action) => {\r\n  switch (action.type) {\r\n    case SET_CSHIFT:\r\n      return action.cShift;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cShift;\r\n","import { TOGGLE_DIRECTION } from '../actions/constants';\r\n\r\nconst direction = (state = 'encrypt', action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_DIRECTION:\r\n      return action.direction;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default direction;\r\n","import { UPDATE_INPUT } from '../actions/constants';\r\n\r\nconst input = (\r\n  state = 'The quick brown fox jumps over the lazy dog.',\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case UPDATE_INPUT:\r\n      return action.input;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default input;\r\n","import { CHANGE_METHOD } from '../actions/constants';\r\n\r\nconst method = (state = 'rsa', action) => {\r\n  switch (action.type) {\r\n    case CHANGE_METHOD:\r\n      return action.method;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default method;\r\n","import { TOGGLE_FOREIGN_CHARS } from '../actions/constants';\r\n\r\nconst foreignChars = (state = 'include', action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_FOREIGN_CHARS:\r\n      return action.chars;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default foreignChars;\r\n","import { UPDATE_OUTPUT } from '../actions/constants';\r\n\r\nconst output = (state = '', action) => {\r\n  switch (action.type) {\r\n    case UPDATE_OUTPUT:\r\n      return action.output;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default output;\r\n","import { TOGGLE_CASEFORMAT } from '../actions/constants';\r\n\r\nconst caseformat = (state = 'maintain', action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_CASEFORMAT:\r\n      return action.caseformat;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default caseformat;\r\n","import { UPDATE_ALPHABET, SET_ALPHABET_ACTIVE } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  alphabet: 'abcdefghijklmnopqrstuvwxyz',\r\n  active: false,\r\n};\r\n\r\nconst alphabet = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_ALPHABET:\r\n      return {\r\n        ...state,\r\n        alphabet: action.new_alphabet,\r\n      };\r\n    case SET_ALPHABET_ACTIVE:\r\n      return {\r\n        ...state,\r\n        active: action.active,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default alphabet;\r\n","import { SET_KEYWORD_VIGENERE } from '../actions/constants';\r\n\r\nconst keywordVigenere = (state = 'cipher', action) => {\r\n  switch (action.type) {\r\n    case SET_KEYWORD_VIGENERE:\r\n      return action.keywordVigenere;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default keywordVigenere;\r\n","import { SET_AFFINE_ALPHA, SET_AFFINE_BETA } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  affine_alpha: 5,\r\n  affine_beta: 1,\r\n};\r\n\r\nconst affine = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AFFINE_ALPHA:\r\n      return {\r\n        ...state,\r\n        affine_alpha: Number(action.affine_alpha),\r\n      };\r\n    case SET_AFFINE_BETA:\r\n      return {\r\n        ...state,\r\n        affine_beta: Number(action.affine_beta),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default affine;\r\n","import { SET_OTP_KEY } from '../actions/constants';\r\n\r\nconst otpKey = (state = '', action) => {\r\n  switch (action.type) {\r\n    case SET_OTP_KEY:\r\n      return action.otpKey;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default otpKey;\r\n","import { SET_SKYTALE_LENGTH } from '../actions/constants';\r\nimport { SET_RINGLENGTH } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  length: 1,\r\n  ringLength: 12,\r\n};\r\n\r\nconst skytale = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SKYTALE_LENGTH:\r\n      return {\r\n        ...state,\r\n        length: action.length,\r\n      };\r\n    case SET_RINGLENGTH:\r\n      return {\r\n        ...state,\r\n        ringLength: action.ringLength,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default skytale;\r\n","import {\r\n  SET_PRIME_1,\r\n  SET_PRIME_2,\r\n  SET_TIME_TO_CALCULATE,\r\n  SET_RSA_PHI,\r\n  SET_RSA_D,\r\n  SET_RSA_N,\r\n  SET_RSA_E,\r\n} from '../actions/constants';\r\n\r\nconst initialState = {\r\n  prime1:\r\n    '250556952327646214427246777488032351712139094643988394726193347352092526616305469220133287929222242315761834129196430398011844978805263868522770723615504744438638381670321613949280530254014602887707960375752016807510602846590492724216092721283154099469988532068424757856392563537802339735359978831013',\r\n  prime2:\r\n    '290245329165570025116016487217740287508837913295571609463914348778319654489118435855243301969001872061575755804802874062021927719647357060447135321577028929269578574760547268310055056867386875959045119093967972205124270441648450825188877095173754196346551952542599226295413057787340278528252358809329',\r\n  timeToCalculate: '0s',\r\n  d: '0',\r\n  phi: '0',\r\n  n: '0',\r\n  e: '17',\r\n};\r\n\r\nconst rsa = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_RSA_E:\r\n      if (!isNaN(action.e) && action.e !== null) {\r\n        return {\r\n          ...state,\r\n          e: action.e,\r\n        };\r\n      }\r\n      break;\r\n    case SET_RSA_PHI:\r\n      return {\r\n        ...state,\r\n        phi: action.phi,\r\n      };\r\n    case SET_RSA_D:\r\n      return {\r\n        ...state,\r\n        d: action.d,\r\n      };\r\n    case SET_RSA_N:\r\n      return {\r\n        ...state,\r\n        n: action.n,\r\n      };\r\n    case SET_PRIME_1:\r\n      return {\r\n        ...state,\r\n        prime1: action.prime1,\r\n      };\r\n    case SET_PRIME_2:\r\n      return {\r\n        ...state,\r\n        prime2: action.prime2,\r\n      };\r\n    case SET_TIME_TO_CALCULATE:\r\n      return {\r\n        ...state,\r\n        timeToCalculate: action.timeToCalculate,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rsa;\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/constants';\r\n\r\nconst initialState = [];\r\n\r\nconst alert = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default alert;\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from '../actions/constants';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        picture: null,\r\n        presets: null,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { TOGGLE_PRESETS_MODAL } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  modalOpen: false,\r\n  target: null,\r\n};\r\n\r\nconst presetsModal = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_PRESETS_MODAL:\r\n      return {\r\n        ...state,\r\n        modalOpen: !state.modalOpen,\r\n        target: action.target,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default presetsModal;\r\n","import { TOGGLE_ANALYSIS_MODAL } from '../actions/constants';\r\n\r\nconst analysisModal = (state = false, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_ANALYSIS_MODAL:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default analysisModal;\r\n","import {\r\n  TOGGLE_ANALYSIS_METHOD_FQ_INPUT,\r\n  TOGGLE_ANALYSIS_METHOD_FQ_OUTPUT,\r\n  TOGGLE_ANALYSIS_METHOD_IC_INPUT,\r\n  TOGGLE_ANALYSIS_METHOD_IC_OUTPUT,\r\n  TOGGLE_ANALYSIS_METHOD_CHI_OUTPUT,\r\n  TOGGLE_ANALYSIS_METHOD_CHI_INPUT,\r\n} from '../actions/constants';\r\n\r\nconst initialState = {\r\n  fq_input: true,\r\n  fq_output: true,\r\n\r\n  ic_output: true,\r\n  ic_input: true,\r\n\r\n  chi_input: true,\r\n  chi_output: true,\r\n};\r\n\r\nconst analysisMethod = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_ANALYSIS_METHOD_FQ_INPUT:\r\n      return {\r\n        ...state,\r\n        fq_input: !state['fq_input'],\r\n      };\r\n    case TOGGLE_ANALYSIS_METHOD_FQ_OUTPUT:\r\n      return {\r\n        ...state,\r\n        fq_output: !state['fq_output'],\r\n      };\r\n    case TOGGLE_ANALYSIS_METHOD_IC_INPUT:\r\n      return {\r\n        ...state,\r\n        ic_input: !state['ic_input'],\r\n      };\r\n    case TOGGLE_ANALYSIS_METHOD_IC_OUTPUT:\r\n      return {\r\n        ...state,\r\n        ic_output: !state['ic_output'],\r\n      };\r\n    case TOGGLE_ANALYSIS_METHOD_CHI_INPUT:\r\n      return {\r\n        ...state,\r\n        chi_input: !state['chi_input'],\r\n      };\r\n    case TOGGLE_ANALYSIS_METHOD_CHI_OUTPUT:\r\n      return {\r\n        ...state,\r\n        chi_output: !state['chi_output'],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default analysisMethod;\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  DELETE_PROFILE,\r\n} from '../actions/constants';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  loading: true,\r\n  error: {},\r\n  presets: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case DELETE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        loading: false,\r\n      };\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_PRESET,\r\n  PRESET_ERROR,\r\n  LOAD_PRESETS,\r\n  DELETE_PRESET_ERROR,\r\n  DELETE_PRESET_SUCCESS,\r\n} from '../actions/constants';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_PRESET:\r\n      return [...state, action.payload];\r\n    case LOAD_PRESETS:\r\n      return action.payload;\r\n    case PRESET_ERROR:\r\n    case DELETE_PRESET_ERROR:\r\n      return state;\r\n    case DELETE_PRESET_SUCCESS:\r\n      return state.filter((preset) => preset._id !== action.id);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_PRESET_DESCRIPTION } from '../actions/constants';\r\n\r\nconst presetDescription = (state = '', action) => {\r\n  switch (action.type) {\r\n    case SET_PRESET_DESCRIPTION:\r\n      return action.description;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default presetDescription;\r\n","import { SET_PRESET_NAME } from '../actions/constants';\r\n\r\nconst presetName = (state = '', action) => {\r\n  switch (action.type) {\r\n    case SET_PRESET_NAME:\r\n      return action.presetName;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default presetName;\r\n","import { SET_CASE_TRANSFORM_CHOICE } from '../actions/constants';\r\n\r\nconst caseTransformChoice = (state = 'lower', action) => {\r\n  switch (action.type) {\r\n    case SET_CASE_TRANSFORM_CHOICE:\r\n      return action.case_choice;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default caseTransformChoice;\r\n","import { SET_SUBSTITUTION_ALPHABET } from '../actions/constants';\r\n\r\nlet initialState = {\r\n  a: 'a',\r\n  b: 'b',\r\n  c: 'c',\r\n  d: 'd',\r\n  e: 'e',\r\n  f: 'f',\r\n  g: 'g',\r\n  h: 'h',\r\n  i: 'i',\r\n  j: 'j',\r\n  k: 'k',\r\n  l: 'l',\r\n  m: 'm',\r\n  n: 'n',\r\n  o: 'o',\r\n  p: 'p',\r\n  q: 'q',\r\n  r: 'r',\r\n  s: 's',\r\n  t: 't',\r\n  u: 'u',\r\n  v: 'v',\r\n  w: 'w',\r\n  x: 'x',\r\n  y: 'y',\r\n  z: 'z',\r\n};\r\n\r\nconst substitutionAlphabet = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SUBSTITUTION_ALPHABET:\r\n      const newState = { ...action.substitutionAlphabet };\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default substitutionAlphabet;\r\n","import {\r\n  SET_TRIFID_KEY,\r\n  SET_TRIFID_27TH_LETTER,\r\n  SET_TRIFID_GROUP_SIZE,\r\n  SET_TRIFID_LAYERS,\r\n  SET_TRIFID_GROUPS,\r\n} from '../actions/constants';\r\n\r\nconst initialState = {\r\n  trifidKey: 'FELIX MARIE DELASTELLE',\r\n  trifid27thLetter: '+',\r\n  trifidGroupSize: 5,\r\n  trifidLayers: null,\r\n  trifidGroups: null,\r\n};\r\n\r\nconst trifid = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TRIFID_GROUPS:\r\n      return {\r\n        ...state,\r\n        trifidGroups: action.trifidGroups,\r\n      };\r\n    case SET_TRIFID_KEY:\r\n      return {\r\n        ...state,\r\n        trifidKey: action.trifidKey,\r\n      };\r\n    case SET_TRIFID_LAYERS:\r\n      return {\r\n        ...state,\r\n        trifidLayers: action.trifidLayers,\r\n      };\r\n    case SET_TRIFID_GROUP_SIZE:\r\n      return {\r\n        ...state,\r\n        trifidGroupSize: action.trifidGroupSize,\r\n      };\r\n    case SET_TRIFID_27TH_LETTER:\r\n      return {\r\n        ...state,\r\n        trifid27thLetter: action.trifid27thLetter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default trifid;\r\n","import { SET_KEYWORD_PLAYFAIR, PLAYSQUARE } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  keywordPlayfair: 'cipher',\r\n  playsquare: [''],\r\n};\r\n\r\nconst playfair = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PLAYSQUARE:\r\n      return {\r\n        ...state,\r\n        playsquare: action.playsquare,\r\n      };\r\n    case SET_KEYWORD_PLAYFAIR:\r\n      return {\r\n        ...state,\r\n        keywordPlayfair: action.keywordPlayfair,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playfair;\r\n","import {\r\n  SET_NIHILIST_SQUARE,\r\n  SET_CIPHER_NIHILIST,\r\n  SET_KEYWORD_NIHILIST,\r\n  SET_NIHILIST_PLAIN_NUMBERS,\r\n  SET_NIHILIST_RUNNING_KEY,\r\n} from '../actions/constants';\r\n\r\nconst initialState = {\r\n  cipherNihilist: 'RUSSIAN',\r\n  keywordNihilist: 'ZEBRAS',\r\n  nihilistPlainNumbers: [],\r\n  nihilistRunningKey: [],\r\n  nihilistSquare: [],\r\n};\r\n\r\nconst nihilist = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CIPHER_NIHILIST:\r\n      return {\r\n        ...state,\r\n        cipherNihilist: action.cipherNihilist,\r\n      };\r\n    case SET_KEYWORD_NIHILIST:\r\n      return {\r\n        ...state,\r\n        keywordNihilist: action.keywordNihilist,\r\n      };\r\n    case SET_NIHILIST_PLAIN_NUMBERS:\r\n      return {\r\n        ...state,\r\n        nihilistPlainNumbers: action.nihilistPlainNumbers,\r\n      };\r\n    case SET_NIHILIST_RUNNING_KEY:\r\n      return {\r\n        ...state,\r\n        nihilistRunningKey: action.nihilistRunningKey,\r\n      };\r\n    case SET_NIHILIST_SQUARE:\r\n      return {\r\n        ...state,\r\n        nihilistSquare: action.nihilistSquare,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default nihilist;\r\n","import { TOGGLE_LOAD_PRESETS_MODAL } from '../actions/constants';\r\n\r\nconst loadPresetModal = (state = false, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_LOAD_PRESETS_MODAL:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loadPresetModal;\r\n","import { TOGGLE_SAVE_PRESETS_MODAL } from '../actions/constants';\r\n\r\nconst savePresetModal = (state = false, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_SAVE_PRESETS_MODAL:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default savePresetModal;\r\n","import { combineReducers } from 'redux';\r\nimport modal from './modal';\r\nimport replace from './replace';\r\nimport wordbook from './wordbook';\r\nimport cShift from './cShift';\r\nimport direction from './direction';\r\nimport input from './input';\r\nimport method from './method';\r\nimport foreignChars from './foreignChars';\r\nimport output from './output';\r\nimport caseformat from './caseformat';\r\nimport alphabet from './alphabet';\r\nimport keywordVigenere from './keywordVigenere';\r\nimport affine from './affine';\r\nimport otpKey from './otpKey';\r\nimport skytale from './skytale';\r\nimport rsa from './rsa';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport presetsModal from './presetsModal';\r\nimport analysisModal from './analysisModal';\r\nimport analysisMethod from './analysisMethod';\r\nimport profile from './profile';\r\nimport presets from './presets';\r\nimport presetDescription from './presetDescription';\r\nimport presetName from './presetName';\r\nimport caseTransformChoice from './caseTransformChoice';\r\nimport substitutionAlphabet from './substitutionAlphabet';\r\nimport trifid from './trifid';\r\nimport playfair from './playfair';\r\nimport nihilist from './nihilist';\r\nimport loadPresetModal from './loadPresetModal';\r\nimport savePresetModal from './savePresetModal';\r\n\r\nexport default combineReducers({\r\n  modal,\r\n  replace,\r\n  wordbook,\r\n  cShift,\r\n  direction,\r\n  input,\r\n  method,\r\n  foreignChars,\r\n  output,\r\n  caseformat,\r\n  alphabet,\r\n  keywordVigenere,\r\n  affine,\r\n  otpKey,\r\n  skytale,\r\n  rsa,\r\n  alert,\r\n  auth,\r\n  presetsModal,\r\n  analysisModal,\r\n  analysisMethod,\r\n  profile,\r\n  presets,\r\n  presetDescription,\r\n  presetName,\r\n  caseTransformChoice,\r\n  nihilist,\r\n  substitutionAlphabet,\r\n  trifid,\r\n  playfair,\r\n  loadPresetModal,\r\n  savePresetModal,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","const encryptionProps = (props) => {\r\n  if (!props || !props.method) return;\r\n\r\n  switch (props.method) {\r\n    case 'trifid':\r\n      return [\r\n        props.input,\r\n        props.trifidKey,\r\n        props.trifidGroupSize,\r\n        props.trifid27thLetter,\r\n        props.alphabet,\r\n        props.direction,\r\n      ];\r\n    case 'substitution':\r\n      return [props.input, props.substitutionAlphabet, props.direction];\r\n    case 'rot13':\r\n      return [\r\n        props.direction === 'crack' ? props.wordbook : null,\r\n        props.input,\r\n        props.alphabet,\r\n        13,\r\n        props.direction,\r\n        props.caseformat,\r\n        props.foreignChars,\r\n      ];\r\n    case 'caesar':\r\n      if (props.direction === 'crack') {\r\n        return [\r\n          props.wordbook,\r\n          props.input,\r\n          props.alphabet,\r\n          props.cShift,\r\n          props.direction,\r\n          props.caseformat,\r\n          props.foreignChars,\r\n        ];\r\n      } else\r\n        return [\r\n          null,\r\n          props.input,\r\n          props.alphabet,\r\n          props.cShift,\r\n          props.direction,\r\n          props.caseformat,\r\n          props.foreignChars,\r\n        ];\r\n    case 'rsa':\r\n      return [\r\n        props.input,\r\n        props.prime1,\r\n        props.prime2,\r\n        props.e,\r\n        props.direction,\r\n      ];\r\n    case 'otp':\r\n      return [\r\n        props.input,\r\n        props.caseformat,\r\n        props.foreignChars,\r\n        props.direction,\r\n        props.otpKey,\r\n        props.alphabet,\r\n      ];\r\n\r\n    case 'reverse':\r\n      return [\r\n        props.input,\r\n        props.caseformat,\r\n        props.foreignChars,\r\n        props.alphabet,\r\n      ];\r\n    case 'casetransform':\r\n      return [props.input, props.caseTransformChoice];\r\n    case 'atbash':\r\n      return [props.input, props.caseformat, props.foreignChars];\r\n    case 'affine':\r\n      return [\r\n        props.alphabet,\r\n        props.input,\r\n        props.affine_alpha,\r\n        props.affine_beta,\r\n        props.direction,\r\n        props.foreignChars,\r\n        props.caseformat,\r\n      ];\r\n    case 'vigenere':\r\n      return [\r\n        props.input,\r\n        props.alphabet,\r\n        props.direction,\r\n        props.foreignChars,\r\n        props.caseformat,\r\n        props.keywordVigenere,\r\n      ];\r\n    case 'playfair':\r\n      return [\r\n        props.input,\r\n        props.alphabet,\r\n        props.direction,\r\n        props.keywordPlayfair,\r\n      ];\r\n    case 'morse':\r\n      return [props.input, props.direction];\r\n    case 'replace':\r\n      return [props.input, props.toReplaceLetter, props.replaceLetter];\r\n    case 'nihilist':\r\n      return [\r\n        props.input,\r\n        props.alphabet,\r\n        props.direction,\r\n        props.keywordNihilist,\r\n        props.cipherNihilist,\r\n      ];\r\n    case 'skytale':\r\n      return [\r\n        props.direction,\r\n        props.caseformat,\r\n        props.input,\r\n        props.ringLength,\r\n        props.foreignChars,\r\n      ];\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nexport default encryptionProps;\r\n","const math = (() => {\r\n  let alphabet = 'abcdefghijklmnopqrstuvwxyz';\r\n\r\n  const addSigns = (textoutput, textinput) => {\r\n    let output = [];\r\n    let i = 0;\r\n    for (let element of textinput) {\r\n      if (alphabet.indexOf(element.toLowerCase()) === -1) {\r\n        output.push(element);\r\n        if (element === ' ') i++;\r\n      } else {\r\n        output.push(textoutput[i]);\r\n        i++;\r\n      }\r\n    }\r\n    return output.join('');\r\n  };\r\n\r\n  const addSpaces = (userinput, encrypted) => {\r\n    let arr = [...encrypted];\r\n    for (let i = 0; i < userinput.length; i++) {\r\n      if (userinput[i] === ' ') {\r\n        arr.splice(i, 0, userinput[i]);\r\n      }\r\n    }\r\n    return arr.join('');\r\n  };\r\n\r\n  const removeSigns = (textinput) => {\r\n    textinput = textinput.toLowerCase();\r\n    let output = [];\r\n    for (let char of textinput) {\r\n      if (alphabet.indexOf(char) !== -1) {\r\n        output.push(char);\r\n      }\r\n    }\r\n    return output.join('');\r\n  };\r\n\r\n  const correctCase = (userInput, output) => {\r\n    let noSigns = [];\r\n    for (let char of userInput) {\r\n      if (alphabet.indexOf(char.toLowerCase()) !== -1 || char === ' ') {\r\n        noSigns.push(char);\r\n      }\r\n    }\r\n    noSigns = noSigns.join('');\r\n\r\n    let caseCorrected = [];\r\n\r\n    for (let i = 0; i < userInput.length; i++) {\r\n      if (userInput[i].toLowerCase() === userInput[i]) {\r\n        caseCorrected.push(output[i]);\r\n      } else {\r\n        caseCorrected.push(output[i].toUpperCase());\r\n      }\r\n    }\r\n    return caseCorrected.join('');\r\n  };\r\n\r\n  const autoresize = (evt) => {\r\n    let el = evt.target || evt;\r\n    el.style.height = 'inherit';\r\n    let computed = window.getComputedStyle(el);\r\n    let height =\r\n      parseInt(computed.getPropertyValue('border-top-width'), 10) +\r\n      parseInt(computed.getPropertyValue('padding-top'), 10) +\r\n      el.scrollHeight +\r\n      parseInt(computed.getPropertyValue('padding-bottom'), 10) +\r\n      parseInt(computed.getPropertyValue('border-bottom-width'), 10);\r\n    el.style.height = height + 'px';\r\n  };\r\n\r\n  return {\r\n    removeSigns: removeSigns,\r\n    addSpaces: addSpaces,\r\n    addSigns: addSigns,\r\n    correctCase: correctCase,\r\n    autoresize: autoresize,\r\n  };\r\n})();\r\n\r\nexport default math;\r\n","import { UPDATE_INPUT } from './constants';\r\n\r\nexport const updateInput = (input) => ({\r\n  type: UPDATE_INPUT,\r\n  input,\r\n});\r\n","import { TOGGLE_DIRECTION } from './constants';\r\n\r\nexport const toggleDirection = (direction) => ({\r\n  type: TOGGLE_DIRECTION,\r\n  direction,\r\n});\r\n","import { TOGGLE_ANALYSIS_MODAL } from './constants';\r\n\r\nexport const toggleAnalysisModal = () => {\r\n  return {\r\n    type: TOGGLE_ANALYSIS_MODAL,\r\n  };\r\n};\r\n","import { TOGGLE_LOAD_PRESETS_MODAL } from './constants';\r\n\r\nexport const toggleLoadPresetModal = () => {\r\n  return {\r\n    type: TOGGLE_LOAD_PRESETS_MODAL,\r\n  };\r\n};\r\n","import { TOGGLE_SAVE_PRESETS_MODAL } from './constants';\r\n\r\nexport const toggleSavePresetModal = () => {\r\n  return {\r\n    type: TOGGLE_SAVE_PRESETS_MODAL,\r\n  };\r\n};\r\n","import React, { Fragment } from 'react';\r\n\r\n//MUI\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst StyledTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 420,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nconst SwapInputsTooltip = () => {\r\n  return (\r\n    <StyledTooltip\r\n      title={<Fragment>Swap Input, Output and encryption direction.</Fragment>}\r\n    >\r\n      <SwapHorizIcon className='block__head-button-svg' />\r\n    </StyledTooltip>\r\n  );\r\n};\r\n\r\nexport default SwapInputsTooltip;\r\n","import React, { Fragment } from 'react';\r\n\r\n//MUI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst StyledTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 420,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nconst LoadPresetTooltip = () => {\r\n  return (\r\n    <StyledTooltip title={<Fragment>Load a preset</Fragment>}>\r\n      <GetAppIcon className='block__head-button-svg' />\r\n    </StyledTooltip>\r\n  );\r\n};\r\n\r\nexport default LoadPresetTooltip;\r\n","import React, { Fragment } from 'react';\r\n\r\n//MUI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\nconst StyledTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 420,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nconst SavePresetTooltip = () => {\r\n  return (\r\n    <StyledTooltip title={<Fragment>Save as Preset</Fragment>}>\r\n      <PublishIcon className='block__head-button-svg' />\r\n    </StyledTooltip>\r\n  );\r\n};\r\n\r\nexport default SavePresetTooltip;\r\n","import React, { Fragment } from 'react';\r\n\r\n//MUI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nconst StyledTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 420,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nconst AddAnalysisMethodTooltip = () => {\r\n  return (\r\n    <StyledTooltip title={<Fragment>Add a analysis method</Fragment>}>\r\n      <AddCircleOutlineIcon className='block__head-button-svg' />\r\n    </StyledTooltip>\r\n  );\r\n};\r\n\r\nexport default AddAnalysisMethodTooltip;\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport { toggleDirection } from '../../../actions/toggleDirection';\r\nimport { updateInput } from '../../../actions/updateInput';\r\nimport { toggleAnalysisModal } from '../../../actions/toggleAnalysisModal';\r\nimport { toggleLoadPresetModal } from '../../../actions/toggleLoadPresetModal';\r\nimport { toggleSavePresetModal } from '../../../actions/toggleSavePresetModal';\r\n\r\n//Components\r\nimport SwapInputsTooltip from './Tooltips/SwapInputsTooltip';\r\nimport LoadPresetTooltip from './Tooltips/LoadPresetTooltip';\r\nimport SavePresetTooltip from './Tooltips/SavePresetTooltip';\r\nimport AddAnalysisMethodTooltip from './Tooltips/AddAnalysisMethodTooltip';\r\n\r\nconst MenueButtons = ({\r\n  toggleSavePresetModal,\r\n  toggleLoadPresetModal,\r\n  toggleDirection,\r\n  output,\r\n  direction,\r\n  updateInput,\r\n  toggleAnalysisModal,\r\n}) => {\r\n  /**\r\n   * Puts the encrypted output into the input field\r\n   * and toggles the direction so the encrypted input\r\n   * gets decrypted.\r\n   */\r\n  const swapInputOutput = () => {\r\n    const newDirection =\r\n      direction === 'encrypt'\r\n        ? 'decrypt'\r\n        : direction === 'crack'\r\n        ? 'crack'\r\n        : 'encrypt';\r\n    updateInput(output);\r\n    toggleDirection(newDirection);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        className='block__head-button'\r\n        onClick={() => {\r\n          swapInputOutput();\r\n        }}\r\n      >\r\n        <SwapInputsTooltip />\r\n      </button>\r\n      <button\r\n        className='block__head-button'\r\n        onClick={() => {\r\n          toggleLoadPresetModal();\r\n        }}\r\n      >\r\n        <LoadPresetTooltip />\r\n      </button>\r\n      <button\r\n        className='block__head-button'\r\n        onClick={() => {\r\n          toggleSavePresetModal('save');\r\n        }}\r\n      >\r\n        <SavePresetTooltip />\r\n      </button>\r\n      <button\r\n        className='block__head-button'\r\n        onClick={() => {\r\n          toggleAnalysisModal();\r\n        }}\r\n      >\r\n        <AddAnalysisMethodTooltip />\r\n      </button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  output: state.output,\r\n  direction: state.direction,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  toggleDirection: toggleDirection,\r\n  toggleAnalysisModal: toggleAnalysisModal,\r\n  updateInput: updateInput,\r\n  toggleLoadPresetModal,\r\n  toggleSavePresetModal,\r\n};\r\n\r\nMenueButtons.propTypes = {\r\n  output: PropTypes.string.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n  toggleDirection: PropTypes.func.isRequired,\r\n  toggleAnalysisModal: PropTypes.func.isRequired,\r\n  updateInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(MenueButtons);\r\n","import ResizeObserver from 'resize-observer-polyfill';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useResizeObserver = (ref) => {\r\n  const [dimensions, setDimensions] = useState(null);\r\n  useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        setDimensions(entry.contentRect);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n\r\nexport default useResizeObserver;\r\n","/**\r\n * Calculates the lettercount\r\n */\r\nconst letterCount = (input, alphabet) => {\r\n  let map = new Array(26).fill(0);\r\n  for (let element of input.toString()) {\r\n    let index = alphabet.indexOf(element.toLowerCase());\r\n    if (index !== -1) map[index] += 1;\r\n  }\r\n  return map;\r\n};\r\n\r\n/**\r\n * Gets the frequency for every letter\r\n */\r\nconst frequency = (input, alphabet) => {\r\n  let arr = letterCount(input, alphabet);\r\n  let totalLetters = arr.reduce((a, b) => a + b, 0);\r\n  let freq = new Array(26).fill(0);\r\n\r\n  let index = 0;\r\n  for (let char of arr) {\r\n    if (char !== 0) freq[index] = (char / totalLetters) * 100;\r\n    index++;\r\n  }\r\n  return freq;\r\n};\r\n\r\nexport default frequency;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { select, axisBottom, axisLeft, scaleLinear, scaleBand } from 'd3';\r\nimport * as d3 from 'd3';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Helper\r\nimport useResizeObserver from '../../../../main/helper/Resizeobserver';\r\n\r\n//Assets\r\nimport frequency from './frequency-analysis-logic.js';\r\n\r\nfunction BarChart({ data, alphabet, inputValue }) {\r\n  const input = inputValue ? inputValue : ' ';\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n  const svg = select(svgRef.current);\r\n\r\n  useEffect(() => {\r\n    if (!input) return undefined;\r\n    if (!dimensions) return;\r\n\r\n    // scales\r\n    const xScale = scaleBand()\r\n      .domain(alphabet.map((value, index) => value))\r\n      .range([0, dimensions.width])\r\n      .padding(0.2);\r\n\r\n    let frequencyMax;\r\n    d3.max(frequency(input, alphabet)) > 15\r\n      ? (frequencyMax = d3.max(frequency(input, alphabet)))\r\n      : (frequencyMax = 15);\r\n\r\n    const yScale = scaleLinear()\r\n      .domain([0, frequencyMax])\r\n      .range([dimensions.height, 0]);\r\n\r\n    const colorScale = scaleLinear()\r\n      .domain([0, 20])\r\n      .range(['#ffadb7', '#ff0022'])\r\n      .clamp(true);\r\n\r\n    // create x-axis\r\n    const xAxis = axisBottom(xScale).ticks(data.length);\r\n    svg\r\n      .select('.x-axis')\r\n      .style('transform', `translateY(${dimensions.height}px)`)\r\n      .call(xAxis);\r\n\r\n    // create y-axis\r\n    const yAxis = axisLeft(yScale);\r\n    svg.select('.y-axis').call(yAxis);\r\n\r\n    // draw the bars\r\n    svg\r\n      .selectAll('.bar')\r\n      .data(data)\r\n      .join('rect')\r\n      .attr('class', 'bar')\r\n      .style('transform', 'scale(1, -1)')\r\n      .attr('x', (value, index) => xScale(alphabet[index]))\r\n      .attr('y', -dimensions.height)\r\n      .attr('width', xScale.bandwidth())\r\n      .on('mouseenter', (value, index) => {\r\n        svg\r\n          .selectAll('.tooltip')\r\n          .data([value])\r\n          .join((enter) => enter.append('text').attr('y', yScale(value) - 4))\r\n          .attr('class', 'tooltip')\r\n          .text(value)\r\n          .attr('x', xScale(alphabet[index]) + xScale.bandwidth() / 2)\r\n          .attr('text-anchor', 'middle')\r\n          .transition()\r\n          .attr('y', yScale(value) - 8)\r\n          .attr('opacity', 1)\r\n          .attr('fill', 'white');\r\n      })\r\n      .on('mouseleave', () => svg.select('.tooltip').remove())\r\n      .transition()\r\n      .attr('fill', colorScale)\r\n      .attr('height', (value) => dimensions.height - yScale(value));\r\n    svg\r\n      .selectAll('.circle')\r\n      .data(frequency(input, alphabet))\r\n      .join('circle')\r\n      .attr('class', 'circle')\r\n      .style('transform', 'scale(1, -1)')\r\n      .attr('r', xScale.bandwidth() / 5)\r\n      .attr(\r\n        'cx',\r\n        (value, index) => xScale(alphabet[index]) + xScale.bandwidth() / 2\r\n      )\r\n      .attr(\r\n        'cy',\r\n        (value) => -dimensions.height + dimensions.height - yScale(value)\r\n      )\r\n      .attr('fill', '#ffffff20')\r\n      .style('stroke', '#00a1ff')\r\n      .on('mouseenter', (value, index) => {\r\n        svg\r\n          .selectAll('.tooltip')\r\n          .data([value.toFixed(2)])\r\n          .join((enter) => enter.append('text').attr('y', yScale(value) - 4))\r\n          .attr('class', 'tooltip')\r\n          .text(value.toFixed(2))\r\n          .attr('x', xScale(alphabet[index]) + xScale.bandwidth() / 2)\r\n          .attr('text-anchor', 'middle')\r\n          .transition()\r\n          .attr('y', yScale(value) - 8)\r\n          .attr('opacity', 1)\r\n          .attr('fill', 'white');\r\n      });\r\n  }, [data, dimensions, alphabet, input, svg]);\r\n\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      className='svgWrapper'\r\n      style={{ marginBottom: '1em' }}\r\n    >\r\n      <svg ref={svgRef}>\r\n        <g className='x-axis' />\r\n        <g className='y-axis' />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nBarChart.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  alphabet: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  inputValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BarChart;\r\n","import {\r\n  TOGGLE_ANALYSIS_METHOD_FQ_INPUT,\r\n  TOGGLE_ANALYSIS_METHOD_FQ_OUTPUT,\r\n  TOGGLE_ANALYSIS_METHOD_IC_INPUT,\r\n  TOGGLE_ANALYSIS_METHOD_IC_OUTPUT,\r\n  TOGGLE_ANALYSIS_METHOD_CHI_INPUT,\r\n  TOGGLE_ANALYSIS_METHOD_CHI_OUTPUT,\r\n} from './constants';\r\n\r\nexport const toggleAnalysisMethodFQInput = () => ({\r\n  type: TOGGLE_ANALYSIS_METHOD_FQ_INPUT,\r\n});\r\n\r\nexport const toggleAnalysisMethodFQOutput = () => ({\r\n  type: TOGGLE_ANALYSIS_METHOD_FQ_OUTPUT,\r\n});\r\n\r\nexport const toggleAnalysisMethodICInput = () => ({\r\n  type: TOGGLE_ANALYSIS_METHOD_IC_INPUT,\r\n});\r\n\r\nexport const toggleAnalysisMethodICOutput = () => ({\r\n  type: TOGGLE_ANALYSIS_METHOD_IC_OUTPUT,\r\n});\r\n\r\nexport const toggleAnalysisMethodCHIInput = () => ({\r\n  type: TOGGLE_ANALYSIS_METHOD_CHI_INPUT,\r\n});\r\n\r\nexport const toggleAnalysisMethodCHIOutput = () => ({\r\n  type: TOGGLE_ANALYSIS_METHOD_CHI_OUTPUT,\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//Actions\r\nimport {\r\n  toggleAnalysisMethodFQInput,\r\n  toggleAnalysisMethodFQOutput,\r\n  toggleAnalysisMethodICOutput,\r\n  toggleAnalysisMethodICInput,\r\n  toggleAnalysisMethodCHIInput,\r\n  toggleAnalysisMethodCHIOutput,\r\n} from '../../../../actions/toggleAnalysisMethod';\r\n\r\nconst StyledTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 420,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nfunction RemoveAnalysisMethodButton({\r\n  menue,\r\n  method,\r\n  toggleAnalysisMethodFQInput,\r\n  toggleAnalysisMethodFQOutput,\r\n  toggleAnalysisMethodICOutput,\r\n  toggleAnalysisMethodICInput,\r\n  toggleAnalysisMethodCHIInput,\r\n  toggleAnalysisMethodCHIOutput,\r\n}) {\r\n  /**\r\n   * Checks the menue the component is in and\r\n   * the method that is to be removed. Then\r\n   * sends a redux-action to remove the method\r\n   * on either input or output.\r\n   */\r\n  const handleClick = () => {\r\n    if (menue === 'input') {\r\n      switch (method) {\r\n        case 'frequency-analysis':\r\n          toggleAnalysisMethodFQInput();\r\n          break;\r\n        case 'index-of-coincidence':\r\n          toggleAnalysisMethodICInput();\r\n          break;\r\n        case 'chi-squared':\r\n          toggleAnalysisMethodCHIInput();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      switch (method) {\r\n        case 'frequency-analysis':\r\n          toggleAnalysisMethodFQOutput();\r\n          break;\r\n        case 'index-of-coincidence':\r\n          toggleAnalysisMethodICOutput();\r\n          break;\r\n        case 'chi-squared':\r\n          toggleAnalysisMethodCHIOutput();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <StyledTooltip\r\n      onClick={() => handleClick()}\r\n      title={\r\n        <Fragment>\r\n          <Typography color='inherit'>Remove Analysis Method</Typography>\r\n          Removes this element from the menue. You can always get it back by\r\n          clicking the PLUS icon in the top right corner.\r\n        </Fragment>\r\n      }\r\n    >\r\n      <Button>\r\n        <HighlightOffIcon></HighlightOffIcon>\r\n      </Button>\r\n    </StyledTooltip>\r\n  );\r\n}\r\n\r\nconst mapActionToProps = {\r\n  toggleAnalysisMethodFQInput: toggleAnalysisMethodFQInput,\r\n  toggleAnalysisMethodFQOutput: toggleAnalysisMethodFQOutput,\r\n  toggleAnalysisMethodICOutput: toggleAnalysisMethodICOutput,\r\n  toggleAnalysisMethodICInput: toggleAnalysisMethodICInput,\r\n  toggleAnalysisMethodCHIInput: toggleAnalysisMethodCHIInput,\r\n  toggleAnalysisMethodCHIOutput: toggleAnalysisMethodCHIOutput,\r\n};\r\n\r\nRemoveAnalysisMethodButton.propTypes = {\r\n  toggleAnalysisMethodFQInput: PropTypes.func.isRequired,\r\n  toggleAnalysisMethodFQOutput: PropTypes.func.isRequired,\r\n  toggleAnalysisMethodICOutput: PropTypes.func.isRequired,\r\n  toggleAnalysisMethodICInput: PropTypes.func.isRequired,\r\n  toggleAnalysisMethodCHIInput: PropTypes.func.isRequired,\r\n  toggleAnalysisMethodCHIOutput: PropTypes.func.isRequired,\r\n  menue: PropTypes.string.isRequired,\r\n  method: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(null, mapActionToProps)(RemoveAnalysisMethodButton);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst StyledTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 420,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nfunction AnalysisMethodsExplanationTooltip({ method }) {\r\n  return (\r\n    <StyledTooltip\r\n      title={\r\n        method === 'frequency-analysis' ? (\r\n          <Fragment>\r\n            <Typography color='inherit'>Frequency Analysis</Typography>\r\n            Studies the distribution and frequency of letters in a text. Every\r\n            language has a unique pattern of letter distribution and is\r\n            identifiable by that pattern on a chart. Different encryption\r\n            methods show distinguished pattern changes in the graph and make the\r\n            frequency analysis a good tool to solve classic ciphertexts.\r\n          </Fragment>\r\n        ) : method === 'index-of-coincidence' ? (\r\n          <Fragment>\r\n            <Typography color='inherit'>Index Of Coincidence (IC)</Typography>\r\n            Is an indicator for the frequency of wich letters appears in a text.\r\n            Different languages and encryption algorithms have distinguishable\r\n            IC's. This makes the IC a good tool to analyse how a given text is\r\n            encrypted. F.e. the skytale method isn't transforming a letter, just\r\n            it's placement. The IC stays exactly the same. A One time pad\r\n            algorithm is equalizing the distribution of letters and has an equal\r\n            chance for every given letter to appear. The IC will be 0.037 -\r\n            0.038 (1/26).\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <Typography color='inherit'>Chi Squared (χ2)</Typography>\r\n            The Chi Squared Test is used to compare the distribution of\r\n            plaintext and ciphertext. The lower the value, the higher the chance\r\n            that the used setting decrypted the text.\r\n          </Fragment>\r\n        )\r\n      }\r\n    >\r\n      <Button>\r\n        <InfoIcon></InfoIcon>\r\n      </Button>\r\n    </StyledTooltip>\r\n  );\r\n}\r\n\r\nAnalysisMethodsExplanationTooltip.propTypes = {\r\n  method: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AnalysisMethodsExplanationTooltip;\r\n","export const frequencies_per_language = {\r\n  english: [\r\n    8.167,\r\n    1.492,\r\n    2.202,\r\n    4.253,\r\n    12.7,\r\n    2.228,\r\n    2.015,\r\n    6.094,\r\n    6.966,\r\n    0.153,\r\n    1.292,\r\n    4.025,\r\n    2.406,\r\n    6.749,\r\n    7.507,\r\n    1.929,\r\n    0.095,\r\n    5.987,\r\n    6.327,\r\n    9.356,\r\n    2.758,\r\n    0.978,\r\n    2.56,\r\n    0.15,\r\n    1.994,\r\n    0.077,\r\n  ],\r\n  german: [\r\n    6.34,\r\n    2.21,\r\n    2.71,\r\n    4.92,\r\n    15.99,\r\n    1.8,\r\n    3.02,\r\n    4.11,\r\n    7.6,\r\n    0.27,\r\n    1.5,\r\n    3.72,\r\n    2.75,\r\n    9.59,\r\n    2.75,\r\n    1.06,\r\n    0.04,\r\n    7.71,\r\n    6.41,\r\n    6.43,\r\n    3.76,\r\n    0.94,\r\n    1.4,\r\n    0.07,\r\n    0.13,\r\n    1.22,\r\n  ],\r\n  finnish: [\r\n    12.22,\r\n    0.28,\r\n    0.28,\r\n    1.04,\r\n    7.97,\r\n    0.19,\r\n    0.39,\r\n    1.85,\r\n    10.82,\r\n    2.04,\r\n    4.97,\r\n    5.76,\r\n    3.2,\r\n    8.83,\r\n    5.61,\r\n    1.84,\r\n    0.01,\r\n    2.87,\r\n    7.86,\r\n    8.75,\r\n    5.01,\r\n    2.25,\r\n    0.09,\r\n    0.03,\r\n    1.74,\r\n    0.05,\r\n  ],\r\n  french: [\r\n    7.6,\r\n    0.96,\r\n    3.39,\r\n    4.08,\r\n    14.47,\r\n    1.12,\r\n    1.18,\r\n    0.93,\r\n    7.21,\r\n    0.3,\r\n    0.16,\r\n    5.86,\r\n    2.78,\r\n    7.32,\r\n    5.39,\r\n    2.98,\r\n    0.85,\r\n    6.86,\r\n    7.98,\r\n    7.11,\r\n    5.55,\r\n    1.29,\r\n    0.08,\r\n    0.43,\r\n    0.34,\r\n    0.1,\r\n  ],\r\n  spanish: [\r\n    12.5,\r\n    1.27,\r\n    4.43,\r\n    5.14,\r\n    13.24,\r\n    0.79,\r\n    1.17,\r\n    0.81,\r\n    6.91,\r\n    0.45,\r\n    0.08,\r\n    5.84,\r\n    2.61,\r\n    7.09,\r\n    8.98,\r\n    2.75,\r\n    0.83,\r\n    6.62,\r\n    7.44,\r\n    4.42,\r\n    4.0,\r\n    0.98,\r\n    0.03,\r\n    0.19,\r\n    0.79,\r\n    0.42,\r\n  ],\r\n  swedish: [\r\n    9.38,\r\n    1.54,\r\n    1.49,\r\n    4.7,\r\n    10.15,\r\n    2.03,\r\n    2.86,\r\n    2.09,\r\n    5.82,\r\n    0.61,\r\n    3.14,\r\n    5.28,\r\n    3.47,\r\n    8.54,\r\n    4.48,\r\n    1.84,\r\n    0.02,\r\n    8.43,\r\n    6.59,\r\n    7.69,\r\n    1.92,\r\n    2.42,\r\n    0.14,\r\n    0.16,\r\n    0.71,\r\n    0.07,\r\n  ],\r\n};\r\n\r\nexport const languages = [\r\n  'English',\r\n  'German',\r\n  'Finnish',\r\n  'French',\r\n  'Spanish',\r\n  'Swedish',\r\n];\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const FrequencyAnalysisStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    lineHeight: 2,\r\n  },\r\n  body: {\r\n    fontSize: '14px',\r\n  },\r\n}));\r\n","import React, { useState, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n//Components\r\nimport Barchart from './Barchart';\r\nimport RemoveAnalysisMethodButton from '../RemoveAnalysisMethodButton';\r\nimport AnalysisMethodsExplanationTooltip from '../../Tooltips/AnalysisMethodsExplanationTooltip';\r\n\r\n//Assets\r\nimport { frequencies_per_language } from './data';\r\nimport { languages } from './data';\r\nimport './frequency-analysis.scss';\r\nimport { FrequencyAnalysisStyles } from './FrequencyAnalysisStyles';\r\n\r\nfunction FrequencyAnalysis({ inputValue, menue }) {\r\n  const [selectedLanguage, setSelectedLanguage] = useState('English');\r\n  const [panelStatus, changePanelStatus] = useState(false);\r\n\r\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\r\n  const classes = FrequencyAnalysisStyles();\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      square={true}\r\n      onChange={() => changePanelStatus(!panelStatus)}\r\n    >\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls='panel2a-content'\r\n        id='panel2a-header'\r\n      >\r\n        <Typography className={classes.heading}>Frequency Analysis</Typography>\r\n        <AnalysisMethodsExplanationTooltip method={'frequency-analysis'} />\r\n        <RemoveAnalysisMethodButton\r\n          menue={menue}\r\n          method={'frequency-analysis'}\r\n        />\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <div className='frequency-analysis-barchart'>\r\n          {panelStatus ? (\r\n            <Barchart\r\n              data={[\r\n                ...frequencies_per_language[selectedLanguage.toLowerCase()],\r\n              ]}\r\n              alphabet={alphabet}\r\n              inputValue={inputValue}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        <div className='frequency-analysis-language__choice-wrapper'>\r\n          {panelStatus ? (\r\n            <Fragment>\r\n              <label htmlFor='fq-lang-select'>Language to compare to:</label>\r\n              <select\r\n                id='fq-lang-select'\r\n                className='frequency-analysis-language__select'\r\n                onClick={(evt) => setSelectedLanguage(evt.target.value)}\r\n              >\r\n                {languages.map((language) => {\r\n                  return (\r\n                    <option\r\n                      key={language}\r\n                      id={language}\r\n                      className='frequency-analysis-language__option'\r\n                    >\r\n                      {language}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </Fragment>\r\n          ) : null}\r\n        </div>{' '}\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n\r\nFrequencyAnalysis.propTypes = {\r\n  inputValue: PropTypes.string.isRequired,\r\n  menue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FrequencyAnalysis;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const IndexOfCoincidenceStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    lineHeight: 2,\r\n  },\r\n  body: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n  },\r\n}));\r\n","export const calcIndexOfCoincidence = (input) => {\r\n  //Check if input or outputfield\r\n\r\n  if (!input || input.length === 0) return;\r\n\r\n  //calc for input or output -> true = input, false = output\r\n  let inputValue = input.toString();\r\n\r\n  let alphabet = 'abcdefghijklmnopqrstuvwxyz';\r\n\r\n  //don't use foreign chars\r\n  let cleanedInput = inputValue.split('').filter((character) => {\r\n    return alphabet.indexOf(character.toLowerCase()) !== -1;\r\n  });\r\n\r\n  //Return if only signs\r\n  if (cleanedInput.length === 0) return;\r\n\r\n  // count all the occurences of every letter in the input\r\n  let counts = new Array(26).fill(0);\r\n  for (let character of cleanedInput) {\r\n    let indexOfCharacter = alphabet.indexOf(character.toLowerCase());\r\n    counts[indexOfCharacter]++;\r\n  }\r\n\r\n  // don't use letters that have a count of one as 1 * (1 - 1) === 0\r\n  let countsCleaned = counts.filter((element) => element > 1);\r\n\r\n  // calculate count ( count - 1 ) and sum all the results up\r\n  let countCi = countsCleaned\r\n    .map((count) => {\r\n      return count * (count - 1);\r\n    })\r\n    .reduce((a, b) => a + b, 0);\r\n\r\n  //final calculation with countsum and inputlength\r\n  let ioc = countCi / (cleanedInput.length * (cleanedInput.length - 1));\r\n\r\n  return !isNaN(ioc) ? ioc : '0';\r\n};\r\n\r\nconst probabilities = {\r\n  English: 1.73,\r\n  French: 2.02,\r\n  German: 2.05,\r\n  Italian: 1.94,\r\n  Portugese: 1.94,\r\n  Russian: 1.76,\r\n  Spanish: 1.94,\r\n};\r\n\r\nexport const calcLanguageProbability = (ioc) => {\r\n  let adjustedIOC = ioc * 26;\r\n  let tempProbability = Infinity;\r\n  let language = '';\r\n  for (let probability of Object.keys(probabilities)) {\r\n    let diff = probabilities[probability] - adjustedIOC;\r\n    if (Math.abs(diff) < tempProbability) {\r\n      tempProbability = Math.abs(diff);\r\n      language = probability;\r\n    }\r\n  }\r\n  return language;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n//Components\r\nimport AnalysisMethodsExplanationTooltip from '../../Tooltips/AnalysisMethodsExplanationTooltip';\r\nimport RemoveAnalysisMethodButton from '../RemoveAnalysisMethodButton';\r\n\r\n//Assets\r\nimport './ioc.scss';\r\nimport { IndexOfCoincidenceStyles } from './IndexOfCoincidenceStyles';\r\n\r\n//Helpers\r\nimport { calcIndexOfCoincidence, calcLanguageProbability } from './ioc-logic';\r\n\r\nfunction IndexOfCoincidence({ menue, input, output }) {\r\n  const [expandedStatus, changeExpandedStatus] = useState(false);\r\n  const classes = IndexOfCoincidenceStyles();\r\n\r\n  const ioc =\r\n    menue === 'input'\r\n      ? calcIndexOfCoincidence(input)\r\n      : calcIndexOfCoincidence(output);\r\n\r\n  const languageProbability = calcLanguageProbability(ioc);\r\n\r\n  const IocBody = () => {\r\n    if (!ioc && ioc !== 0) return 'no input';\r\n    else\r\n      return (\r\n        <div className='ioc-information'>\r\n          <div className='ioc-information__category'>\r\n            <span className='ioc-information__text'>IC per letter =</span>\r\n            &nbsp;{parseFloat(ioc).toFixed(4)}\r\n          </div>\r\n          <div className='ioc-information__category'>\r\n            <span className='ioc-information__text'>Text-IC =</span>\r\n            &nbsp;{parseFloat(ioc * 26).toFixed(4)}\r\n          </div>\r\n          <div className='ioc-information__category'>\r\n            <span className='ioc-information__text'>Text IC closest to</span>\r\n            &nbsp;{languageProbability}\r\n          </div>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      square={true}\r\n      onChange={() => {\r\n        changeExpandedStatus(!expandedStatus);\r\n      }}\r\n    >\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls='panel2a-content'\r\n        id='panel2a-header'\r\n      >\r\n        <Typography className={classes.heading}>\r\n          Index Of Coincidence IC\r\n        </Typography>\r\n        <AnalysisMethodsExplanationTooltip method={'index-of-coincidence'} />\r\n        <RemoveAnalysisMethodButton\r\n          menue={menue}\r\n          method={'index-of-coincidence'}\r\n        />\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails className={classes.body}>\r\n        {expandedStatus ? IocBody() : ''}\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  input: state.input,\r\n  output: state.output,\r\n});\r\n\r\nIndexOfCoincidence.propTypes = {\r\n  input: PropTypes.string.isRequired,\r\n  output: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(IndexOfCoincidence);\r\n","const languages = {\r\n  English: [\r\n    8.167,\r\n    1.492,\r\n    2.782,\r\n    4.253,\r\n    12.702,\r\n    2.228,\r\n    2.015,\r\n    6.094,\r\n    6.966,\r\n    0.153,\r\n    0.772,\r\n    4.025,\r\n    2.406,\r\n    6.749,\r\n    7.507,\r\n    1.929,\r\n    0.095,\r\n    5.987,\r\n    6.327,\r\n    9.056,\r\n    2.758,\r\n    0.978,\r\n    2.36,\r\n    0.15,\r\n    1.974,\r\n    0.074,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.01,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n  ],\r\n\r\n  German: [\r\n    6.51,\r\n    1.89,\r\n    3.06,\r\n    5.08,\r\n    17.4,\r\n    1.66,\r\n    3.01,\r\n    4.76,\r\n    7.55,\r\n    0.27,\r\n    1.21,\r\n    3.44,\r\n    2.53,\r\n    9.78,\r\n    2.51,\r\n    0.79,\r\n    0.02,\r\n    7.0,\r\n    7.27,\r\n    6.15,\r\n    4.35,\r\n    0.67,\r\n    1.89,\r\n    0.03,\r\n    0.04,\r\n    1.13,\r\n    0.0,\r\n    0.31,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.01,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n  ],\r\n\r\n  French: [\r\n    7.636,\r\n    0.901,\r\n    3.26,\r\n    3.669,\r\n    14.715,\r\n    1.066,\r\n    0.866,\r\n    0.737,\r\n    7.529,\r\n    0.545,\r\n    0.049,\r\n    5.456,\r\n    2.968,\r\n    7.095,\r\n    5.378,\r\n    3.021,\r\n    1.362,\r\n    6.553,\r\n    7.948,\r\n    7.244,\r\n    6.311,\r\n    1.628,\r\n    0.114,\r\n    0.387,\r\n    0.308,\r\n    0.136,\r\n    0.018,\r\n    0.0,\r\n    0.486,\r\n    0.0,\r\n    0.085,\r\n    0.0,\r\n    0.0,\r\n    0.271,\r\n    1.904,\r\n    0.225,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.045,\r\n    0.0,\r\n    0.005,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.058,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n  ],\r\n\r\n  Spanish: [\r\n    12.53,\r\n    1.42,\r\n    4.68,\r\n    5.86,\r\n    13.68,\r\n    0.69,\r\n    1.01,\r\n    0.7,\r\n    6.25,\r\n    0.44,\r\n    0.0,\r\n    4.97,\r\n    3.15,\r\n    6.71,\r\n    8.68,\r\n    2.51,\r\n    0.88,\r\n    6.87,\r\n    7.98,\r\n    4.63,\r\n    3.93,\r\n    0.9,\r\n    0.02,\r\n    0.22,\r\n    0.9,\r\n    0.52,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n  ],\r\n\r\n  Esperanto: [\r\n    12.12,\r\n    0.98,\r\n    0.78,\r\n    3.04,\r\n    8.99,\r\n    1.03,\r\n    1.17,\r\n    0.38,\r\n    10.01,\r\n    3.5,\r\n    4.16,\r\n    6.14,\r\n    2.99,\r\n    7.96,\r\n    8.78,\r\n    2.74,\r\n    0.0,\r\n    5.91,\r\n    6.09,\r\n    5.27,\r\n    3.18,\r\n    1.9,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.5,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.66,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.69,\r\n    0.02,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.12,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.38,\r\n    0.0,\r\n    0.0,\r\n    0.52,\r\n    0.0,\r\n    0.0,\r\n  ],\r\n\r\n  Swedish: [\r\n    10.04,\r\n    1.31,\r\n    1.71,\r\n    4.9,\r\n    9.85,\r\n    1.81,\r\n    3.44,\r\n    2.85,\r\n    5.01,\r\n    0.9,\r\n    3.24,\r\n    4.81,\r\n    3.55,\r\n    8.45,\r\n    4.06,\r\n    1.57,\r\n    0.01,\r\n    7.88,\r\n    5.32,\r\n    8.89,\r\n    1.86,\r\n    2.55,\r\n    0.0,\r\n    0.11,\r\n    0.49,\r\n    0.04,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n    0.0,\r\n  ],\r\n};\r\n\r\nexport default languages;\r\n","import languages from './letterFrequency';\r\n\r\nexport const chiSquaredCalculation = (language, input) => {\r\n  const letters = 'abcdefghijklmnopqrstuvwxyzœßàąçĉćèéêëęĝĥîìïĵłńóòŝśùŭźż';\r\n\r\n  //Puts the letter occurences of every letter into an array\r\n\r\n  const countLetters = () => {\r\n    let output = Array(letters.length).fill(0);\r\n    for (let letterToSearch of letters) {\r\n      for (let i = 0; i < input.split('').length; i++) {\r\n        if (letterToSearch === input.split('')[i].toLowerCase()) {\r\n          output[letters.indexOf(letterToSearch)] += 1;\r\n        }\r\n      }\r\n    }\r\n    return output;\r\n  };\r\n\r\n  // Calculate the expected letter distribution for every letter and\r\n  // put it into an array\r\n\r\n  const calcExpectedCount = () => {\r\n    let cleanInput = [];\r\n    for (let i = 0; i < input.length; i++) {\r\n      if (letters.indexOf(input[i].toLowerCase()) !== -1) {\r\n        cleanInput.push(input[i].toLowerCase());\r\n      }\r\n    }\r\n    let expectedCounts = [];\r\n    if (language !== undefined) {\r\n      let lang = languages[language];\r\n      for (let letterToSearch of letters) {\r\n        let ind = letters.indexOf(letterToSearch);\r\n        expectedCounts.push((cleanInput.length / 100) * lang[ind]);\r\n      }\r\n    }\r\n    return expectedCounts;\r\n  };\r\n\r\n  // Calculates the final chi squared value\r\n\r\n  const difference = () => {\r\n    if (language !== undefined) {\r\n      let expected = calcExpectedCount();\r\n      let observed = countLetters();\r\n      let singleChis = [];\r\n\r\n      let index = 0;\r\n      for (let element of observed) {\r\n        // Division by 0 is not possible so if ...\r\n\r\n        if (\r\n          Math.pow(element - expected[index], 2) !== 0 &&\r\n          expected[index] !== 0\r\n        ) {\r\n          singleChis.push(\r\n            Math.pow(element - expected[index], 2) / expected[index]\r\n          );\r\n        } else singleChis.push(0);\r\n        index++;\r\n      }\r\n\r\n      // The last step is to add the single chi squared values up to the final chi squared value for the whole text\r\n\r\n      return singleChis.reduce((total, num) => total + num);\r\n    }\r\n  };\r\n  return difference();\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const ChiSquaredStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    lineHeight: '2',\r\n  },\r\n  body: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    paddingTop: '24px !important',\r\n    display: 'block !important',\r\n  },\r\n  select: {\r\n    fontfamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    width: 'fit-content',\r\n    textAlign: 'left',\r\n    cursor: 'pointer',\r\n    letterSpacing: '.1rem',\r\n    marginLeft: '1em',\r\n    border: '1px solid #ffffff78',\r\n    padding: '5px',\r\n    fontWeight: '400',\r\n    borderRadius: '20px',\r\n    fontSize: '12px',\r\n    color: 'white',\r\n    backgroundColor: '#525050',\r\n  },\r\n  option: {\r\n    color: '#dadada',\r\n    fontWeight: '400',\r\n    fontSize: '14px',\r\n  },\r\n  label: {\r\n    color: '#dadada',\r\n    fontSize: '14px',\r\n    letterSpacing: '.05em',\r\n    fontfamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: '400',\r\n  },\r\n  result: {\r\n    paddingTop: '20px',\r\n    borderTop: '1px solid rgba(255, 255, 255, 0.192)',\r\n    marginTop: '20px',\r\n  },\r\n}));\r\n","import React, { useState, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n//Helper\r\nimport languages from './letterFrequency';\r\nimport { chiSquaredCalculation } from './chi-logic';\r\n\r\n//Assets\r\nimport { ChiSquaredStyles } from './ChiSquaredStyles';\r\n\r\n//Components\r\nimport AnalysisMethodsExplanationTooltip from '../../Tooltips/AnalysisMethodsExplanationTooltip';\r\nimport RemoveAnalysisMethodButton from '../RemoveAnalysisMethodButton';\r\n\r\nfunction ChiSquared(props) {\r\n  const [expandedStatus, changeExpandedStatus] = useState(false);\r\n  const [language, setLanguage] = useState('English');\r\n  const classes = ChiSquaredStyles();\r\n  /**\r\n   * Use the right data from the belonging block\r\n   */\r\n  const input = props.menue === 'input' ? props.input : props.output;\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      square={true}\r\n      onChange={() => changeExpandedStatus(!expandedStatus)}\r\n    >\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls='panel2a-content'\r\n        id='panel2a-header'\r\n      >\r\n        <Typography className={classes.heading}>Chi Squared χ2</Typography>\r\n        <AnalysisMethodsExplanationTooltip\r\n          method={'chi-squared'}\r\n          menue={props.menue}\r\n        />\r\n        <RemoveAnalysisMethodButton\r\n          menue={props.menue}\r\n          method={'chi-squared'}\r\n        />\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails className={classes.body}>\r\n        {expandedStatus ? (\r\n          <Fragment>\r\n            <label htmlFor='chi_lang_select' className={classes.label}>\r\n              Language to compare to:\r\n            </label>\r\n            <select\r\n              className={classes.select}\r\n              onClick={(evt) => setLanguage(evt.target.value)}\r\n            >\r\n              {Object.keys(languages).map((language) => {\r\n                return (\r\n                  <option key={language} className={classes.option}>\r\n                    {language}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <div className={classes.result}>\r\n              χ2 = {chiSquaredCalculation(language, input)}\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  input: state.input,\r\n  output: state.output,\r\n});\r\n\r\nChiSquared.propTypes = {\r\n  output: PropTypes.string.isRequired,\r\n  input: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChiSquared);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Components\r\nimport FrequencyAnalysis from './freqencyAnalysis';\r\nimport IndexOfCoincidence from './indexOfCoincidence';\r\nimport ChiSquared from './chi-squared';\r\n\r\nconst AnalysisMethods = (props) => {\r\n  /**\r\n   * ic_output: index-of-coincidence visible in output block?\r\n   * ic_input: index-of-coincidence visible in input block?\r\n   */\r\n  const indexOfCoincidenceMenue =\r\n    props.menue === 'output' && props.ic_output ? (\r\n      <div className='analysis__dropdown'>\r\n        <IndexOfCoincidence menue={props.menue} />\r\n      </div>\r\n    ) : props.menue === 'input' && props.ic_input ? (\r\n      <div className='analysis__dropdown'>\r\n        <IndexOfCoincidence menue={props.menue} />\r\n      </div>\r\n    ) : null;\r\n\r\n  /**\r\n   * fq_output: frequency-analysis visible in output block?\r\n   * fq_input: frequency-analysis visible in input block?\r\n   */\r\n  const frequencyAnalysisMenue =\r\n    props.menue === 'output' && props.fq_output ? (\r\n      <div className='analysis__dropdown'>\r\n        <FrequencyAnalysis menue={props.menue} inputValue={props.output} />\r\n      </div>\r\n    ) : props.menue === 'input' && props.fq_input ? (\r\n      <div className='analysis__dropdown'>\r\n        <FrequencyAnalysis menue={props.menue} inputValue={props.input} />\r\n      </div>\r\n    ) : null;\r\n\r\n  /**\r\n   * chi_output: chi-squared-analysis visible in output block?\r\n   * chi_input: chi-squared-analysis visible in input block?\r\n   */\r\n  const chiSquaredMenue =\r\n    props.menue === 'output' && props.chi_output ? (\r\n      <div className='analysis__dropdown'>\r\n        <ChiSquared menue={props.menue} />\r\n      </div>\r\n    ) : props.menue === 'input' && props.chi_input ? (\r\n      <div className='analysis__dropdown'>\r\n        <ChiSquared menue={props.menue} />\r\n      </div>\r\n    ) : null;\r\n\r\n  return (\r\n    <div className='analysis'>\r\n      {frequencyAnalysisMenue}\r\n      {indexOfCoincidenceMenue}\r\n      {chiSquaredMenue}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ic_input: state.analysisMethod.ic_input,\r\n  ic_output: state.analysisMethod.ic_output,\r\n  fq_input: state.analysisMethod.fq_input,\r\n  fq_output: state.analysisMethod.fq_output,\r\n  chi_input: state.analysisMethod.chi_input,\r\n  chi_output: state.analysisMethod.chi_output,\r\n});\r\n\r\nAnalysisMethods.propTypes = {\r\n  ic_input: PropTypes.bool.isRequired,\r\n  ic_output: PropTypes.bool.isRequired,\r\n  fq_input: PropTypes.bool.isRequired,\r\n  fq_output: PropTypes.bool.isRequired,\r\n  chi_input: PropTypes.bool.isRequired,\r\n  chi_output: PropTypes.bool.isRequired,\r\n  menue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(AnalysisMethods);\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Helper\r\nimport math from '../helper/Math';\r\n\r\n//Actions\r\nimport { updateInput } from '../../../actions/updateInput';\r\n\r\n//Components\r\nimport MenueButtons from './MenueButtons';\r\nimport AnalysisMethods from './analysis_methods_dropdowns';\r\n\r\nconst Input = ({ updateInput, input }) => {\r\n  /**\r\n   * Ref for the input field\r\n   */\r\n  const textareaRef = useRef();\r\n\r\n  /**\r\n   * Initial input-field resize.\r\n   */\r\n  useEffect(() => {\r\n    math.autoresize(textareaRef.current);\r\n  });\r\n\r\n  /**\r\n   * If the value on click is still 'The quick...' then\r\n   * just delete the input for ease of use. Else remove\r\n   * all types of linebreaks.\r\n   */\r\n  const update = (evt) => {\r\n    if (evt.target.value === 'The quick brown fox jumps over the lazy dog.') {\r\n      updateInput('');\r\n    } else {\r\n      updateInput(evt.target.value.replace(/(\\r\\n|\\n|\\r)/gm, ''));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='block'>\r\n      <div className='block__head'>\r\n        <div className='block__title'>Input</div>\r\n        <MenueButtons />\r\n      </div>\r\n      <div className='block__input-wrapper'>\r\n        <textarea\r\n          ref={textareaRef}\r\n          name='userinput'\r\n          className='block__input'\r\n          value={input}\r\n          onClick={(evt) => {\r\n            update(evt);\r\n            math.autoresize(evt);\r\n          }}\r\n          onChange={(evt) => {\r\n            update(evt);\r\n            math.autoresize(evt);\r\n          }}\r\n        />\r\n      </div>\r\n      <AnalysisMethods menue={'input'} input={input} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  input: state.input,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  updateInput: updateInput,\r\n};\r\n\r\nInput.propTypes = {\r\n  updateInput: PropTypes.func.isRequired,\r\n  input: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Input);\r\n","import React, { useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n//Helper\r\nimport math from '../helper/Math';\r\n\r\n//Components\r\nimport MenueButtons from './MenueButtons';\r\nimport AnalysisMethods from './analysis_methods_dropdowns';\r\n\r\nconst Output = ({ output }) => {\r\n  /**\r\n   * Ref for the output-field.\r\n   */\r\n  const textareaRef = useRef();\r\n\r\n  /**\r\n   * Initial output-field resize.\r\n   */\r\n  useEffect(() => {\r\n    math.autoresize(textareaRef.current);\r\n  });\r\n\r\n  return (\r\n    <div className='block'>\r\n      <div className='block__head'>\r\n        <div className='block__title'>Output</div>\r\n        <MenueButtons />\r\n      </div>\r\n      <div className='block__output-wrapper'>\r\n        <textarea\r\n          ref={textareaRef}\r\n          className='block__output'\r\n          name='output'\r\n          value={output ? output : ''}\r\n          onChange={(evt) => {\r\n            math.autoresize(evt);\r\n          }}\r\n        ></textarea>\r\n      </div>\r\n      <AnalysisMethods menue={'output'} output={output} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  output: state.output,\r\n});\r\n\r\nOutput.propTypes = {\r\n  output: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Output);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BlockConnector = ({ sign }) => (\r\n  <div className='block-connector'>{sign}</div>\r\n);\r\n\r\nBlockConnector.propTypes = {\r\n  sign: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BlockConnector;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"polygon\", {\n  points: \"0,96.879 193.129,289.379 386.257,96.879 \"\n});\n\nvar SvgCaret = function SvgCaret(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"caret\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 386.257 386.257\",\n    style: {\n      enableBackground: \"new 0 0 386.257 386.257\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgCaret, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/caret.2961acbb.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n//Assets\r\nimport { ReactComponent as Caret } from './img/caret.svg';\r\n\r\nimport { EncryptionMethodsDetails } from './EncryptionMethodsDetails';\r\n\r\n//Actions\r\nimport { toggleModal } from '../../../actions/toggleModal';\r\nimport { toggleDirection } from '../../../actions/toggleDirection';\r\n\r\nconst Head = (props) => {\r\n  return (\r\n    <div className='block-settings__head'>\r\n      <button\r\n        className='block-settings__head-caret'\r\n        onClick={() => props.onModalToggle()}\r\n      >\r\n        {EncryptionMethodsDetails[props.method].display}\r\n        <Caret className='caret' />\r\n      </button>\r\n      <div className='block-settings__head-options'>\r\n        <button\r\n          value='encrypt'\r\n          onClick={(evt) => {\r\n            props.toggleDirection(evt.target.value);\r\n          }}\r\n          className={`block-settings__head-option ${\r\n            props.direction === 'encrypt' &&\r\n            'block-settings__head-option--selected'\r\n          }`}\r\n        >\r\n          Encrypt\r\n        </button>\r\n        <button\r\n          value='decrypt'\r\n          onClick={(evt) => {\r\n            props.toggleDirection(evt.target.value);\r\n          }}\r\n          className={`block-settings__head-option ${\r\n            props.direction === 'decrypt' &&\r\n            'block-settings__head-option--selected'\r\n          }`}\r\n        >\r\n          Decrypt\r\n        </button>\r\n        {EncryptionMethodsDetails[props.method].crack ? (\r\n          <button\r\n            value='crack'\r\n            onClick={(evt) => {\r\n              props.toggleDirection(evt.target.value);\r\n            }}\r\n            className={`block-settings__head-option ${\r\n              props.direction === 'crack' &&\r\n              'block-settings__head-option--selected'\r\n            }`}\r\n          >\r\n            Crack\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modalOpen: state.modal,\r\n  direction: state.direction,\r\n  method: state.method,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  onModalToggle: toggleModal,\r\n  toggleDirection: toggleDirection,\r\n};\r\n\r\nHead.propTypes = {\r\n  modalOpen: PropTypes.bool.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n  method: PropTypes.string.isRequired,\r\n  onModalToggle: PropTypes.func.isRequired,\r\n  toggleDirection: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(React.memo(Head));\r\n","import { SET_ALPHABET_ACTIVE, UPDATE_ALPHABET } from './constants';\r\n\r\nexport const setAlphabetActive = (active) => ({\r\n  type: SET_ALPHABET_ACTIVE,\r\n  active,\r\n});\r\n\r\nexport const updateAlphabet = (new_alphabet) => ({\r\n  type: UPDATE_ALPHABET,\r\n  new_alphabet,\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport { updateAlphabet } from '../../../actions/alphabet';\r\n\r\nconst Alphabet = ({ alphabet, alphabetActive, updateAlphabet }) => {\r\n  return (\r\n    <div className='contentbox'>\r\n      <div className='content-element'>\r\n        <div className='content-element__settings-name'>Alphabet</div>\r\n        <div className='content-element__settings-operators'>\r\n          <textarea\r\n            className={`content-element__textarea ${\r\n              alphabetActive\r\n                ? 'content-element__textarea--active'\r\n                : 'content-element__textarea--deactivated'\r\n            }`}\r\n            value={alphabet}\r\n            readOnly={!alphabetActive}\r\n            onChange={(evt) => {\r\n              updateAlphabet(evt.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alphabet: state.alphabet.alphabet,\r\n  alphabetActive: state.alphabet.active,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  updateAlphabet: updateAlphabet,\r\n};\r\n\r\nAlphabet.propTypes = {\r\n  alphabet: PropTypes.string.isRequired,\r\n  alphabetActive: PropTypes.bool.isRequired,\r\n  updateAlphabet: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Alphabet);\r\n","import { TOGGLE_FOREIGN_CHARS } from './constants';\r\n\r\nconst toggleForeignChars = (chars) => ({\r\n  type: TOGGLE_FOREIGN_CHARS,\r\n  chars,\r\n});\r\n\r\nexport default toggleForeignChars;\r\n","import { TOGGLE_CASEFORMAT } from './constants';\r\n\r\nconst toggleCaseFormat = (caseformat) => ({\r\n  type: TOGGLE_CASEFORMAT,\r\n  caseformat,\r\n});\r\n\r\nexport default toggleCaseFormat;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport toggleForeignChars from '../../../actions/toggleForeignChars';\r\nimport toggleCase from '../../../actions/toggleCase';\r\n\r\n//Assets\r\nimport './case-chars.scss';\r\n\r\nconst ForeignChars = (props) => {\r\n  return (\r\n    <div className='contentbox contentbox--double'>\r\n      <div className='content-element content-element--double'>\r\n        <div className='content-element__settings-name content-element__settings-name--double'>\r\n          CASE\r\n        </div>\r\n        <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n          <select\r\n            defaultValue={props.caseformat}\r\n            onChange={(evt) => {\r\n              props.toggleCase(evt.target.value);\r\n            }}\r\n            className='content-element__select content-element__select--font-s'\r\n          >\r\n            <option value='maintain'>Maintain Case</option>\r\n            <option value='ignore'>Ignore Case</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className='content-element content-element--double'>\r\n        <div className='content-element__settings-name content-element__settings-name--double'>\r\n          FOREIGN CHARS\r\n        </div>\r\n        <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n          <button\r\n            className={\r\n              props.foreignChars === 'include'\r\n                ? 'foreign-chars foreign-chars--active'\r\n                : 'foreign-chars'\r\n            }\r\n            onClick={(evt) => {\r\n              props.toggleForeignChars(evt.target.value);\r\n            }}\r\n            value='include'\r\n          >\r\n            Include\r\n          </button>\r\n          <button\r\n            className={\r\n              props.foreignChars === 'include'\r\n                ? 'foreign-chars'\r\n                : 'foreign-chars foreign-chars--active'\r\n            }\r\n            onClick={(evt) => {\r\n              props.toggleForeignChars(evt.target.value);\r\n            }}\r\n            value='ignore'\r\n          >\r\n            Ignore\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  foreignChars: state.foreignChars,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  toggleForeignChars: toggleForeignChars,\r\n  toggleCase: toggleCase,\r\n};\r\n\r\nForeignChars.propTypes = {\r\n  foreignChars: PropTypes.string.isRequired,\r\n  toggleForeignChars: PropTypes.func.isRequired,\r\n  toggleCase: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ForeignChars);\r\n","import { SET_CSHIFT } from './constants';\r\n\r\nexport const setCshift = (cShift) => ({\r\n  type: SET_CSHIFT,\r\n  cShift,\r\n});\r\n","import React from 'react';\r\nimport { setCshift } from '../../../actions/setCShift';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CaesarShift = (props) => {\r\n  /**\r\n   * Finds the shift value according to\r\n   * the plus/minus button and sends the\r\n   * value to redux.\r\n   */\r\n  const calcShift = (evt) => {\r\n    let method = evt.target.dataset.val;\r\n    if (method === '-') {\r\n      if (props.cShift < 1) {\r\n        props.setCshift(25);\r\n      } else {\r\n        props.setCshift(props.cShift - 1);\r\n      }\r\n    } else if (method === '+') {\r\n      if (props.cShift > 24) {\r\n        props.setCshift(0);\r\n      } else {\r\n        props.setCshift(props.cShift + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='contentbox'>\r\n      <div className='content-element'>\r\n        <div className='content-element__settings-name'>SHIFT</div>\r\n        <div className='content-element__settings-operators'>\r\n          <div\r\n            data-val='-'\r\n            className='content-element__adjust-plus-minus'\r\n            onClick={(evt) => {\r\n              calcShift(evt);\r\n            }}\r\n          >\r\n            -\r\n          </div>\r\n          <div className='content-element__adjust-plus-minus'>\r\n            {props.cShift}\r\n          </div>\r\n          <div\r\n            data-val='+'\r\n            className='content-element__adjust-plus-minus'\r\n            onClick={(evt) => calcShift(evt)}\r\n          >\r\n            +\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cShift: state.cShift,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setCshift: setCshift,\r\n};\r\n\r\nCaesarShift.propTypes = {\r\n  cShift: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default React.memo(\r\n  connect(mapStateToProps, mapActionsToProps)(CaesarShift)\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CaesarTransposition extends React.PureComponent {\r\n  /**\r\n   * Generates html structure for one row of the alphabet transposition.\r\n   * The letter \"A\" is market in white. The othere characters are slightly\r\n   * less visible. Also generates the belonging down-arrow.\r\n   */\r\n  genAlphabet = () => {\r\n    if (this.props.alphabet.length === 0) return;\r\n    let alphabet = this.props.alphabet.toLowerCase().split('').sort();\r\n    alphabet = [...new Set(alphabet)];\r\n    let output = [];\r\n    for (let element of alphabet) {\r\n      output.push(\r\n        <div\r\n          className={\r\n            element.toLowerCase() === 'a'\r\n              ? 'alphabet-row__character alphabet-row__character--white'\r\n              : 'alphabet-row__character'\r\n          }\r\n          key={uuidv4()}\r\n        >\r\n          <div>{element}</div>\r\n          <div className={element.toLowerCase() === 'a' ? '' : 'arrow'}>↓</div>\r\n        </div>\r\n      );\r\n    }\r\n    return output;\r\n  };\r\n\r\n  /**\r\n   * Generates the lower half of the alphabet + arrow.\r\n   */\r\n  genShifted = (shift) => {\r\n    if (this.props.alphabet.length === 0) return;\r\n    let alphabet = this.props.alphabet.toLowerCase().split('').sort();\r\n    alphabet = [...new Set(alphabet)];\r\n    for (let i = 0; i < shift; i++) {\r\n      let temp = alphabet.shift();\r\n      alphabet.push(temp);\r\n    }\r\n    let output = [];\r\n    for (let i = 0; i < alphabet.length; i++) {\r\n      output.push(\r\n        <div\r\n          className={\r\n            alphabet[i].toLowerCase() === 'a'\r\n              ? 'alphabet-row__character alphabet-row__character--white'\r\n              : 'alphabet-row__character'\r\n          }\r\n          key={uuidv4()}\r\n        >\r\n          <div className={alphabet[i].toLowerCase() === 'a' ? '' : 'arrow'}>\r\n            ↑\r\n          </div>\r\n          <div>{alphabet[i]}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return output;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='contentbox'>\r\n        <div className='content-element'>\r\n          <div className='content-element__settings-name'>\r\n            Caesar Cipher Transposition\r\n          </div>\r\n          <div className='content-element__content content-element__content--alphabet-transposition'>\r\n            <div className='alphabet-row'>\r\n              <div className='alphabet-row__standard'>{this.genAlphabet()}</div>\r\n              <div className='alphabet-row__transpositioned'>\r\n                {this.genShifted(this.props.cShift)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p className='content-element__feature_text'>\r\n            Visualization of the character mapping on <b>shift</b> changes.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cShift: state.cShift,\r\n});\r\n\r\nCaesarTransposition.propTypes = {\r\n  cShift: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(CaesarTransposition);\r\n","import { SET_AFFINE_ALPHA, SET_AFFINE_BETA } from './constants';\r\n\r\nexport const setAffineAlpha = (affine_alpha) => ({\r\n  type: SET_AFFINE_ALPHA,\r\n  affine_alpha,\r\n});\r\n\r\nexport const setAffineBeta = (affine_beta) => ({\r\n  type: SET_AFFINE_BETA,\r\n  affine_beta,\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport { setAffineAlpha, setAffineBeta } from '../../../actions/affine';\r\n\r\nconst AlphaBetaSelectors = (props) => {\r\n  /**\r\n   * Option generator for <select> beta\r\n   */\r\n  const optionsBeta = () => {\r\n    const optionsArray = [];\r\n    for (let i = 1; i <= 25; i++) {\r\n      optionsArray.push(\r\n        <option value={i} key={`affine-beta${i}`}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    return optionsArray;\r\n  };\r\n\r\n  /**\r\n   * Option generator for <select> alpha\r\n   */\r\n  const optionsAlpha = () => {\r\n    let valuesAlpha = [1, 3, 5, 7, 9, 11, 15, 17, 19, 21, 23, 25];\r\n    valuesAlpha = valuesAlpha.map((value) => {\r\n      return (\r\n        <option value={value} key={`affine-alpha${value}`}>\r\n          {value}\r\n        </option>\r\n      );\r\n    });\r\n    return valuesAlpha;\r\n  };\r\n\r\n  return (\r\n    <div className='contentbox contentbox--double'>\r\n      <div className='content-element content-element--double'>\r\n        <div className='content-element__settings-name content-element__settings-name--no-transform content-element__settings-name--double'>\r\n          α\r\n        </div>\r\n        <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n          <select\r\n            value={props.affine_alpha}\r\n            className='content-element__select content-element__select--sm'\r\n            onChange={(evt) => {\r\n              props.setAffineAlpha(evt.target.value);\r\n            }}\r\n          >\r\n            {optionsAlpha()}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className='content-element content-element--double'>\r\n        <div className='content-element__settings-name content-element__settings-name--no-transform content-element__settings-name--double'>\r\n          β\r\n        </div>\r\n        <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n          <select\r\n            value={props.affine_beta}\r\n            className='content-element__select'\r\n            onChange={(evt) => {\r\n              props.setAffineBeta(evt.target.value);\r\n            }}\r\n          >\r\n            {optionsBeta()}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  affine_alpha: state.affine.affine_alpha,\r\n  affine_beta: state.affine.affine_beta,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setAffineAlpha: setAffineAlpha,\r\n  setAffineBeta: setAffineBeta,\r\n};\r\n\r\nAlphaBetaSelectors.propTypes = {\r\n  affine_alpha: PropTypes.number.isRequired,\r\n  affine_beta: PropTypes.number.isRequired,\r\n  setAffineAlpha: PropTypes.func.isRequired,\r\n  setAffineBeta: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(AlphaBetaSelectors);\r\n","import { SET_KEYWORD_VIGENERE } from './constants';\r\n\r\nconst setKeywordVigenere = (keywordVigenere) => ({\r\n  type: SET_KEYWORD_VIGENERE,\r\n  keywordVigenere,\r\n});\r\n\r\nexport default setKeywordVigenere;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport setKeywordVigenere from '../../../actions/setKeywordVigenere';\r\n\r\nconst KeywordVigenere = ({ keywordVigenere, setKeywordVigenere }) => {\r\n  return (\r\n    <div className='contentbox'>\r\n      <div className='content-element'>\r\n        <div className='content-element__settings-name'>Keyword</div>\r\n        <div className='content-element__settings-operators'>\r\n          <textarea\r\n            className='content-element__textarea'\r\n            defaultValue={keywordVigenere}\r\n            onChange={(evt) => {\r\n              setKeywordVigenere(evt.target.value.toLowerCase());\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  keywordVigenere: state.keywordVigenere,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setKeywordVigenere: setKeywordVigenere,\r\n};\r\n\r\nKeywordVigenere.propTypes = {\r\n  keywordVigenere: PropTypes.string.isRequired,\r\n  setKeywordVigenere: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(KeywordVigenere);\r\n","import { SET_KEYWORD_PLAYFAIR, PLAYSQUARE } from './constants';\r\n\r\nexport const setKeywordPlayfair = (keywordPlayfair) => ({\r\n  type: SET_KEYWORD_PLAYFAIR,\r\n  keywordPlayfair,\r\n});\r\n\r\nexport const setPlaysquare = (playsquare) => ({\r\n  type: PLAYSQUARE,\r\n  playsquare,\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport { setKeywordPlayfair } from '../../../actions/playfair';\r\n\r\nconst KeywordPlayfair = ({ keywordPlayfair, setKeywordPlayfair }) => {\r\n  return (\r\n    <div className='contentbox'>\r\n      <div className='content-element'>\r\n        <div className='content-element__settings-name'>Keyword</div>\r\n        <div className='content-element__settings-operators'>\r\n          <textarea\r\n            defaultValue={keywordPlayfair}\r\n            onChange={(evt) => {\r\n              setKeywordPlayfair(evt.target.value.toLowerCase());\r\n            }}\r\n            className='content-element__textarea'\r\n          />\r\n        </div>\r\n        <div id='matrix'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  keywordPlayfair: state.playfair.keywordPlayfair,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setKeywordPlayfair: setKeywordPlayfair,\r\n};\r\n\r\nKeywordPlayfair.propTypes = {\r\n  keywordPlayfair: PropTypes.string.isRequired,\r\n  setKeywordPlayfair: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(KeywordPlayfair);\r\n","import React from 'react';\r\n\r\nconst CharOptions = () => {\r\n  return (\r\n    <div className='contentbox contentbox--double'>\r\n      <div className='content-element content-element--double'>\r\n        <div className='content-element__settings-name content-element__settings-name--double'>\r\n          Letter to leave out\r\n        </div>\r\n        <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n          <div className='content-element__settings-operator'>J</div>\r\n        </div>\r\n      </div>\r\n      <div className='content-element content-element--double'>\r\n        <div className='content-element__settings-name content-element__settings-name--double'>\r\n          Substitution letter\r\n        </div>\r\n        <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n          <div className='content-element__settings-operator'>X</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharOptions;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Assets\r\nimport './playfair-square.scss';\r\n\r\nclass PlayfaireSquare extends React.PureComponent {\r\n  createVisualMatrix = () => {\r\n    let parent = [];\r\n    let children = [];\r\n    for (let i = 0; i < 25; i++) {\r\n      let ID = 'table' + i;\r\n      children.push(\r\n        <div key={uuidv4()} id={ID} className='playfair-square__element'>\r\n          {this.props.playsquare[i]}\r\n        </div>\r\n      );\r\n    }\r\n    parent.push(\r\n      <div className='playfair-square' key={uuidv4()}>\r\n        {children}\r\n      </div>\r\n    );\r\n    return parent;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='contentbox'>\r\n        <div className='content-element'>\r\n          <div className='content-element__settings-name'>PLAYFAIR SQUARE</div>\r\n          <div className='content-element__settings-operators'>\r\n            {this.createVisualMatrix()}\r\n          </div>\r\n          <p className='content-element__feature_text'>\r\n            This method is a bit shaky encrypting forth and back. One letter is\r\n            left out and substituted with another letter - either not use this\r\n            letter or at least be aware that there might be inconsistencies. A\r\n            substitution letter will be added if two of the same letters occure\r\n            directly after each other (if the first letter is on an even index).\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  playsquare: state.playfair.playsquare,\r\n});\r\n\r\nPlayfaireSquare.propTypes = {\r\n  playsquare: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(PlayfaireSquare);\r\n","import { SET_TO_REPLACE_LETTER, SET_REPLACE_LETTER } from './constants';\r\n\r\nexport const toReplaceLetter = (toReplaceLetter) => ({\r\n  type: SET_TO_REPLACE_LETTER,\r\n  payload: {\r\n    toReplaceLetter,\r\n  },\r\n});\r\n\r\nexport const replaceLetter = (replaceLetter) => ({\r\n  type: SET_REPLACE_LETTER,\r\n  payload: {\r\n    replaceLetter,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport { toReplaceLetter, replaceLetter } from '../../../actions/replace';\r\n\r\nconst Replace = (props) => {\r\n  return (\r\n    <div className='contentbox contentbox--double'>\r\n      <div className='content-element content-element--double'>\r\n        <div className='content-element__settings-name content-element__settings-name--double'>\r\n          REPLACE\r\n        </div>\r\n        <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n          <textarea\r\n            defaultValue={props.toReplaceLetter}\r\n            onChange={(evt) => {\r\n              props.onSetToReplaceLetter(evt.target.value);\r\n            }}\r\n            className='content-element__textarea content-element__textarea--double'\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='content-element content-element--double'>\r\n        <div className='content-element__settings-name content-element__settings-name--double'>\r\n          REPLACE WITH\r\n        </div>\r\n        <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n          <textarea\r\n            defaultValue={props.replaceLetter}\r\n            onChange={(evt) => {\r\n              props.onSetReplaceLetter(evt.target.value);\r\n            }}\r\n            className='content-element__textarea content-element__textarea--double'\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  toReplaceLetter: state.replace.toReplaceLetter,\r\n  replaceLetter: state.replace.replaceLetter,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  onSetReplaceLetter: replaceLetter,\r\n  onSetToReplaceLetter: toReplaceLetter,\r\n};\r\n\r\nReplace.propTypes = {\r\n  toReplaceLetter: PropTypes.string.isRequired,\r\n  replaceLetter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Replace);\r\n","import { SET_SKYTALE_LENGTH, SET_RINGLENGTH } from './constants';\r\n\r\nexport const setSkytaleLength = (length) => ({\r\n  type: SET_SKYTALE_LENGTH,\r\n  length,\r\n});\r\n\r\nexport const setRinglength = (ringLength) => ({\r\n  type: SET_RINGLENGTH,\r\n  ringLength,\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setRinglength } from '../../../actions/skytale';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RingLength = (props) => {\r\n  /**\r\n   * Calculate and set ring-length\r\n   */\r\n  const handleRingLengthChange = (evt) => {\r\n    let value = evt.target.dataset.value;\r\n    if (value === '-') {\r\n      if (props.ringLength < 4) {\r\n        props.setRinglength(20);\r\n      } else {\r\n        props.setRinglength(props.ringLength - 1);\r\n      }\r\n    } else {\r\n      if (props.ringLength > 19) {\r\n        props.setRinglength(3);\r\n      } else {\r\n        props.setRinglength(props.ringLength + 1);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className='contentbox'>\r\n      <div className='content-element'>\r\n        <div className='content-element__settings-name'>RING SEGMENTS</div>\r\n        <div className='content-element__settings-operators'>\r\n          <div\r\n            data-value='-'\r\n            className='content-element__adjust-plus-minus'\r\n            onClick={(evt) => {\r\n              handleRingLengthChange(evt);\r\n            }}\r\n          >\r\n            -\r\n          </div>\r\n          <div className='content-element__adjust-plus-minus'>\r\n            {props.ringLength}\r\n          </div>\r\n          <div\r\n            data-value='+'\r\n            className='content-element__adjust-plus-minus'\r\n            onClick={(evt) => {\r\n              handleRingLengthChange(evt);\r\n            }}\r\n          >\r\n            +\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ringLength: state.skytale.ringLength,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setRinglength: setRinglength,\r\n};\r\n\r\nRingLength.propTypes = {\r\n  ringLength: PropTypes.number.isRequired,\r\n  setRinglength: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(RingLength);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropsTypes from 'prop-types';\r\n\r\n//Assets\r\nimport './rings.scss';\r\n\r\nconst skewValue = {\r\n  3: 16,\r\n  4: 12,\r\n  5: 10,\r\n  6: 8,\r\n  7: 7,\r\n  8: 6.5,\r\n  9: 6,\r\n  10: 5,\r\n  11: 5,\r\n  12: 4,\r\n  13: 3.5,\r\n  14: 3,\r\n  15: 3,\r\n  16: 3,\r\n  17: 3,\r\n  18: 3,\r\n  19: 3,\r\n  20: 3,\r\n};\r\n\r\nclass Rings extends React.PureComponent {\r\n  /**\r\n   * Generates the style of a plane.\r\n   * Makes the first plane red so it is visible\r\n   * as the first letter of the input phrase.\r\n   * If an element has no character it is made\r\n   * transparent.\r\n   */\r\n\r\n  generatePlaneStyle(planeNumber, character, ringNumber) {\r\n    let firstCharacterStyle = '';\r\n    if (planeNumber === 0 && ringNumber === 0) {\r\n      firstCharacterStyle = '#ff586e';\r\n    }\r\n\r\n    // No value ? no background\r\n    let transparencyValue = !character ? 'transparent' : '';\r\n\r\n    /**\r\n     * Calculates the arc radius with one piece width = 30px\r\n     * Could scale but didn't make sense yet\r\n     */\r\n    let d = 30 / Math.PI / (360 / this.props.ringLength / 360) / 2 - 6;\r\n\r\n    //rotateValue according to the piece of plane\r\n    let rotateValue =\r\n      360 / this.props.ringLength +\r\n      (planeNumber * 360) / this.props.ringLength -\r\n      360 / this.props.ringLength;\r\n\r\n    let heightChange = (25 / this.props.ringLength) * planeNumber;\r\n    let ringStyles = {\r\n      WebkitTransform: `rotateY(${rotateValue}deg) translateZ(${d}px) translateY(${heightChange}px) skewY(${\r\n        skewValue[this.props.ringLength]\r\n      }deg)`,\r\n      backgroundColor:\r\n        firstCharacterStyle !== '' ? firstCharacterStyle : transparencyValue,\r\n    };\r\n    this.planeNum++;\r\n    return ringStyles;\r\n  }\r\n\r\n  /**\r\n   * Responsible for one plane\r\n   */\r\n  generateOneRingElement(indexOfCharacter, character, ringNumber) {\r\n    let div = (\r\n      <div\r\n        key={uuidv4()}\r\n        className='ring-container__plane'\r\n        style={this.generatePlaneStyle(indexOfCharacter, character, ringNumber)}\r\n      >\r\n        {character}\r\n      </div>\r\n    );\r\n    return div;\r\n  }\r\n\r\n  /**\r\n   * Generates all planes for one ring\r\n   */\r\n  generateAllRingElements(ringNumber) {\r\n    let parent = [];\r\n    for (let i = 0; i < this.props.ringLength; i++) {\r\n      // Loops throug the encrypted input and puts the generated ring element into the parent\r\n      // The ring number accounts for the input[i] value used so every ring has the right letters\r\n      let input = this.props.input.split(' ').join('');\r\n      parent.push(\r\n        this.generateOneRingElement(\r\n          i,\r\n          input[i + ringNumber * this.props.ringLength],\r\n          ringNumber\r\n        )\r\n      );\r\n    }\r\n    return parent;\r\n  }\r\n\r\n  /**\r\n   * Main function generate the cylinder\r\n   */\r\n  generateAllRings() {\r\n    let parent = [];\r\n    for (let i = 0; i < this.props.skytaleLength; i++) {\r\n      let ringNumber = i;\r\n      parent.push(\r\n        <div key={i + 'ring'} className='ring-container__ring'>\r\n          {this.generateAllRingElements(ringNumber)}\r\n        </div>\r\n      );\r\n    }\r\n    return parent;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='contentbox'>\r\n        <div className='content-element'>\r\n          <div className='content-element__settings-name'>SKYTALE</div>\r\n          <div className='content-element__settings-operators content-element__settings-operators--vertical-center-flex'>\r\n            <div className='ring-container'>\r\n              <div\r\n                className='ring-container__turntable'\r\n                style={{ height: `${this.props.skytaleLength * 25}px` }}\r\n              >\r\n                {this.generateAllRings()}\r\n              </div>\r\n            </div>\r\n            <p className='content-element__feature_text'>\r\n              You can only see a readable alignment of letters (top to bottom,\r\n              left to right) if you are <b>encrypting a cleartext</b> or{' '}\r\n              <b>decrypting an encrypted text</b>. The ring-segment-count needs\r\n              to stay exactly the same for both directions. The first letter of\r\n              your message is marked in&nbsp;\r\n              <span className='content-element__feature_text--red'>red</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ringLength: state.skytale.ringLength,\r\n  skytaleLength: state.skytale.length,\r\n  input: state.input,\r\n});\r\n\r\nRings.propTypes = {\r\n  ringLength: PropsTypes.number.isRequired,\r\n  skytaleLength: PropsTypes.number.isRequired,\r\n  input: PropsTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Rings);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AtbashTransposition extends React.Component {\r\n  /**\r\n   * Generates both the reversed and the normal alphabet for visualization\r\n   */\r\n  genAlphabet = (reverse) => {\r\n    let style = { color: 'white' };\r\n\r\n    let alphabet = this.props.alphabet.toLowerCase().split('').sort();\r\n\r\n    alphabet = reverse\r\n      ? [...new Set(alphabet)].reverse()\r\n      : [...new Set(alphabet)];\r\n\r\n    let output = [];\r\n\r\n    for (let element of alphabet) {\r\n      let colorArrow =\r\n        element.toLowerCase() === 'a' || element.toLowerCase() === 'z'\r\n          ? 'white'\r\n          : 'rgba(255, 255, 255, 0.5)';\r\n\r\n      output.push(\r\n        <div\r\n          className='alphabet-row__character'\r\n          key={uuidv4()}\r\n          style={\r\n            element.toLowerCase() === 'a' || element.toLowerCase() === 'z'\r\n              ? style\r\n              : { color: 'rgba(255, 255, 255, 0.5' }\r\n          }\r\n        >\r\n          <div className={reverse ? 'arrow' : ''} style={{ color: colorArrow }}>\r\n            {reverse ? '↑' : element}\r\n          </div>\r\n          <div className={reverse ? '' : 'arrow'} style={{ color: colorArrow }}>\r\n            {reverse ? element : '↓'}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return output;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='contentbox'>\r\n        <div className='content-element'>\r\n          <div className='content-element__settings-name'>\r\n            Atbash Cipher Transposition\r\n          </div>\r\n          <div className='content-element__content content-element__content--alphabet-transposition'>\r\n            <div className='alphabet-row'>\r\n              <div className='alphabet-row__standard'>\r\n                {this.genAlphabet(false)}\r\n              </div>\r\n              <div className='alphabet-row__transpositioned'>\r\n                {this.genAlphabet(true)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p className='content-element__feature_text'>\r\n          Visualization of the mirror-like character mapping of the atbash\r\n          cipher. The cipher is very easy to break as the letter mapping always\r\n          stays the same. The encryption- decryption- and cracking algorithm are\r\n          exactly the same. Have a look at the frequency analysis graphs on both\r\n          sides to see the mirror effect.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAtbashTransposition.propTypes = {\r\n  alphabet: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect()(AtbashTransposition);\r\n","import { SET_OTP_KEY } from './constants';\r\n\r\nconst setOtpKey = (otpKey) => ({\r\n  type: SET_OTP_KEY,\r\n  otpKey,\r\n});\r\n\r\nexport default setOtpKey;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport setOtpKey from '../../../actions/setOtpKey';\r\n\r\n//Assets\r\nimport './otp.scss';\r\n\r\nclass Otp extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.genRandomKey = this.genRandomKey.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Set a key for the initial calculation.\r\n   */\r\n  componentDidMount() {\r\n    this.props.setOtpKey(this.genRandomKey());\r\n  }\r\n\r\n  /**\r\n   * Method to generate random characters fitting the input length.\r\n   * Nonalphabetic characters are not beeing encoded.\r\n   */\r\n  genRandomKey = () => {\r\n    let randomArr = [];\r\n    let letters = this.props.alphabet.split('');\r\n    let input = [];\r\n    for (let i = 0; i < this.props.input.length; i++) {\r\n      if (this.props.alphabet.indexOf(this.props.input[i] !== -1)) {\r\n        input.push(this.props.input[i]);\r\n      }\r\n    }\r\n    let inputLength = input.length;\r\n    for (let i = 0; i < inputLength; i++) {\r\n      randomArr.push(letters[Math.floor(Math.random() * 26)]);\r\n    }\r\n    return randomArr.join('');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='contentbox'>\r\n        <div className='content-element'>\r\n          <div className=' content-element__settings-name'>\r\n            GENERATE RANDOM KEY\r\n          </div>\r\n          <div className='content-element__settings-operators content-element__settings-operators--vertical-center-flex'>\r\n            <div className='content-element__single-operator'>\r\n              {this.props.otpKey}\r\n            </div>\r\n            <button\r\n              id='generate'\r\n              className='content-element__single-operator content-element__single-operator--button'\r\n              onClick={() => {\r\n                this.props.setOtpKey(this.genRandomKey());\r\n              }}\r\n            >\r\n              Generate new random key\r\n            </button>\r\n            <p className='content-element__feature_text'>\r\n              For the purpose of trying out de- and encryption with the same\r\n              key, the key will not update when your input message updates. A\r\n              real one-time-pad key updates with every new message.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  otpKey: state.otpKey,\r\n  alphabet: state.alphabet.alphabet,\r\n  input: state.input,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setOtpKey: setOtpKey,\r\n};\r\n\r\nOtp.propTypes = {\r\n  otpKey: PropTypes.string.isRequired,\r\n  alphabet: PropTypes.string.isRequired,\r\n  input: PropTypes.string.isRequired,\r\n  setOtpKey: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Otp);\r\n","import {\r\n  SET_PRIME_1,\r\n  SET_PRIME_2,\r\n  SET_RSA_D,\r\n  SET_RSA_E,\r\n  SET_RSA_N,\r\n  SET_RSA_PHI,\r\n  SET_TIME_TO_CALCULATE,\r\n} from './constants';\r\n\r\nexport const setPrime1 = (prime1) => ({\r\n  type: SET_PRIME_1,\r\n  prime1,\r\n});\r\n\r\nexport const setPrime2 = (prime2) => ({\r\n  type: SET_PRIME_2,\r\n  prime2,\r\n});\r\n\r\nexport const setRsaD = (d) => ({\r\n  type: SET_RSA_D,\r\n  d,\r\n});\r\n\r\nexport const setRsaE = (e) => ({\r\n  type: SET_RSA_E,\r\n  e,\r\n});\r\n\r\nexport const setRsaN = (n) => ({\r\n  type: SET_RSA_N,\r\n  n,\r\n});\r\n\r\nexport const setRsaPhi = (phi) => ({\r\n  type: SET_RSA_PHI,\r\n  phi,\r\n});\r\n\r\nexport const setTimeToCalculate = (timeToCalculate) => ({\r\n  type: SET_TIME_TO_CALCULATE,\r\n  timeToCalculate,\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport { setPrime1, setPrime2, setRsaE } from '../../../actions/rsa';\r\n\r\nconst Primes = (props) => {\r\n  /**\r\n   * Get rid of all non-numericals from prime input.\r\n   */\r\n  const cleanPrime = (rawInput) => {\r\n    if (rawInput.length !== 0) {\r\n      let numbers = '0123456789';\r\n      let cleanInput = [];\r\n      for (let element of rawInput) {\r\n        if (numbers.indexOf(element) !== -1) cleanInput.push(element);\r\n      }\r\n      if (cleanInput[0] === '0') return;\r\n      if (\r\n        (cleanInput.length === 1 &&\r\n          (cleanInput[0] === '1' || cleanInput[0] === '0')) ||\r\n        cleanInput.length === 0\r\n      )\r\n        return;\r\n      return cleanInput.join('');\r\n    } else return;\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className='contentbox contentbox--double'>\r\n        <div className='content-element content-element--double'>\r\n          <div className='content-element__settings-name content-element__settings-name--double'>\r\n            Prime 1\r\n          </div>\r\n          <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n            <textarea\r\n              className='content-element__textarea content-element__textarea--window-light'\r\n              type='text'\r\n              name='tentacles'\r\n              defaultValue={props.prime1}\r\n              onChange={(e) => {\r\n                let input = cleanPrime(e.target.value);\r\n                props.setPrime1(input);\r\n              }}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className='content-element content-element--double'>\r\n          <div className='content-element__settings-name content-element__settings-name--double'>\r\n            Prime 2\r\n          </div>\r\n          <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n            <textarea\r\n              className='content-element__textarea content-element__textarea--window-light'\r\n              type='text'\r\n              name='tentacles'\r\n              defaultValue={props.prime2}\r\n              onChange={(e) => {\r\n                let input = cleanPrime(e.target.value);\r\n                props.setPrime2(input);\r\n              }}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='contentbox contentbox--double'>\r\n        <div className='content-element content-element--double'>\r\n          <div className='content-element__settings-name content-element__settings-name--double'>\r\n            e = PUBLIC KEY\r\n          </div>\r\n          <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n            <textarea\r\n              className='content-element__textarea content-element__textarea--window-light'\r\n              type='text'\r\n              name='tentacles'\r\n              defaultValue={props.e}\r\n              onChange={(e) => {\r\n                props.setRsaE(e.target.value);\r\n              }}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className='content-element content-element--double'>\r\n          <div className='content-element__settings-name content-element__settings-name--double'>\r\n            n = PUBLIC KEY\r\n          </div>\r\n          <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n            <textarea\r\n              className='content-element__textarea content-element__textarea--window-light'\r\n              readOnly\r\n              value={props.n}\r\n              type='text'\r\n              name='tentacles'\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='contentbox contentbox--double'>\r\n        <div className='content-element content-element--double phi'>\r\n          <div className='content-element__settings-name content-element__settings-name--double'>\r\n            φ<i>=(Prime1 - 1)*(Prime2 - 1)</i>\r\n          </div>\r\n          <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n            <textarea\r\n              className='content-element__textarea content-element__textarea--window-light'\r\n              readOnly\r\n              value={props.phi}\r\n              type='text'\r\n              name='tentacles'\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className='content-element content-element--double'>\r\n          <div className='content-element__settings-name content-element__settings-name--double'>\r\n            d <i> = (e ^ −1) mod ϕ</i>\r\n          </div>\r\n          <div className='content-element__settings-operators content-element__settings-operators--double'>\r\n            <textarea\r\n              className='content-element__textarea content-element__textarea--window-light'\r\n              readOnly\r\n              value={props.d}\r\n              type='text'\r\n              name='tentacles'\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='contentbox'>\r\n        <div className='content-element'>\r\n          <div className='content-element__settings-name'>\r\n            Time to calculate\r\n          </div>\r\n          <div className='content-element__settings-operators content-element__settings-operators--vertical-center-flex'>\r\n            <div className='content-element__single-operator content-element__single-operator--left'>\r\n              {props.timeToCalculate}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-element__feature_text'>\r\n        <p>\r\n          To encrypt longer messages, use longer prime numbers from this\r\n          site:&nbsp;\r\n          <a\r\n            href='https://primes.utm.edu/curios/page.php?number_id=3818'\r\n            target='blank'\r\n          >\r\n            primes.utm.edu\r\n          </a>\r\n          <br></br>\r\n          (spaces are automatically beeing removed from the input when you\r\n          copy-paste). If your computer feels stuck for some seconds, that's\r\n          because it's calculating.\r\n        </p>\r\n        <p>\r\n          This site is using a <strong className='underline'>pure</strong>{' '}\r\n          version of RSA. First every character is encoded to it's\r\n          character-code equivalent. Then all character codes are joined\r\n          together into a big number and the actual encryption takes place.\r\n        </p>\r\n        <p>\r\n          For the decryption process the encrypted message is first decoded and\r\n          is then ready to be converted back to it's character codes and\r\n          original characters.\r\n        </p>\r\n        <p>\r\n          A regular RSA algorithm is usually only used as a way to encrypt keys\r\n          for symmetric encrytion algorithms like AES - it's a misconception,\r\n          that the actual message is encrypted using RSA. There is also a\r\n          padding scheme (OAEP) involved to obscure potentially insecure\r\n          messages and make them harder to break. RSA is incredibly slow when\r\n          used with longer messages/bigger prime numbers.{' '}\r\n          <strong className='underline'>\r\n            The longer the message that you want to encrypt, the more digits\r\n            your prime numbers needs to have for the algorithm to work.\r\n          </strong>\r\n        </p>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  prime1: state.rsa.prime1,\r\n  prime2: state.rsa.prime2,\r\n  timeToCalculate: state.rsa.timeToCalculate,\r\n  d: state.rsa.d,\r\n  phi: state.rsa.phi,\r\n  n: state.rsa.n,\r\n  e: state.rsa.e,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setPrime1,\r\n  setPrime2,\r\n  setRsaE,\r\n};\r\n\r\nPrimes.propTypes = {\r\n  prime1: PropTypes.string.isRequired,\r\n  prime2: PropTypes.string.isRequired,\r\n  timeToCalculate: PropTypes.string.isRequired,\r\n  d: PropTypes.string,\r\n  phi: PropTypes.string,\r\n  n: PropTypes.string,\r\n  e: PropTypes.string.isRequired,\r\n  setPrime1: PropTypes.func.isRequired,\r\n  setPrime2: PropTypes.func.isRequired,\r\n  setRsaE: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(connect(mapStateToProps, mapActionsToProps)(Primes));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass VigenereTransposition extends React.PureComponent {\r\n  genAlphabet = () => {\r\n    /**\r\n     * Gets the userinput and shortens it if neccesary to alphabet\r\n     * length\r\n     */\r\n    let input = this.props.input.split(' ').join('').split('');\r\n    input = input.length >= 27 ? input.slice(0, 26) : input;\r\n\r\n    /**\r\n     * Gets the ciphertext and extends it to the length of the\r\n     * previously generated input\r\n     */\r\n    let keywordVigenere = this.props.keywordVigenere;\r\n    if (keywordVigenere.length === 0) return null;\r\n    let key = new Array(input.length);\r\n    for (let j = 0; j < Math.ceil(input.length / keywordVigenere.length); j++) {\r\n      for (let i = 0; i < keywordVigenere.length; i++) {\r\n        key[j * keywordVigenere.length + i] = keywordVigenere[i];\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Slices the encrypted text to alphabet length\r\n     */\r\n    let out = this.props.output.split(' ').join('').split('');\r\n    out = out.length >= 27 ? out.slice(0, 26) : out;\r\n\r\n    /**\r\n     * Generates all the columns for the transposition element.\r\n     */\r\n    let output = [];\r\n    let counter = 0;\r\n    for (let element of input) {\r\n      output.push(\r\n        <div className='alphabet-row__character' key={uuidv4()}>\r\n          <div className='alphabet-row__character--white'>{element}</div>\r\n          <div className='arrow'>&</div>\r\n          <div\r\n            className={\r\n              counter < keywordVigenere.length\r\n                ? 'alphabet-row__character--white'\r\n                : 'alphabet-row__arrow'\r\n            }\r\n          >\r\n            {key[counter]}\r\n          </div>\r\n          <div className='arrow'>=</div>\r\n          <div className='alphabet-row__character--white'>{out[counter]}</div>\r\n        </div>\r\n      );\r\n      counter++;\r\n    }\r\n    return output;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='contentbox'>\r\n        <div className='content-element'>\r\n          <div className='content-element__settings-name'>\r\n            Vigenère Cipher Transposition\r\n          </div>\r\n          <div className='content-element__content content-element__content--alphabet-transposition'>\r\n            <div className='alphabet-row'>\r\n              <div className='alphabet-row__standard'>{this.genAlphabet()}</div>\r\n            </div>\r\n          </div>\r\n          <p className='content-element__feature_text'>\r\n            Visualization of the character mapping for input, keyword and\r\n            output.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  keywordVigenere: state.keywordVigenere,\r\n  output: state.output,\r\n  input: state.input,\r\n  direction: state.direction,\r\n});\r\n\r\nVigenereTransposition.propTypes = {\r\n  keywordVigenere: PropTypes.string.isRequired,\r\n  output: PropTypes.string.isRequired,\r\n  input: PropTypes.string.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(VigenereTransposition);\r\n","import { SET_CASE_TRANSFORM_CHOICE } from './constants';\r\n\r\nexport const setCaseTransformChoice = (case_choice) => ({\r\n  type: SET_CASE_TRANSFORM_CHOICE,\r\n  case_choice,\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport { setCaseTransformChoice } from '../../../actions/setCaseTransformChoice';\r\n\r\n/**\r\n * Abailable Case-Options\r\n */\r\nlet options = [\r\n  'Lower case',\r\n  'Upper case',\r\n  'Capitalize',\r\n  'Alternating case',\r\n  'Inverse case',\r\n];\r\n\r\nconst CaseTransform = (props) => {\r\n  /**\r\n   * Send case-choice to reduxs\r\n   */\r\n  const setCaseTransform = (e) => {\r\n    let val = e.target.value.split(' ')[0].toLowerCase();\r\n    props.setCaseTransformChoice(val);\r\n  };\r\n\r\n  return (\r\n    <div className='contentbox' style={{ borderBottom: 'none' }}>\r\n      <div className='content-element'>\r\n        <div className='content-element__settings-name'>Case Format</div>\r\n        <div className='content-element__settings-operators content-element__settings-operators--split'>\r\n          <div className='content-element__split content-element__split--text'>\r\n            Select Case:\r\n          </div>\r\n          <select\r\n            className='content-element__split content-element__split--button'\r\n            onChange={(e) => setCaseTransform(e)}\r\n            value={props.caseTransformChoice}\r\n          >\r\n            {options.map((option) => {\r\n              return (\r\n                <option\r\n                  key={uuidv4()}\r\n                  value={option.split(' ')[0].toLowerCase()}\r\n                  className='content-element__split--option'\r\n                >\r\n                  {option}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  caseTransformChoice: state.caseTransformChoice,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setCaseTransformChoice,\r\n};\r\n\r\nCaseTransform.propTypes = {\r\n  caseTransformChoice: PropTypes.string.isRequired,\r\n  setCaseTransformChoice: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(CaseTransform);\r\n","import {\r\n  SET_NIHILIST_SQUARE,\r\n  SET_NIHILIST_RUNNING_KEY,\r\n  SET_CIPHER_NIHILIST,\r\n  SET_KEYWORD_NIHILIST,\r\n  SET_NIHILIST_PLAIN_NUMBERS,\r\n} from './constants';\r\n\r\nexport const setCipherNihilist = (cipherNihilist) => ({\r\n  type: SET_CIPHER_NIHILIST,\r\n  cipherNihilist,\r\n});\r\n\r\nexport const setKeywordNihilist = (keywordNihilist) => ({\r\n  type: SET_KEYWORD_NIHILIST,\r\n  keywordNihilist,\r\n});\r\n\r\nexport const setNihilistPlainNumbers = (nihilistPlainNumbers) => ({\r\n  type: SET_NIHILIST_PLAIN_NUMBERS,\r\n  nihilistPlainNumbers,\r\n});\r\n\r\nexport const setNihilistRunningKey = (nihilistRunningKey) => ({\r\n  type: SET_NIHILIST_RUNNING_KEY,\r\n  nihilistRunningKey,\r\n});\r\n\r\nexport const setNihilistSquare = (nihilistSquare) => ({\r\n  type: SET_NIHILIST_SQUARE,\r\n  nihilistSquare,\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport {\r\n  setKeywordNihilist,\r\n  setCipherNihilist,\r\n} from '../../../actions/nihilist';\r\n\r\nconst KeywordsNihilist = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='contentbox'>\r\n        <div className='content-element'>\r\n          <div className='content-element__settings-name'>\r\n            Polybius square Key\r\n          </div>\r\n          <div className='content-element__settings-operators'>\r\n            <textarea\r\n              defaultValue={props.keywordNihilist}\r\n              className='content-element__textarea'\r\n              onChange={(evt) => {\r\n                props.setKeywordNihilist(evt.target.value.toLowerCase());\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='contentbox'>\r\n        <div className='content-element__settings-name'>Keyphrase</div>\r\n        <div className='content-element__settings-operators'>\r\n          <textarea\r\n            className='content-element__textarea'\r\n            defaultValue={props.cipherNihilist}\r\n            onChange={(evt) => {\r\n              props.setCipherNihilist(evt.target.value.toLowerCase());\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  keywordNihilist: state.nihilist.keywordNihilist,\r\n  cipherNihilist: state.nihilist.cipherNihilist,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setCipherNihilist,\r\n  setKeywordNihilist,\r\n};\r\n\r\nKeywordsNihilist.propTypes = {\r\n  keywordNihilist: PropTypes.string.isRequired,\r\n  cipherNihilist: PropTypes.string.isRequired,\r\n  setCipherNihilist: PropTypes.func.isRequired,\r\n  setKeywordNihilist: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(KeywordsNihilist);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Assets\r\nimport './nihilistSquare.scss';\r\n\r\nclass NihilistSquare extends React.PureComponent {\r\n  /**\r\n   * This generates the alphabet matrix\r\n   * for the nihilist-specific polybius\r\n   * square.\r\n   */\r\n  createVisualMatrix = () => {\r\n    /**\r\n     * If the user comes from a different method with decryption\r\n     * enabled, the lengthcheck prevents the app from crashing\r\n     * if there are no numbers in the input to decrypt.\r\n     */\r\n    if (this.props.nihilistSquare.length < 5) return;\r\n    if (!this.props.nihilistSquare || this.props.nihilistSquare.length === 0)\r\n      return;\r\n    let table = (\r\n      <table className='nihilistSquare'>\r\n        <tbody>\r\n          <tr>\r\n            {['#', '1', '2', '3', '4', '5'].map((number) => (\r\n              <th key={uuidv4()}>{number}</th>\r\n            ))}\r\n          </tr>\r\n          {['1', '2', '3', '4', '5'].map((number) => {\r\n            return (\r\n              <tr key={uuidv4()}>\r\n                <td>{number}</td>\r\n                {this.props.nihilistSquare[Number(number) - 1].map((num) => (\r\n                  <td key={uuidv4()}>{num}</td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n    return table;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='contentbox' style={{ borderBottom: 'none' }}>\r\n        <div className='content-element'>\r\n          <div className='content-element__settings-name'>\r\n            Nihilist Polybius Square\r\n          </div>\r\n          <div className='content-element__settings-operators'>\r\n            {this.createVisualMatrix()}\r\n          </div>\r\n          <p className='content-element__feature_text'>\r\n            This method is a bit shaky encrypting forth and back. The letter \"J\"\r\n            is left out and will be replaced by an 'I' - either not use this\r\n            letter or at least be aware that there might be inconsistencies.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nihilistSquare: state.nihilist.nihilistSquare,\r\n});\r\n\r\nNihilistSquare.propTypes = {\r\n  nihilistSquare: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(NihilistSquare);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass NihilistTransposition extends React.PureComponent {\r\n  genAlphabet = () => {\r\n    /**\r\n     * Get the numbers wich are formed by the plaintext letters in the\r\n     * nihilist matrix and slice them if there are more then 14.\r\n     */\r\n    let inputToNumbers = this.props.nihilistPlainNumbers;\r\n    inputToNumbers =\r\n      inputToNumbers.length >= 15\r\n        ? inputToNumbers.slice(0, 14)\r\n        : inputToNumbers;\r\n\r\n    /**\r\n     * Get the numbers wich are formed by the letters of the\r\n     * key in the matrix and slice them if there are more then 14.\r\n     */\r\n    let key = this.props.nihilistRunningKey;\r\n    key = key.length >= 15 ? key.slice(0, 14) : key;\r\n\r\n    /**\r\n     * Get the final sum of key and plaintext numbers and slice\r\n     * them if they are bigger then 14.\r\n     */\r\n    let out =\r\n      this.props.direction === 'encrypt'\r\n        ? this.props.output.split(' ')\r\n        : this.props.input.split(' ');\r\n    out = out.length >= 15 ? out.slice(0, 14) : out;\r\n\r\n    /**\r\n     * Get the plaintext input and slice if bigger then 14 chars.\r\n     */\r\n    let plaintext =\r\n      this.props.direction === 'encrypt'\r\n        ? this.props.input.split(' ').join('').split('')\r\n        : this.props.output.split(' ').join('').split('');\r\n    plaintext = plaintext.length >= 15 ? plaintext.slice(0, 14) : plaintext;\r\n\r\n    /**\r\n     * Get the key in its original form, not transformed by numbers.\r\n     * Continuously add the letters of the key to the newKey array so\r\n     * it repeats itself.\r\n     */\r\n    let plainkey = this.props.cipherNihilist.split('');\r\n    let newKey = [];\r\n    let i = 0;\r\n    while (newKey.length < 14) {\r\n      if (i < plainkey.length) {\r\n        newKey.push(plainkey[i]);\r\n        i++;\r\n      } else {\r\n        i = 0;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Bring all elements together into the visualisation.\r\n     * This mapping is happening vertically not horizontally\r\n     * like with caesar and atbash. (change later!)\r\n     */\r\n    let output = [];\r\n    let counter = 0;\r\n    for (let element of inputToNumbers) {\r\n      output.push(\r\n        <div\r\n          className='alphabet-row__vertically'\r\n          style={{ fontSize: '12px' }}\r\n          key={uuidv4()}\r\n        >\r\n          <div>{plaintext[counter]}</div>\r\n          <div className='arrow'>=</div>\r\n          <div>{element}</div>\r\n          <div className='arrow'>+</div>\r\n          <div>{newKey[counter]}</div>\r\n          <div className='arrow'>=</div>\r\n          <div>{key[counter]}</div>\r\n          <div className='arrow'>=</div>\r\n          <div>{out[counter]}</div>\r\n        </div>\r\n      );\r\n      counter++;\r\n    }\r\n    if (this.props.output === 'Not a valid input') return null;\r\n    return output;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.output !== 'Not a valid input' &&\r\n        this.props.output !== 'Please enter a Keyphrase' ? (\r\n          <div\r\n            className='contentbox'\r\n            style={{\r\n              borderBottom: 'none',\r\n              borderTop: '1px solid rgba(255, 255, 255, 0.192)',\r\n            }}\r\n          >\r\n            <div className='content-element'>\r\n              <div className='content-element__settings-name'>\r\n                Nihilist Cipher Transposition\r\n              </div>\r\n              <div className='content-element__content content-element__content--alphabet-transposition'>\r\n                <div className='alphabet-row'>\r\n                  <div className='alphabet-row__standard'>\r\n                    {this.genAlphabet()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p className='content-element__feature_text'>\r\n                Visualization of the character mapping for input, keyword and\r\n                output.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nihilistRunningKey: state.nihilist.nihilistRunningKey,\r\n  nihilistPlainNumbers: state.nihilist.nihilistPlainNumbers,\r\n  cipherNihilist: state.nihilist.cipherNihilist,\r\n  input: state.input,\r\n  output: state.output,\r\n  direction: state.direction,\r\n});\r\n\r\nNihilistTransposition.propTypes = {\r\n  nihilistRunningKey: PropTypes.array.isRequired,\r\n  nihilistPlainNumbers: PropTypes.array.isRequired,\r\n  cipherNihilist: PropTypes.string.isRequired,\r\n  input: PropTypes.string.isRequired,\r\n  output: PropTypes.string.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(NihilistTransposition);\r\n","import { SET_SUBSTITUTION_ALPHABET } from './constants';\r\n\r\nconst setSubstitutionAlphabet = (substitutionAlphabet) => ({\r\n  type: SET_SUBSTITUTION_ALPHABET,\r\n  substitutionAlphabet,\r\n});\r\n\r\nexport default setSubstitutionAlphabet;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport setSubstitutionAlphabet from '../../../actions/setSubstitutionAlphabet';\r\n\r\n//Assets\r\nimport './substitution.scss';\r\n\r\nconst SubstitutionAlphabet = (props) => {\r\n  /**\r\n   * Get the mapping for the characters\r\n   */\r\n  const handleAlphabetChange = (e) => {\r\n    const parent = e.target.dataset.parent;\r\n    const value = e.target.value;\r\n    if (props.alphabet.indexOf(value.toLowerCase()) !== -1) {\r\n      let temp = props.substitutionAlphabet;\r\n      temp[parent] = value;\r\n      props.setSubstitutionAlphabet(temp);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Find double elements\r\n   * Mark them with a blue color.\r\n   */\r\n  useEffect(() => {\r\n    let substitutionAlphabetValues = Object.values(props.substitutionAlphabet);\r\n    let double = [];\r\n    for (let character of substitutionAlphabetValues) {\r\n      if (\r\n        substitutionAlphabetValues.indexOf(character) !==\r\n        substitutionAlphabetValues.lastIndexOf(character)\r\n      ) {\r\n        double.indexOf(character) === -1 && double.push(character);\r\n      }\r\n    }\r\n\r\n    let inputs = document.getElementsByClassName('substitution__input');\r\n    for (let input of inputs) {\r\n      if (double.indexOf(input.value) !== -1) {\r\n        input.classList.add('substitution__input--double_character');\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className='contentbox'>\r\n      <div className='content-element'>\r\n        <div className='content-element__settings-name'>\r\n          Alphabetic Substitution Mapping Chart\r\n        </div>\r\n        <div className='content-element__settings-operators content-element__settings-operators--multiple-elements'>\r\n          {props.alphabet.split('').map((character) => {\r\n            return (\r\n              <div className='substitution' key={uuidv4()}>\r\n                <div className='substitution__character'>{character}</div>\r\n                <div className='arrow'>↓</div>\r\n                <div className='substitution__input-wrapper'>\r\n                  <input\r\n                    className='substitution__input'\r\n                    onChange={(e) => handleAlphabetChange(e)}\r\n                    data-parent={character}\r\n                    data-value={props.substitutionAlphabet[character]}\r\n                    defaultValue={props.substitutionAlphabet[character]}\r\n                    maxLength='1'\r\n                    size='1'\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alphabet: state.alphabet.alphabet,\r\n  substitutionAlphabet: state.substitutionAlphabet,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setSubstitutionAlphabet,\r\n};\r\n\r\nSubstitutionAlphabet.propTypes = {\r\n  alphabet: PropTypes.string.isRequired,\r\n  substitutionAlphabet: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(SubstitutionAlphabet);\r\n","import {\r\n  SET_TRIFID_KEY,\r\n  SET_TRIFID_27TH_LETTER,\r\n  SET_TRIFID_GROUP_SIZE,\r\n  SET_TRIFID_LAYERS,\r\n  SET_TRIFID_GROUPS,\r\n} from './constants';\r\n\r\nconst setTrifidKey = (trifidKey) => ({\r\n  type: SET_TRIFID_KEY,\r\n  trifidKey,\r\n});\r\n\r\nconst setTrifid27thLetter = (trifid27thLetter) => ({\r\n  type: SET_TRIFID_27TH_LETTER,\r\n  trifid27thLetter,\r\n});\r\n\r\nconst setTrifidGroupSize = (trifidGroupSize) => ({\r\n  type: SET_TRIFID_GROUP_SIZE,\r\n  trifidGroupSize,\r\n});\r\n\r\nconst setTrifidLayers = (trifidLayers) => ({\r\n  type: SET_TRIFID_LAYERS,\r\n  trifidLayers,\r\n});\r\n\r\nconst setTrifidGroups = (trifidGroups) => ({\r\n  type: SET_TRIFID_GROUPS,\r\n  trifidGroups,\r\n});\r\n\r\nexport {\r\n  setTrifidKey,\r\n  setTrifid27thLetter,\r\n  setTrifidGroupSize,\r\n  setTrifidLayers,\r\n  setTrifidGroups,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport {\r\n  setTrifidGroupSize,\r\n  setTrifidKey,\r\n  setTrifid27thLetter,\r\n} from '../../../actions/trifid';\r\n\r\nconst TrifidSettings = (props) => {\r\n  /**\r\n   * Calculate and set the group size for redux\r\n   */\r\n  const handleGroupSizeChange = (e) => {\r\n    if (e === '+') {\r\n      if (props.trifidGroupSize <= 15) {\r\n        props.setTrifidGroupSize(props.trifidGroupSize + 1);\r\n      }\r\n    } else if (e === '-') {\r\n      if (props.trifidGroupSize >= 3) {\r\n        props.setTrifidGroupSize(props.trifidGroupSize - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update the keyword - send to redux\r\n   */\r\n  const handleKeywordChange = (e) => {\r\n    props.setTrifidKey(e.target.value);\r\n  };\r\n\r\n  /**\r\n   * Update 27th letter and send to redux\r\n   */\r\n  const handleLetterChange = (e) => {\r\n    let value = e.target.value;\r\n    if (value.length === 0) value = '+';\r\n    props.setTrifid27thLetter(value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='contentbox'>\r\n        <div className='content-element'>\r\n          <div className='content-element__settings-name'>Trifid Keyword</div>\r\n          <div className='content-element__settings-operators'>\r\n            <textarea\r\n              value={props.trifidKey}\r\n              onChange={(e) => handleKeywordChange(e)}\r\n              className='content-element__textarea'\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='contentbox'>\r\n        <div className='content-element'>\r\n          <div className='content-element__settings-name'>\r\n            Trifid Group Size\r\n          </div>\r\n          <div className='content-element__settings-operators'>\r\n            <div\r\n              value='-'\r\n              className='content-element__adjust-plus-minus'\r\n              onClick={() => handleGroupSizeChange('-')}\r\n            >\r\n              -\r\n            </div>\r\n            <div className='content-element__adjust-plus-minus'>\r\n              {props.trifidGroupSize}\r\n            </div>\r\n            <div\r\n              value='+'\r\n              className='content-element__adjust-plus-minus'\r\n              onClick={() => handleGroupSizeChange('+')}\r\n            >\r\n              +\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='contentbox'>\r\n        <div className='content-element'>\r\n          <div className='content-element__settings-name'>\r\n            Trifid 27th Letter\r\n          </div>\r\n          <div className='content-element__settings-operators'>\r\n            <textarea\r\n              value={props.trifid27thLetter}\r\n              onChange={(e) => handleLetterChange(e)}\r\n              className='content-element__textarea content-element__textarea--single-big'\r\n              maxLength='1'\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  trifidKey: state.trifid.trifidKey,\r\n  trifid27thLetter: state.trifid.trifid27thLetter,\r\n  trifidGroupSize: state.trifid.trifidGroupSize,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setTrifidGroupSize,\r\n  setTrifidKey,\r\n  setTrifid27thLetter,\r\n};\r\n\r\nTrifidSettings.propTypes = {\r\n  trifidKey: PropTypes.string.isRequired,\r\n  trifid27thLetter: PropTypes.string.isRequired,\r\n  trifidGroupSize: PropTypes.number.isRequired,\r\n  setTrifidGroupSize: PropTypes.func.isRequired,\r\n  setTrifidKey: PropTypes.func.isRequired,\r\n  setTrifid27thLetter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(TrifidSettings);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Assets\r\nimport './trifid.scss';\r\n\r\nconst TrifidLayers = (props) => {\r\n  /**\r\n   * This generates the Trifid-Layers:\r\n   * The first mapping returns 3 tables.\r\n   * The second returns the tablehead elements with the layer naming (L1...)\r\n   * The last two return the number of the row and the alphabet mapping\r\n   * for the characters.\r\n   */\r\n  return (\r\n    <div className='contentbox'>\r\n      <div className='content-element'>\r\n        <div className='content-element__settings-name'>Trifid Layers</div>\r\n        <div className='content-element__settings-operators'>\r\n          <div className='trifid-group'>\r\n            {[0, 1, 2].map((element) => {\r\n              return (\r\n                <table key={uuidv4()} className='trifid-square'>\r\n                  <tbody className='trifid-square__table-body'>\r\n                    <tr className='trifid-square__tablerow'>\r\n                      {[`L${element + 1}`, '1', '2', '3'].map((number) => (\r\n                        <th\r\n                          key={uuidv4()}\r\n                          className='trifid-square__number trifid-square__number--big'\r\n                        >\r\n                          {number}\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                    {['1', '2', '3'].map((number) => {\r\n                      return (\r\n                        <tr key={uuidv4()} className='trifid-square__tablerow'>\r\n                          <td className='trifid-square__number trifid-square__number--big'>\r\n                            {number}\r\n                          </td>\r\n                          {props.trifidLayers[element][Number(number) - 1].map(\r\n                            (num) => {\r\n                              return (\r\n                                <td\r\n                                  key={uuidv4()}\r\n                                  className='trifid-square__number trifid-square__number--big'\r\n                                >\r\n                                  {num}\r\n                                </td>\r\n                              );\r\n                            }\r\n                          )}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <p className='content-element__feature_text'>\r\n          The Layers are generated from the standart english alphabet, the 27th\r\n          character and the provided keyword.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  trifidLayers: state.trifid.trifidLayers,\r\n});\r\n\r\nTrifidLayers.propTypes = {\r\n  trifidLayers: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(TrifidLayers);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Assets\r\nimport './trifid.scss';\r\n\r\nconst TrifidGroups = (props) => {\r\n  /**\r\n   * Get rid of non-alphabet characters or characters that are\r\n   * not the 27th trifid letter the user chooses.\r\n   */\r\n  const cleanInput = [];\r\n  const cleanInputLength = () => {\r\n    let cleanInputLength = 0;\r\n    for (let i = 0; i < props.input.length; i++) {\r\n      if (\r\n        props.alphabet.indexOf(props.input[i].toLowerCase()) !== -1 ||\r\n        props.input[i].toLowerCase() === props.trifid27thLetter.toLowerCase()\r\n      ) {\r\n        cleanInputLength++;\r\n        cleanInput.push(props.input[i]);\r\n      }\r\n    }\r\n    return cleanInputLength;\r\n  };\r\n  return (\r\n    <div className='contentbox'>\r\n      <div className='content-element'>\r\n        <div className='content-element__settings-name'>Trifid Groups</div>\r\n        <div className='content-element__settings-operators'>\r\n          <div className='trifid-group'>\r\n            {[\r\n              ...Array(\r\n                Math.ceil(cleanInputLength() / Number(props.trifidGroupSize))\r\n              ).keys(),\r\n            ].map((element) => {\r\n              return (\r\n                /**\r\n                 * Generate each one table element for all the trifid groups.\r\n                 *\r\n                 * The first Mapping in <tr> return the head table row.\r\n                 *\r\n                 * The second Mapping returns 3 rows with the characters mapped\r\n                 * to the corresponding layer elements/rows/cols.\r\n                 *\r\n                 * The last Mapping returns the bottom of the table with the\r\n                 * encrypted characters.\r\n                 *\r\n                 */\r\n                <table key={uuidv4()} className='trifid-square'>\r\n                  <tbody className='trifid-square__table-body'>\r\n                    <tr>\r\n                      {cleanInput\r\n                        .slice(\r\n                          element * props.trifidGroupSize,\r\n                          element * props.trifidGroupSize +\r\n                            props.trifidGroupSize\r\n                        )\r\n                        .map((letter) => (\r\n                          <th\r\n                            className='trifid-square__tablehead'\r\n                            key={uuidv4()}\r\n                          >\r\n                            {letter}\r\n                          </th>\r\n                        ))}\r\n                    </tr>\r\n                    {[0, 1, 2].map((number) => {\r\n                      return (\r\n                        <tr key={uuidv4()} className='trifid-square__tablerow'>\r\n                          {props.trifidGroups\r\n                            .slice(\r\n                              element * props.trifidGroupSize,\r\n                              element * props.trifidGroupSize +\r\n                                props.trifidGroupSize\r\n                            )\r\n                            .map((element) => {\r\n                              return (\r\n                                <td\r\n                                  key={uuidv4()}\r\n                                  className='trifid-square__number'\r\n                                >\r\n                                  {element[number] + 1}\r\n                                </td>\r\n                              );\r\n                            })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                    <tr>\r\n                      {props.output\r\n                        .split('')\r\n                        .slice(\r\n                          element * props.trifidGroupSize,\r\n                          element * props.trifidGroupSize +\r\n                            props.trifidGroupSize\r\n                        )\r\n                        .map((letter) => {\r\n                          return (\r\n                            <td\r\n                              className='trifid-square__encrypted'\r\n                              key={uuidv4()}\r\n                            >\r\n                              {letter}\r\n                            </td>\r\n                          );\r\n                        })}\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <p className='content-element__feature_text'>\r\n          The tablehead represents the letters of your input text. Numbers\r\n          written under the letters are a representation of the encoded letter.\r\n          F.e.: With the standart 'Felix Marie...' - keyword, the letter \"A\"\r\n          becomes a 1 (layer), 3 (row), 1 (column). The letters under the\r\n          numbers represent the output. They are encoded by horizontally\r\n          combining each 3 numbers.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  trifidGroups: state.trifid.trifidGroups,\r\n  trifidGroupSize: state.trifid.trifidGroupSize,\r\n  trifid27thLetter: state.trifid.trifid27thLetter,\r\n  input: state.input,\r\n  alphabet: state.alphabet.alphabet,\r\n  output: state.output,\r\n});\r\n\r\nTrifidGroups.propTypes = {\r\n  trifidGroups: PropTypes.array.isRequired,\r\n  trifidGroupSize: PropTypes.number.isRequired,\r\n  trifid27thLetter: PropTypes.string.isRequired,\r\n  input: PropTypes.string.isRequired,\r\n  alphabet: PropTypes.string.isRequired,\r\n  output: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(TrifidGroups);\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Components\r\nimport Alphabet from './Alphabet';\r\nimport ForeignChars from './ForeignChars';\r\nimport CaesarShift from '../../encryption_methods/caesar/CaesarShift';\r\nimport CaesarTransposition from '../../encryption_methods/caesar/CaesarTransposition';\r\nimport AlphaBetaSelectors from '../../encryption_methods/affine/AlphaBetaSelectors';\r\nimport KeywordVigenere from '../../encryption_methods/vigenere/KeywordVigenere';\r\nimport KeywordPlayfair from '../../encryption_methods/playfair/KeywordPlayfair';\r\nimport CharOptions from '../../encryption_methods/playfair/CharOptions';\r\nimport PlayfairSquare from '../../encryption_methods/playfair/PlayfairSquare';\r\nimport ReplaceKeys from '../../encryption_methods/replace/ReplaceKeys';\r\nimport RingLength from '../../encryption_methods/skytale/RingLenght';\r\nimport Rings from '../../encryption_methods/skytale/Rings';\r\nimport AtbashTransposition from '../../encryption_methods/atbash/AtbashTransposition';\r\nimport OtpGenerate from '../../encryption_methods/onetimepad/otpGenerate';\r\nimport Primes from '../../encryption_methods/rsa/Primes';\r\nimport VigenereTransposition from '../../encryption_methods/vigenere/vigenereTransposition';\r\nimport CaseTransform from '../../encryption_methods/caseTransform/CaseTransform';\r\nimport KeywordsNihilist from '../../encryption_methods/nihilist/KeywordNihilist';\r\nimport NihilistSquare from '../../encryption_methods/nihilist/NihilistSquare';\r\nimport NihilistTransposition from '../../encryption_methods/nihilist/NihilistTransposition';\r\nimport SubstitutionTable from '../../encryption_methods/substitutionAlphabet/SubstitutionTable';\r\nimport TrifidSettings from '../../encryption_methods/trifid/TrifidSettings';\r\nimport TrifidLayers from '../../encryption_methods/trifid/TrifidLayers';\r\nimport TrifidGroups from '../../encryption_methods/trifid/TrifidGroups';\r\n\r\nconst Settings = (props) => {\r\n  const switchSettings = () => {\r\n    if (props.direction === 'crack') return null;\r\n    switch (props.method) {\r\n      case 'trifid':\r\n        return (\r\n          <Fragment>\r\n            <TrifidSettings />\r\n            <TrifidLayers />\r\n            <TrifidGroups />\r\n          </Fragment>\r\n        );\r\n      case 'substitution':\r\n        return <SubstitutionTable />;\r\n      case 'casetransform':\r\n        return <CaseTransform />;\r\n      case 'reverse':\r\n        return <ForeignChars />;\r\n      case 'nihilist':\r\n        return (\r\n          <Fragment>\r\n            <KeywordsNihilist />\r\n            <NihilistSquare />\r\n            <NihilistTransposition />\r\n          </Fragment>\r\n        );\r\n      case 'atbash':\r\n        return (\r\n          <Fragment>\r\n            <AtbashTransposition alphabet={props.alphabet} />\r\n            <Alphabet\r\n              alphabet={props.alphabet}\r\n              alphabetActive={props.alphabetActive}\r\n            />\r\n            <ForeignChars />\r\n          </Fragment>\r\n        );\r\n      case 'rsa':\r\n        return <Primes />;\r\n      case 'rot13':\r\n        return (\r\n          <Fragment>\r\n            <Alphabet\r\n              alphabet={props.alphabet}\r\n              alphabetActive={props.alphabetActive}\r\n            />\r\n            <ForeignChars />\r\n          </Fragment>\r\n        );\r\n      case 'caesar':\r\n        return (\r\n          <Fragment>\r\n            <CaesarShift />\r\n            <CaesarTransposition alphabet={props.alphabet} />\r\n            <Alphabet\r\n              alphabet={props.alphabet}\r\n              alphabetActive={props.alphabetActive}\r\n            />\r\n            <ForeignChars />\r\n          </Fragment>\r\n        );\r\n      case 'affine':\r\n        return (\r\n          <Fragment>\r\n            <AlphaBetaSelectors />\r\n            <Alphabet\r\n              alphabet={props.alphabet}\r\n              alphabetActive={props.alphabetActive}\r\n            />\r\n            <ForeignChars />\r\n          </Fragment>\r\n        );\r\n      case 'vigenere':\r\n        return (\r\n          <Fragment>\r\n            <KeywordVigenere />\r\n            <VigenereTransposition alphabet={props.alphabet} />\r\n            <Alphabet\r\n              alphabet={props.alphabet}\r\n              alphabetActive={props.alphabetActive}\r\n            />\r\n            <ForeignChars />\r\n          </Fragment>\r\n        );\r\n      case 'playfair':\r\n        return (\r\n          <Fragment>\r\n            <CharOptions />\r\n            <KeywordPlayfair />\r\n            <PlayfairSquare />\r\n            <Alphabet\r\n              alphabet={props.alphabet}\r\n              alphabetActive={props.alphabetActive}\r\n            />\r\n          </Fragment>\r\n        );\r\n      case 'morse':\r\n        return null;\r\n      case 'replace':\r\n        return <ReplaceKeys />;\r\n      case 'skytale':\r\n        return (\r\n          <Fragment>\r\n            <RingLength />\r\n            <Rings />\r\n            <Alphabet\r\n              alphabet={props.alphabet}\r\n              alphabetActive={props.alphabetActive}\r\n            />\r\n            <ForeignChars />\r\n          </Fragment>\r\n        );\r\n      case 'otp':\r\n        return (\r\n          <Fragment>\r\n            <OtpGenerate />\r\n            <Alphabet\r\n              alphabet={props.alphabet}\r\n              alphabetActive={props.alphabetActive}\r\n            />\r\n            <ForeignChars />\r\n          </Fragment>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return <Fragment>{switchSettings()}</Fragment>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  direction: state.direction,\r\n  method: state.method,\r\n  alphabet: state.alphabet.alphabet,\r\n  alphabetActive: state.alphabet.active,\r\n});\r\n\r\nSettings.propTypes = {\r\n  direction: PropTypes.string.isRequired,\r\n  method: PropTypes.string.isRequired,\r\n  alphabet: PropTypes.string.isRequired,\r\n  alphabetActive: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Settings);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const MoreDetailsStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  body: {\r\n    fontSize: theme.typography.pxToRem(14),\r\n  },\r\n  link: {\r\n    marginTop: '10px',\r\n    fontSize: theme.typography.pxToRem(14),\r\n  },\r\n}));\r\n","const explanatory = {\r\n  atbash: {\r\n    normal: `Atbash is a monoalphabetic substitution cipher. While it was used to encrypt the \r\n    hebrew alphabet, it can still be used to encrypt nearly all known alphabets. Atbash reverses \r\n    the mapping of the characters and is very easy to break.`,\r\n    crack: `The cracking function does exactly the same as the encryption- and decryption algorithm.\r\n    There is only one possibility for an encrypted letter to go to. F.e. the letter 'A' will\r\n    always be mapped to 'Z' and 'Z' will always be mapped back to 'A'.`,\r\n    linksrc: `https://en.wikipedia.org/wiki/Atbash`,\r\n    linkname: `Atbash Cipher Wikipedia`,\r\n  },\r\n  rot13: {\r\n    normal: `Rot 13 is a very simple substitution cipher. It is a special case of the Caesar Cipher \r\n    using a shift value of 13. It originated from the net.jokes newsgroup in the early 1980s.`,\r\n    crack: `No Crack function yet  :(`,\r\n    linksrc: `https://en.wikipedia.org/wiki/ROT13`,\r\n    linkname: `Rot 13 Wikipedia`,\r\n  },\r\n  caesar: {\r\n    normal: `The Caesar cipher is a substitution cypher wich was used by Julius Caesar to encrypt\r\n    his correspondences. The classic shift of 3 maps every character 3 places before its original \r\n    position. F.e. a \"T\" in right shift would become a \"W\"`,\r\n    crack: `Use this functionality on encrypted texts! This method uses a brute force attack with \r\n    the english dictionary. It gave better results for shorter phrases and words then frequency \r\n    analysis. If you want to decode longer texts it might be a bit slower though`,\r\n    linksrc: `https://en.wikipedia.org/wiki/Caesar_cipher`,\r\n    linkname: `Caesar's cipher Wikipedia`,\r\n  },\r\n  affine: {\r\n    normal: `The affine cipher is a monoalphabetic substitution cipher. Each letter in the alphabet is \r\n    mapped to its numeric equivalent and encrypted using a simple formula: E(x) = (ax + b) mod m. The \r\n    resulting number is then converted back to its alphabetic equivalent`,\r\n    crack: `No Crack function yet  :(`,\r\n    linksrc: `https://en.wikipedia.org/wiki/Affine_cipher`,\r\n    linkname: `Affine Cipher Wikipedia`,\r\n  },\r\n  nihilist: {\r\n    normal: `Used by russian nihilists in the 1880's the cipher was used to organize attacks against \r\n    the tsarist regime. The cipher uses a polybius square with a mixed alphabet.`,\r\n    crack: `No Crack function yet  :(`,\r\n    linksrc: `https://en.wikipedia.org/wiki/Nihilist_cipher`,\r\n    linkname: `Nihilist Cipher Wikipedia`,\r\n  },\r\n  substitution: {\r\n    normal: `The substitution cipher substitutes letters of the the original alphabet with letters \r\n    from the new alphabet. Without the key, this cipher is very hard to crack.`,\r\n    crack: `No Crack function yet  :(`,\r\n    linksrc: `https://en.wikipedia.org/wiki/Substitution_cipher`,\r\n    linkname: `Alphabetic Substitution Cipher`,\r\n  },\r\n  trifid: {\r\n    normal: `The trifid cipher uses a table to fractionate each plaintext letter into a trigram, \r\n    mixes the constituents of the trigrams, and then applies the table in reverse to turn these \r\n    mixed trigrams into ciphertext letters. Delastelle notes that the most practical system uses \r\n    three symbols for the trigrams.`,\r\n    linksrc: `https://en.wikipedia.org/wiki/Trifid_cipher`,\r\n    linkname: `Trifid Cipher`,\r\n  },\r\n  casetransform: {\r\n    normal: `Transforms your input text into the selected case-format.`,\r\n  },\r\n  reverse: {\r\n    normal: `Reverses the input.`,\r\n    crack: `No Crack function yet  :(`,\r\n  },\r\n  vigenere: {\r\n    normal: `The Vigenère Cipher was invented by Giovan Battista Bellaso in 1553 and is a \r\n    polyalphabetic substitution cipher. It wasn't broken until 1863 and earned itself the \r\n    description \"Le chiffre indéchiffrable.`,\r\n    crack: `No Crack function yet  :(`,\r\n    linksrc: `https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher`,\r\n    linkname: `Vigenere Cipher Wikipedia`,\r\n  },\r\n  playfair: {\r\n    normal: `The playfair cipher was invented in 1854 by Charles Wheatstone. It encrypts \r\n    pairs of letters instead of single letters and is harder to break then simple substitution \r\n    ciphers. There are 600 possible bigrams rather then 26 monograms wich makes it necessary \r\n    to obtain a longer encrypted text to break the cipher.`,\r\n    crack: `No Crack function yet  :(`,\r\n    linksrc: `https://en.wikipedia.org/wiki/Playfair_cipher`,\r\n    linkname: `Playfair Cipher Wikipedia`,\r\n  },\r\n  morse: {\r\n    normal: `The International Morse Code encodes the 26 English letters A through Z, some \r\n    non-English letters, the Arabic numerals and a small set of punctuation and procedural \r\n    signals (prosigns). There is no distinction between upper and lower case letters. Each \r\n    Morse code symbol is formed by a sequence of dots and dashes. The dot duration is the \r\n    basic unit of time measurement in Morse code transmission. The duration of a dash is \r\n    three times the duration of a dot. Each dot or dash within a character is followed by \r\n    period of signal absence, called a space, equal to the dot duration. The letters of a \r\n    word are separated by a space of duration equal to three dots, and the words are separated \r\n    by a space equal to seven dots.`,\r\n    crack: `No Crack function yet  :(`,\r\n    linksrc: 'https://en.wikipedia.org/wiki/Morse_code',\r\n    linkname: `Morse Code Wikipedia`,\r\n  },\r\n  replace: {\r\n    normal: `This function will replace any given letter/sign in a text with another character.`,\r\n    crack: '',\r\n    linksrc: '',\r\n    linkname: '',\r\n  },\r\n  skytale: {\r\n    normal: `The skytale is a tool to perform a transposition cipher. A cylinder is used to \r\n    wrap the message around it. It was used by the ancient greeks and the spartans to communicate \r\n    their battle plans.`,\r\n    crack: `No Crack function yet  :(`,\r\n    linksrc: `https://en.wikipedia.org/wiki/Scytale`,\r\n    linkname: `Skytale Wikipedia`,\r\n  },\r\n  otp: {\r\n    normal: `The OTP is an unbreakable form of encryption when used correctly. Every character \r\n    is encoded randomly to a new character. A \"B\" in one place can become a \"Z\" in another place. \r\n    The key has to be shared to decrypt messages.`,\r\n    crack: `No Crack function yet  :(`,\r\n    linksrc: `https://en.wikipedia.org/wiki/One-time_pad`,\r\n    linkname: `One Time Pad`,\r\n  },\r\n  rsa: {\r\n    normal: `RSA (Rivest–Shamir–Adleman) is one of the first public-key cryptosystems and \r\n    is widely used for secure data transmission. In such a cryptosystem, the encryption key \r\n    is public and distinct from the decryption key which is kept secret (private). In RSA, \r\n    this asymmetry is based on the practical difficulty of factoring the product of two large \r\n    prime numbers, the \"factoring problem\". The acronym RSA is the initial letters of the surnames \r\n    of Ron Rivest, Adi Shamir, and Leonard Adleman, who publicly described the algorithm in 1977. \r\n    Clifford Cocks, an English mathematician working for the British intelligence agency Government \r\n    Communications Headquarters (GCHQ), had developed an equivalent system in 1973, which was not \r\n    declassified until 1997.`,\r\n    crack: `No Crack function yet  :(`,\r\n    linksrc: `https://en.wikipedia.org/wiki/One-time_pad`,\r\n    linkname: `One Time Pad`,\r\n  },\r\n};\r\n\r\nexport default explanatory;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n//Assets\r\nimport './center.scss';\r\nimport { MoreDetailsStyles } from './MoreDetailsStyles';\r\nimport EncryptionMethodsTexts from './EncryptionMethodsTexts';\r\n\r\nconst MoreDetails = (props) => {\r\n  /**\r\n   * Import Mui Styles and check if method exists in texts.\r\n   */\r\n  const classes = MoreDetailsStyles();\r\n\r\n  if (!EncryptionMethodsTexts[props.method]) return null;\r\n\r\n  return props.direction !== 'crack' ? (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls='panel2a-content'\r\n        id='panel2a-header'\r\n      >\r\n        <Typography className={classes.heading}>More Details</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <Typography className={classes.body}>\r\n          {EncryptionMethodsTexts[props.method]['normal']}\r\n        </Typography>\r\n        <Typography className={classes.link}>\r\n          <a\r\n            href={EncryptionMethodsTexts[props.method]['linksrc']}\r\n            target='blank'\r\n          >\r\n            {EncryptionMethodsTexts[props.method]['linkname']}\r\n          </a>\r\n        </Typography>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  ) : (\r\n    <div className='contentbox explanation'>\r\n      <p className='explanation__paragraph'>\r\n        {EncryptionMethodsTexts[props.method]['crack']}\r\n      </p>\r\n      <a\r\n        className='explanation__link'\r\n        href={EncryptionMethodsTexts[props.method]['linksrc']}\r\n        target='blank'\r\n      >\r\n        {EncryptionMethodsTexts[props.method]['linkname']}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  direction: state.direction,\r\n  method: state.method,\r\n});\r\n\r\nMoreDetails.propTypes = {\r\n  direction: PropTypes.string.isRequired,\r\n  method: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(MoreDetails);\r\n","import React from 'react';\r\n\r\n//Components\r\nimport Head from './Head';\r\nimport Settings from './Settings';\r\nimport MoreDetails from './MoreDetails';\r\n\r\n//Assets\r\nimport './center.scss';\r\n\r\nconst BlockCenter = () => {\r\n  return (\r\n    <div className='block-settings'>\r\n      <Head />\r\n      <div className='block-settings__body'>\r\n        <Settings />\r\n        <MoreDetails />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockCenter;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from 'react-slick';\r\n\r\n//Actions\r\nimport { changeMethod } from '../../actions/changeMethod';\r\n\r\n//Components\r\nimport { EncryptionMethodsDetails } from '../main/BlockCenter/EncryptionMethodsDetails';\r\n\r\n//Assets\r\nimport './timeline.scss';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nclass Timeline extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.state = {\r\n      oldSlide: 9,\r\n      activeSlide: 9,\r\n    };\r\n    this.vw = Math.max(\r\n      document.documentElement.clientWidth,\r\n      window.innerWidth || 0\r\n    );\r\n  }\r\n\r\n  next() {\r\n    this.slider.slickNext();\r\n  }\r\n\r\n  previous() {\r\n    this.slider.slickPrev();\r\n  }\r\n\r\n  viewportWidth = () => {\r\n    if (this.vw < 1100) {\r\n      return 1;\r\n    } else return 1;\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    /**\r\n     * If user chooses to go to method that is not in\r\n     * the timeline and back to the same method,\r\n     * hide the method and year and then switch back.\r\n     */\r\n    let hasHideClass = document.getElementsByClassName('hideOnTimeline')[0];\r\n    if (\r\n      hasHideClass &&\r\n      hasHideClass.classList &&\r\n      hasHideClass.classList.contains('hideOnTimeline')\r\n    ) {\r\n      hasHideClass.classList.remove('hideOnTimeline');\r\n    }\r\n\r\n    if (prevProps.method !== this.props.method) {\r\n      let idx = EncryptionMethodsDetails[this.props.method].timelineIdx;\r\n      if (idx >= 0) {\r\n        return this.slider.slickGoTo(idx);\r\n      } else {\r\n        let current = document.getElementsByClassName('slick-current')[0];\r\n        current.classList.add('hideOnTimeline');\r\n      }\r\n    }\r\n\r\n    if (prevState.activeSlide !== this.state.activeSlide) {\r\n      for (const element of Object.values(EncryptionMethodsDetails)) {\r\n        if (element.timelineIdx === this.state.activeSlide) {\r\n          return this.props.changeMethod(element.name);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const settings = {\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: this.viewportWidth(),\r\n      slidesToScroll: 1,\r\n      arrows: true,\r\n      initialSlide: 9,\r\n      beforeChange: (current, next) =>\r\n        this.setState({\r\n          oldSlide: current,\r\n          activeSlide: next,\r\n        }),\r\n    };\r\n\r\n    const generateTimelineElements = () => {\r\n      let timelineElements = [];\r\n      for (let element in EncryptionMethodsDetails) {\r\n        if (EncryptionMethodsDetails[element].year === false) continue;\r\n        let key = 0;\r\n        timelineElements.push(\r\n          <div\r\n            key={key}\r\n            value={element}\r\n            onClick={(evt) => {\r\n              this.props.changeMethod(evt.target.getAttribute('value'));\r\n              this.slider.slickGoTo(0);\r\n            }}\r\n          >\r\n            <div value={element} className='history-element'>\r\n              <h3 value={element} className='history-element__time'>\r\n                {EncryptionMethodsDetails[element].year}\r\n              </h3>\r\n              <div value={element} className='history-element__dot'></div>\r\n              <div\r\n                value={element}\r\n                className='history-element__encryption-method-name'\r\n              >\r\n                {EncryptionMethodsDetails[element].display}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        key++;\r\n      }\r\n      return timelineElements.map((item) => item);\r\n    };\r\n    return (\r\n      <div className='timeline'>\r\n        <div className='timeline__border'></div>\r\n\r\n        <Slider ref={(c) => (this.slider = c)} {...settings}>\r\n          {generateTimelineElements()}\r\n        </Slider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  method: state.method,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  changeMethod: changeMethod,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Timeline);\r\n","import {\r\n  ADD_PRESET,\r\n  LOAD_PRESETS,\r\n  PRESET_ERROR,\r\n  DELETE_PRESET_ERROR,\r\n  DELETE_PRESET_SUCCESS,\r\n} from './constants';\r\nimport axios from 'axios';\r\n\r\n//Add Preset\r\nexport const addPreset = (formData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const res = await axios.post('./api/presets', formData, config);\r\n    dispatch({\r\n      type: ADD_PRESET,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRESET_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//Load all presets\r\nexport const loadPresets = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('./api/presets');\r\n    dispatch({\r\n      type: LOAD_PRESETS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRESET_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n//Delete a preset\r\nexport const deletePreset = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`./api/presets/${id}`);\r\n    dispatch({\r\n      type: DELETE_PRESET_SUCCESS,\r\n      payload: res.data,\r\n      id: id,\r\n    });\r\n  } catch (error) {\r\n    console.error('ERROR', error);\r\n    dispatch({\r\n      type: DELETE_PRESET_ERROR,\r\n    });\r\n  }\r\n};\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//Actions\r\nimport { deletePreset } from '../../../actions/presets';\r\nimport { toggleLoadPresetModal } from '../../../actions/toggleLoadPresetModal';\r\nimport { setCshift } from '../../../actions/setCShift';\r\nimport { updateInput } from '../../../actions/updateInput';\r\nimport toggleForeignChars from '../../../actions/toggleForeignChars';\r\nimport toggleCase from '../../../actions/toggleCase';\r\nimport { updateAlphabet } from '../../../actions/alphabet';\r\nimport { changeMethod } from '../../../actions/changeMethod';\r\nimport { toggleDirection } from '../../../actions/toggleDirection';\r\nimport { setPrime1, setPrime2, setRsaE } from '../../../actions/rsa';\r\nimport setKeywordVigenere from '../../../actions/setKeywordVigenere';\r\nimport { setKeywordPlayfair } from '../../../actions/playfair';\r\nimport setOtpKey from '../../../actions/setOtpKey';\r\nimport { setRinglength } from '../../../actions/skytale';\r\nimport { toReplaceLetter, replaceLetter } from '../../../actions/replace';\r\nimport { setAffineAlpha, setAffineBeta } from '../../../actions/affine';\r\nimport setSubstitutionAlphabet from '../../../actions/setSubstitutionAlphabet';\r\nimport {\r\n  setKeywordNihilist,\r\n  setCipherNihilist,\r\n} from '../../../actions/nihilist';\r\nimport {\r\n  setTrifidGroupSize,\r\n  setTrifidKey,\r\n  setTrifid27thLetter,\r\n} from '../../../actions/trifid';\r\nimport { setCaseTransformChoice } from '../../../actions/setCaseTransformChoice';\r\nimport { EncryptionMethodsDetails } from '../../main/BlockCenter/EncryptionMethodsDetails';\r\n\r\n//MUI\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nconst LoadPresetAuthenticated = (props) => {\r\n  const [width, updateWidth] = useState(0);\r\n\r\n  const getDeviceWidth = () => {\r\n    const width = window.innerWidth;\r\n    return width;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      updateWidth(getDeviceWidth);\r\n    };\r\n\r\n    handleResize();\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const handleLoadPreset = (id) => {\r\n    let selected;\r\n    for (const preset of props.presets) {\r\n      if (preset._id === id) {\r\n        selected = preset;\r\n      }\r\n    }\r\n    let {\r\n      method,\r\n      input,\r\n      alphabet,\r\n      cShift,\r\n      direction,\r\n      caseFormat,\r\n      foreignChars,\r\n      prime1,\r\n      prime2,\r\n      e,\r\n      keywordVigenere,\r\n      keywordPlayfair,\r\n      otpKey,\r\n      ringLength,\r\n      replaceLetter,\r\n      toReplaceLetter,\r\n      affine_alpha,\r\n      affine_beta,\r\n      keywordNihilist,\r\n      cipherNihilist,\r\n      substitutionAlphabet,\r\n      trifidKey,\r\n      trifid27thLetter,\r\n      trifidGroupSize,\r\n      caseTransformChoice,\r\n    } = selected.preset;\r\n\r\n    console.log(selected.preset);\r\n\r\n    props.changeMethod(method);\r\n    props.updateInput(input);\r\n    props.updateAlphabet(alphabet);\r\n    props.toggleDirection(direction);\r\n    props.toggleCase(caseFormat || 'maintain');\r\n    props.toggleForeignChars(foreignChars || 'include');\r\n\r\n    switch (method) {\r\n      case 'caesar':\r\n        props.setCshift(cShift);\r\n        break;\r\n      case 'rsa':\r\n        props.setPrime1(prime1);\r\n        props.setPrime2(prime2);\r\n        props.setRsaE(e);\r\n        break;\r\n      case 'casetransform':\r\n        props.setCaseTransformChoice(caseTransformChoice);\r\n        break;\r\n      case 'vigenere':\r\n        props.setKeywordVigenere(keywordVigenere);\r\n        break;\r\n      case 'playfair':\r\n        props.setKeywordPlayfair(keywordPlayfair);\r\n        break;\r\n      case 'otp':\r\n        props.setOtpKey(otpKey);\r\n        break;\r\n      case 'skytale':\r\n        props.setRinglength(ringLength);\r\n        break;\r\n      case 'replace':\r\n        props.setReplaceLetter(replaceLetter);\r\n        props.setToReplaceLetter(toReplaceLetter);\r\n        break;\r\n      case 'affine':\r\n        props.setAffineAlpha(affine_alpha);\r\n        props.setAffineBeta(affine_beta);\r\n        break;\r\n      case 'nihilist':\r\n        props.setKeywordNihilist(keywordNihilist);\r\n        props.setCipherNihilist(cipherNihilist);\r\n        break;\r\n      case 'substitution':\r\n        props.setSubstitutionAlphabet(substitutionAlphabet);\r\n        break;\r\n      case 'trifid':\r\n        props.setTrifid27thLetter(trifid27thLetter);\r\n        props.setTrifidGroupSize(trifidGroupSize);\r\n        props.setTrifidKey(trifidKey);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    props.toggleLoadPresetModal();\r\n  };\r\n\r\n  const genTable = () => {\r\n    let presetTable = [];\r\n    for (let preset of props.presets) {\r\n      let method = preset.preset.method;\r\n      presetTable.push(\r\n        <tr key={preset._id}>\r\n          {width >= 700\r\n            ? preset.date !== undefined && (\r\n                <td className='modal__presets-table-cell'>{preset.date}</td>\r\n              )\r\n            : null}\r\n          <td className='modal__presets-table-cell'>{preset.name}</td>\r\n          <td className='modal__presets-table-cell'>\r\n            {EncryptionMethodsDetails[method].display}\r\n          </td>\r\n          {width >= 700 ? (\r\n            <td className='modal__presets-table-cell'>{preset.description}</td>\r\n          ) : null}\r\n          <td\r\n            id={preset._id}\r\n            onClick={(e) => handleLoadPreset(preset._id)}\r\n            className='modal__presets-table-cell modal__presets-table-cell--btn-blue'\r\n          >\r\n            <GetAppIcon />\r\n          </td>\r\n          <td\r\n            onClick={(e) => props.deletePreset(preset._id)}\r\n            className='modal__presets-table-cell modal__presets-table-cell--btn-red'\r\n          >\r\n            <DeleteForeverIcon />\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    return presetTable;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='modal__header modal__header--space-between'>\r\n        Load a Preset\r\n        <button className='modal__close-btn'>\r\n          <HighlightOffIcon onClick={() => props.toggleLoadPresetModal()} />\r\n        </button>\r\n      </div>\r\n      <div className='modal__body'>\r\n        <table className='modal__preset-table'>\r\n          <tbody>\r\n            <tr>\r\n              {width <= 700 ? null : (\r\n                <th className='modal__preset-table-head'>Date</th>\r\n              )}\r\n              <th className='modal__preset-table-head'>Preset Name</th>\r\n              <th className='modal__preset-table-head'>Method</th>\r\n              {width <= 700 ? null : (\r\n                <th className='modal__preset-table-head'>Description</th>\r\n              )}\r\n              <th className='modal__preset-table-head modal__preset-table-head--center'>\r\n                Load\r\n              </th>\r\n              <th className='modal__preset-table-head modal__preset-table-head--center'>\r\n                Delete\r\n              </th>\r\n            </tr>\r\n            {genTable().map((row) => row)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className='modal__bottom-wrapper modal__bottom-wrapper--no-border-top'>\r\n        <button\r\n          className='modal__close modal__close--right'\r\n          onClick={() => props.toggleLoadPresetModal()}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  presets: state.presets,\r\n  toReplaceLetter: state.replace.toReplaceLetter,\r\n  replaceLetter: state.replace.replaceLetter,\r\n  cShift: state.cShift,\r\n  direction: state.direction,\r\n  input: state.input,\r\n  method: state.method,\r\n  foreignChars: state.foreignChars,\r\n  caseformat: state.caseformat,\r\n  alphabet: state.alphabet.alphabet,\r\n  prime1: state.rsa.prime1,\r\n  prime2: state.rsa.prime2,\r\n  keywordVigenere: state.keywordVigenere,\r\n  keywordPlayfair: state.playfair.keywordPlayfair,\r\n  affine_alpha: state.affine.affine_alpha,\r\n  affine_beta: state.affine.affine_beta,\r\n  otpKey: state.otpKey,\r\n  ringLength: state.skytale.ringLength,\r\n  keywordNihilist: state.keywordNihilist,\r\n  cipherNihilist: state.cipherNihilist,\r\n  substitutionAlphabet: state.substitutionAlphabet,\r\n  trifidKey: state.trifid.trifidKey,\r\n  trifid27thLetter: state.trifid.trifid27thLetter,\r\n  trifidGroupSize: state.trifid.trifidGroupSize,\r\n  e: state.rsa.e,\r\n  caseTransformChoice: state.caseTransformChoice,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  deletePreset,\r\n  toggleLoadPresetModal,\r\n  setCshift,\r\n  updateInput,\r\n  toggleCase,\r\n  toggleForeignChars,\r\n  updateAlphabet,\r\n  changeMethod,\r\n  toggleDirection,\r\n  setPrime1,\r\n  setPrime2,\r\n  setRsaE,\r\n  setKeywordVigenere,\r\n  setKeywordPlayfair,\r\n  setOtpKey,\r\n  setRinglength,\r\n  setToReplaceLetter: toReplaceLetter,\r\n  setReplaceLetter: replaceLetter,\r\n  setAffineAlpha,\r\n  setAffineBeta,\r\n  setCipherNihilist,\r\n  setKeywordNihilist,\r\n  setSubstitutionAlphabet,\r\n  setTrifidGroupSize,\r\n  setTrifidKey,\r\n  setTrifid27thLetter,\r\n  setCaseTransformChoice,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(LoadPresetAuthenticated);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Actions\r\nimport { toggleLoadPresetModal } from '../../../actions/toggleLoadPresetModal';\r\nimport { toggleSavePresetModal } from '../../../actions/toggleSavePresetModal';\r\n\r\n//MUI\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\n\r\nconst LoadOrSavePresetUnauthenticated = (props) => {\r\n  const toggleModalOnWrapperClick = (e) => {\r\n    if (e.target.className === 'modal-wrapper') {\r\n      if (props.savePresetModal) {\r\n        props.toggleSavePresetModal();\r\n      } else {\r\n        props.toggleLoadPresetModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleSaveLoadPresetModals = () => {\r\n    if (props.savePresetModal) {\r\n      props.toggleSavePresetModal();\r\n    } else {\r\n      props.toggleLoadPresetModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='modal-wrapper'\r\n      onClick={(e) => toggleModalOnWrapperClick(e)}\r\n    >\r\n      <div className='modal'>\r\n        <div className='modal__header modal__header--space-between'>\r\n          {props.type === 'load' ? 'Load a Preset' : 'Save as Preset'}\r\n          <button className='modal__close-btn'>\r\n            <HighlightOffIcon onClick={() => toggleSaveLoadPresetModals()} />\r\n          </button>\r\n        </div>\r\n        <div className='modal__content modal__content--message'>\r\n          <SentimentVeryDissatisfiedIcon style={{ fontSize: '12rem' }} />\r\n          <h2 className='modal__message'>\r\n            Please Login or Signup to use this feature!\r\n          </h2>\r\n        </div>\r\n        <div className='modal__bottom-wrapper modal__bottom-wrapper--split-buttons'>\r\n          <Link\r\n            className='modal__link'\r\n            onClick={() => toggleSaveLoadPresetModals()}\r\n            to='/Login'\r\n          >\r\n            Login\r\n          </Link>\r\n          <Link\r\n            className='modal__link'\r\n            onClick={() => toggleSaveLoadPresetModals()}\r\n            to='/Signup'\r\n          >\r\n            Signup\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  savePresetModal: state.savePresetModal,\r\n  loadPresetModal: state.loadPresetModal,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  toggleLoadPresetModal,\r\n  toggleSavePresetModal,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(LoadOrSavePresetUnauthenticated);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//Actions\r\nimport { toggleLoadPresetModal } from '../../../actions/toggleLoadPresetModal';\r\n\r\n//Components\r\nimport LoadPresetAuthenticated from './LoadPresetAuthenticated';\r\nimport LoadOrSavePresetUnauthenticated from './LoadOrSavePresetUnauthenticated';\r\n\r\nconst LoadPreset = (props) => {\r\n  const toggleModal = (e) => {\r\n    if (e.target.className === 'modal-wrapper') {\r\n      props.toggleLoadPresetModal();\r\n    }\r\n  };\r\n  if (props.isAuthenticated && props.loadPresetModal) {\r\n    return (\r\n      <div className='modal-wrapper' onClick={(e) => toggleModal(e)}>\r\n        <div className='modal'>\r\n          <LoadPresetAuthenticated />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.loadPresetModal) {\r\n    return <LoadOrSavePresetUnauthenticated type={'load'} />;\r\n  } else return null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  loadPresetModal: state.loadPresetModal,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  toggleLoadPresetModal,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(LoadPreset);\r\n","import { SET_PRESET_DESCRIPTION } from './constants';\r\n\r\nconst setPresetDescription = (description) => ({\r\n  type: SET_PRESET_DESCRIPTION,\r\n  description,\r\n});\r\n\r\nexport default setPresetDescription;\r\n","import { SET_PRESET_NAME } from './constants';\r\n\r\nconst setPresetName = (presetName) => ({\r\n  type: SET_PRESET_NAME,\r\n  presetName,\r\n});\r\n\r\nexport default setPresetName;\r\n","const general = [\r\n  'method',\r\n  'input',\r\n  'direction',\r\n  'foreignChars',\r\n  'caseformat',\r\n  'alphabet',\r\n];\r\n\r\nexport const save_preset_settings = {\r\n  caesar: [...general, 'cShift'],\r\n  casetransform: [...general, 'caseTransformChoice'],\r\n  replace: [...general, 'toReplaceLetter', 'replaceLetter'],\r\n  reverse: [...general],\r\n  rsa: [...general, 'prime1', 'prime2', 'e'],\r\n  trifid: [...general, 'trifidKey', 'trifid27thLetter', 'trifidGroupSize'],\r\n  substitution: [...general, 'substitutionAlphabet'],\r\n  nihilist: [...general, 'keywordNihilist', 'cipherNihilist'],\r\n  skytale: [...general, 'ringLength'],\r\n  otp: [...general, 'otpKey'],\r\n  affine: [...general, 'affine_alpha', 'affine_beta'],\r\n  vigenere: [...general, 'keywordVigenere'],\r\n  playfair: [...general, 'keywordPlayfair'],\r\n  atbash: [...general],\r\n  rot13: [...general],\r\n  morse: [...general],\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\n//Actions\r\nimport setPresetDescription from '../../../actions/setPresetDescription';\r\nimport setPresetName from '../../../actions/setPresetName';\r\nimport { addPreset } from '../../../actions/presets';\r\nimport { toggleSavePresetModal } from '../../../actions/toggleSavePresetModal';\r\n\r\n//Assets\r\nimport { save_preset_settings } from './save_preset_settings';\r\n\r\nconst SavePresetAuthenticated = (props) => {\r\n  const handleSavePreset = (e) => {\r\n    e.preventDefault();\r\n    /**\r\n     * Object to store the settings in\r\n     */\r\n    const presetSettings = {};\r\n\r\n    /**\r\n     * Get the necessary properties as strings\r\n     */\r\n    const methodProperties = save_preset_settings[props.method];\r\n\r\n    /**\r\n     * Put the belonging properties with their respective\r\n     * settings into the presetSettings object.\r\n     */\r\n    for (const property of methodProperties) {\r\n      presetSettings[property] = props[property];\r\n    }\r\n\r\n    /**\r\n     * Finally add the preset\r\n     */\r\n    props.addPreset({\r\n      name: props.presetName,\r\n      description: props.presetDescription,\r\n      preset: {\r\n        ...presetSettings,\r\n      },\r\n    });\r\n\r\n    /**\r\n     * And reset the save-preset input fields + toggle off modal\r\n     */\r\n    props.setPresetName('');\r\n    props.setPresetDescription('');\r\n    props.toggleSavePresetModal();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className='modal__header modal__header--space-between'>\r\n        Save as Preset\r\n        <button className='modal__close-btn'>\r\n          <HighlightOffIcon onClick={() => props.toggleSavePresetModal()} />\r\n        </button>\r\n      </div>\r\n      <div className='modal__body'>\r\n        <form\r\n          onSubmit={(e) => {\r\n            handleSavePreset(e);\r\n          }}\r\n        >\r\n          <table className='modal__preset-table'>\r\n            <tbody>\r\n              <tr>\r\n                <th className='modal__preset-table-head'>Preset Name</th>\r\n                <th className='modal__preset-table-head'>Description</th>\r\n                <th className='modal__preset-table-head modal__preset-table-head--center'>\r\n                  Save\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <td className='modal__presets-table-cell'>\r\n                  <input\r\n                    className='modal__preset-table-input'\r\n                    required\r\n                    value={props.presetName}\r\n                    onChange={(e) => props.setPresetName(e.target.value)}\r\n                    type='text'\r\n                    name='name'\r\n                    placeholder='Preset Name'\r\n                  />\r\n                </td>\r\n                <td className='modal__presets-table-cell'>\r\n                  <input\r\n                    className='modal__preset-table-input'\r\n                    required\r\n                    value={props.presetDescription}\r\n                    onChange={(e) => props.setPresetDescription(e.target.value)}\r\n                    type='text'\r\n                    name='description'\r\n                    placeholder='Description'\r\n                  />\r\n                </td>\r\n                <td className='modal__presets-table-cell modal__presets-table-cell--center'>\r\n                  <button\r\n                    className='modal__button modal__button--blue'\r\n                    type='submit'\r\n                  >\r\n                    <GetAppIcon />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n      </div>\r\n      <div className='modal__bottom-wrapper modal__bottom-wrapper--no-border-top'>\r\n        <button\r\n          className='modal__close modal__close--right'\r\n          onClick={() => props.toggleSavePresetModal()}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  presetsModal: state.presetsModal.modalOpen,\r\n  presetDescription: state.presetDescription,\r\n  presetName: state.presetName,\r\n  toReplaceLetter: state.replace.toReplaceLetter,\r\n  replaceLetter: state.replace.replaceLetter,\r\n  cShift: state.cShift,\r\n  direction: state.direction,\r\n  input: state.input,\r\n  method: state.method,\r\n  foreignChars: state.foreignChars,\r\n  caseformat: state.caseformat,\r\n  alphabet: state.alphabet.alphabet,\r\n  prime1: state.rsa.prime1,\r\n  prime2: state.rsa.prime2,\r\n  keywordVigenere: state.keywordVigenere,\r\n  keywordPlayfair: state.playfair.keywordPlayfair,\r\n  affine_alpha: state.affine.affine_alpha,\r\n  affine_beta: state.affine.affine_beta,\r\n  otpKey: state.otpKey,\r\n  playSquare: state.playSquare,\r\n  ringLength: state.skytale.ringLength,\r\n  keywordNihilist: state.keywordNihilist,\r\n  cipherNihilist: state.cipherNihilist,\r\n  substitutionAlphabet: state.substitutionAlphabet,\r\n  trifidKey: state.trifid.trifidKey,\r\n  trifid27thLetter: state.trifid.trifid27thLetter,\r\n  trifidGroupSize: state.trifid.trifidGroupSize,\r\n  e: state.rsa.e,\r\n  caseTransformChoice: state.caseTransformChoice,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setPresetName,\r\n  toggleSavePresetModal,\r\n  setPresetDescription,\r\n  addPreset,\r\n};\r\n\r\nSavePresetAuthenticated.propTypes = {\r\n  setPresetName: PropTypes.func.isRequired,\r\n  toggleSavePresetModal: PropTypes.func.isRequired,\r\n  setPresetDescription: PropTypes.func.isRequired,\r\n  addPreset: PropTypes.func.isRequired,\r\n  presetsModal: PropTypes.bool.isRequired,\r\n  presetDescription: PropTypes.string,\r\n  presetName: PropTypes.string,\r\n  toReplaceLetter: PropTypes.string,\r\n  replaceLetter: PropTypes.string,\r\n  cShift: PropTypes.number,\r\n  direction: PropTypes.string.isRequired,\r\n  input: PropTypes.string,\r\n  method: PropTypes.string.isRequired,\r\n  foreignChars: PropTypes.string.isRequired,\r\n  caseformat: PropTypes.string.isRequired,\r\n  alphabet: PropTypes.string.isRequired,\r\n  prime1: PropTypes.string,\r\n  prime2: PropTypes.string,\r\n  keywordVigenere: PropTypes.string,\r\n  keywordPlayfair: PropTypes.string,\r\n  affine_alpha: PropTypes.number,\r\n  affine_beta: PropTypes.number,\r\n  otpKey: PropTypes.string,\r\n  playSquare: PropTypes.arrayOf(PropTypes.string),\r\n  ringLength: PropTypes.number,\r\n  keywordNihilist: PropTypes.string,\r\n  cipherNihilist: PropTypes.string,\r\n  substitutionAlphabet: PropTypes.object,\r\n  trifidKey: PropTypes.string,\r\n  trifid27thLetter: PropTypes.string,\r\n  trifidGroupSize: PropTypes.number,\r\n  e: PropTypes.string,\r\n  caseTransformChoice: PropTypes.string,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(SavePresetAuthenticated);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//Actions\r\nimport { toggleSavePresetModal } from '../../../actions/toggleSavePresetModal';\r\n\r\n//Components\r\nimport SavePresetAuthenticated from './SavePresetAuthenticated';\r\nimport LoadOrSavePresetUnauthenticated from './LoadOrSavePresetUnauthenticated';\r\n\r\nconst SavePreset = (props) => {\r\n  const toggleModal = (e) => {\r\n    if (e.target.className === 'modal-wrapper') {\r\n      props.toggleSavePresetModal();\r\n    }\r\n  };\r\n  if (props.isAuthenticated && props.savePresetModal) {\r\n    return (\r\n      <div className='modal-wrapper' onClick={(e) => toggleModal(e)}>\r\n        <div className='modal'>\r\n          <SavePresetAuthenticated />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.savePresetModal) {\r\n    return <LoadOrSavePresetUnauthenticated type={'save'} />;\r\n  } else return null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  savePresetModal: state.savePresetModal,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  toggleSavePresetModal,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(SavePreset);\r\n","const math = (() => {\r\n  let alphabet = 'abcdefghijklmnopqrstuvwxyz';\r\n\r\n  //Get rid of everything besides pure characters\r\n  //Return lowercase string\r\n  const modInverse = (a, b) => {\r\n    a %= b;\r\n    for (var x = 1; x < b; x++) {\r\n      if ((a * x) % b === 1) {\r\n        return x;\r\n      }\r\n    }\r\n  };\r\n\r\n  const transformToLowerCaseChars = (input) => {\r\n    input = input.toString();\r\n    if (!input || input.length === 0) return '';\r\n    const inputArr = input.toLowerCase().split('');\r\n    const cleanOutput = inputArr.filter(\r\n      (char) => alphabet.indexOf(char) !== -1\r\n    );\r\n    return cleanOutput;\r\n  };\r\n\r\n  const cleanInput = (input, blankSpaces, caseSensitive, alphab) => {\r\n    input = input.toString();\r\n    if (!input || input.length === 0) return null;\r\n    const inputArr = input.toLowerCase().split('');\r\n\r\n    if (!alphab) alphab = alphabet;\r\n\r\n    let cleanOutput;\r\n\r\n    if (blankSpaces) {\r\n      if (caseSensitive) {\r\n        cleanOutput = input\r\n          .split('')\r\n          .filter(\r\n            (char) => alphab.indexOf(char.toLowerCase()) !== -1 || char === ' '\r\n          );\r\n      } else if (!caseSensitive) {\r\n        cleanOutput = inputArr.filter(\r\n          (char) => alphab.indexOf(char) !== -1 || char === ' '\r\n        );\r\n      }\r\n    } else if (!blankSpaces) {\r\n      if (caseSensitive) {\r\n        cleanOutput = input\r\n          .split('')\r\n          .filter((char) => alphab.indexOf(char.toLowerCase()) !== -1);\r\n      } else if (!caseSensitive) {\r\n        cleanOutput = inputArr.filter((char) => alphab.indexOf(char) !== -1);\r\n      }\r\n    }\r\n\r\n    return cleanOutput.join('');\r\n  };\r\n\r\n  //take raw input and lowercase/nosign- output\r\n  //return a string without signs but with correct case format\r\n\r\n  const restoreCase = (input, output) => {\r\n    input = input.split('');\r\n    output = output.split('');\r\n\r\n    let restoredCaseArr = [];\r\n\r\n    for (let i = 0; i < input.length; i++) {\r\n      if (output[i] && input[i]) {\r\n        input[i].toLowerCase() === input[i]\r\n          ? restoredCaseArr.push(output[i].toLowerCase())\r\n          : restoredCaseArr.push(output[i].toUpperCase());\r\n      }\r\n    }\r\n\r\n    return restoredCaseArr.join('');\r\n  };\r\n\r\n  // take raw input and casesensitive output\r\n  // return a string with signs and correct case format and blank spaces\r\n\r\n  const restoreForeignChars = (input, output) => {\r\n    input = String(input);\r\n    output = String(output);\r\n\r\n    let index = 0;\r\n    let restoredForeignCharsArr = [];\r\n\r\n    for (let character of input) {\r\n      if (alphabet.indexOf(character.toLowerCase()) !== -1) {\r\n        restoredForeignCharsArr.push(output[index]);\r\n        index++;\r\n      } else if (alphabet.indexOf(character.toLowerCase()) === -1) {\r\n        restoredForeignCharsArr.push(character);\r\n      }\r\n    }\r\n\r\n    return restoredForeignCharsArr.join('');\r\n  };\r\n\r\n  const transformCaseAndChars = (\r\n    userInput,\r\n    rawOutput,\r\n    caseFormat,\r\n    includeChars\r\n  ) => {\r\n    let cleanOutput;\r\n    if (caseFormat === 'maintain') {\r\n      if (includeChars === 'include') {\r\n        cleanOutput = math.restoreForeignChars(userInput, rawOutput);\r\n        cleanOutput = math.restoreCase(userInput, cleanOutput);\r\n        return cleanOutput;\r\n      } else if (includeChars === 'ignore') {\r\n        cleanOutput = math.restoreForeignChars(userInput, rawOutput);\r\n        cleanOutput = math.restoreCase(userInput, cleanOutput);\r\n        cleanOutput = math.cleanInput(cleanOutput, true, true);\r\n        return cleanOutput;\r\n      }\r\n    } else if (caseFormat === 'ignore') {\r\n      if (includeChars === 'include') {\r\n        cleanOutput = math.restoreForeignChars(userInput, rawOutput);\r\n        cleanOutput = math.restoreCase(userInput, cleanOutput);\r\n        return cleanOutput.toLowerCase();\r\n      } else if (includeChars === 'ignore') {\r\n        cleanOutput = math.restoreForeignChars(userInput, rawOutput);\r\n        cleanOutput = math.restoreCase(userInput, cleanOutput);\r\n        cleanOutput = math.cleanInput(cleanOutput, true, true);\r\n        if (cleanOutput === undefined || cleanOutput === null) return '';\r\n        return cleanOutput.toLowerCase();\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    transformCaseAndChars: transformCaseAndChars,\r\n    cleanInput: cleanInput,\r\n    restoreCase: restoreCase,\r\n    restoreForeignChars: restoreForeignChars,\r\n    modInverse: modInverse,\r\n    transformToLowerCaseChars: transformToLowerCaseChars,\r\n  };\r\n})();\r\n\r\nexport default math;\r\n","import math from '../../math/Math';\r\n\r\nconst caesar = (() => {\r\n  //Setup all variables\r\n  let userInput,\r\n    saltInput,\r\n    alphabet,\r\n    direction,\r\n    wordbook,\r\n    includeChars,\r\n    caseFormat;\r\n\r\n  const setUserInput = (input) => {\r\n    userInput = String(input);\r\n  };\r\n\r\n  const setSaltInput = (input) => {\r\n    saltInput = Number(input);\r\n  };\r\n\r\n  const setCaseFormat = (input) => {\r\n    caseFormat = input;\r\n  };\r\n\r\n  const setAlphabet = (input) => {\r\n    alphabet = input.split('');\r\n  };\r\n\r\n  const setForeignChars = (input) => {\r\n    includeChars = input;\r\n  };\r\n\r\n  const setDirection = (input) => {\r\n    direction = input;\r\n  };\r\n\r\n  const setWordbook = (words) => {\r\n    wordbook = words;\r\n  };\r\n\r\n  const setAll = (\r\n    wordbook,\r\n    input,\r\n    alphabet,\r\n    cShift,\r\n    direction,\r\n    foreignChars,\r\n    caseFormat\r\n  ) => {\r\n    setWordbook(wordbook);\r\n    setUserInput(input);\r\n    setAlphabet(alphabet);\r\n    setSaltInput(cShift);\r\n    setDirection(direction);\r\n    setForeignChars(foreignChars);\r\n    setCaseFormat(caseFormat);\r\n  };\r\n\r\n  /**\r\n   * Standart Caesar encryption\r\n   */\r\n  const charIndex = (char) => {\r\n    const index = alphabet.indexOf(char);\r\n    let alLength = alphabet.length;\r\n\r\n    if (direction === 'encrypt') {\r\n      if (index + saltInput < alLength) {\r\n        return index + saltInput;\r\n      } else {\r\n        return index + saltInput - alLength;\r\n      }\r\n    } else {\r\n      if (index - saltInput >= 0) {\r\n        return index - saltInput;\r\n      } else {\r\n        return index - saltInput + alLength;\r\n      }\r\n    }\r\n  };\r\n\r\n  const readChar = () => {\r\n    if (!userInput) return;\r\n    const decryptedChars = [];\r\n\r\n    let cleanInput = math.cleanInput(userInput, false, false, alphabet);\r\n\r\n    for (let char of cleanInput) {\r\n      let charLower = char.toLowerCase();\r\n      let index = charIndex(charLower);\r\n      let decryptedChar = alphabet[index];\r\n      decryptedChars.push(decryptedChar);\r\n    }\r\n\r\n    return decryptedChars.join('');\r\n  };\r\n\r\n  /**\r\n   * Cracking Functionality\r\n   */\r\n  const readCharCrack = (textinput, salt) => {\r\n    const decryptedChars = [];\r\n    for (const char of textinput) {\r\n      const charLower = char.toLowerCase();\r\n      if (alphabet.includes(charLower)) {\r\n        const position = charIndexCrack(charLower, salt);\r\n        if (charLower === char) {\r\n          decryptedChars.push(alphabet[position]);\r\n        } else {\r\n          decryptedChars.push(alphabet[position].toUpperCase());\r\n        }\r\n      } else decryptedChars.push(char);\r\n    }\r\n    return decryptedChars.join('');\r\n  };\r\n\r\n  const charIndexCrack = (char, saltInput) => {\r\n    const index = alphabet.indexOf(char);\r\n    if (index + saltInput < alphabet.length) {\r\n      return index + saltInput;\r\n    } else {\r\n      return index + saltInput - alphabet.length;\r\n    }\r\n  };\r\n\r\n  const createAllOutputs = () => {\r\n    let arr = [];\r\n    const textInput = math.cleanInput(userInput, true, false);\r\n    for (let i = 0; i < 26; i++) {\r\n      let salt = i;\r\n      const textoutput = readCharCrack(textInput, salt);\r\n      arr.push([textoutput.split(' '), i]);\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  const handleCracked = (highest, shiftV) => {\r\n    if (highest === 0)\r\n      return `Weird text you got there! This tool can only crack english texts that are encrypted with the caesar cipher! Your input: \"${userInput}\"`;\r\n\r\n    return encrypt(\r\n      null,\r\n      userInput,\r\n      alphabet.join(''),\r\n      shiftV,\r\n      'decrypt',\r\n      caseFormat,\r\n      includeChars\r\n    );\r\n  };\r\n\r\n  const countCombinations = (possibleCombinations) => {\r\n    const keys = Object.keys(possibleCombinations);\r\n    let highest = 0;\r\n    let shiftV;\r\n    for (const key of keys) {\r\n      if (possibleCombinations[key].count > highest) {\r\n        highest = possibleCombinations[key].count;\r\n        shiftV = 26 - possibleCombinations[key].shiftV;\r\n      }\r\n    }\r\n\r\n    return handleCracked(highest, shiftV);\r\n  };\r\n\r\n  const findCombinations = () => {\r\n    if (!userInput) return;\r\n    let allOutputs = createAllOutputs();\r\n    let possibleCombinations = {};\r\n    let counter = 0;\r\n    // Brute Force lookup all possibilities against the english dictionary\r\n    for (let output of allOutputs) {\r\n      possibleCombinations[counter] = [];\r\n      possibleCombinations[counter].count = 0;\r\n      for (let word of output[0]) {\r\n        possibleCombinations[counter].shiftV = output[1];\r\n        if (wordbook[word]) {\r\n          possibleCombinations[counter].count++;\r\n        }\r\n      }\r\n      counter++;\r\n    }\r\n    return countCombinations(possibleCombinations);\r\n  };\r\n\r\n  const checkIfSigns = () => {\r\n    return alphabet.length > 26 ? false : true;\r\n  };\r\n\r\n  const encrypt = (\r\n    wordbook,\r\n    input,\r\n    alphabet,\r\n    cShift,\r\n    direction,\r\n    caseFormat,\r\n    foreignChars\r\n  ) => {\r\n    setAll(\r\n      wordbook,\r\n      input,\r\n      alphabet,\r\n      cShift,\r\n      direction,\r\n      foreignChars,\r\n      caseFormat\r\n    );\r\n    if (direction !== 'crack') {\r\n      const rawOutput = readChar();\r\n      if (checkIfSigns()) {\r\n        return math.transformCaseAndChars(\r\n          userInput,\r\n          rawOutput,\r\n          caseFormat,\r\n          includeChars\r\n        );\r\n      } else return rawOutput;\r\n    } else {\r\n      if (wordbook !== 'FAIL') {\r\n        return findCombinations();\r\n      } else return `WORDBOOK COULDN'T LOAD`;\r\n    }\r\n  };\r\n\r\n  return {\r\n    encrypt: encrypt,\r\n  };\r\n})();\r\n\r\nexport default caesar;\r\n","import math from '../../math/Math';\r\n\r\nconst affine = (() => {\r\n  //Setup all variables\r\n\r\n  let userInput, alphabet, includeChars, alpha, beta, correctedInput;\r\n\r\n  const setUserInput = (input) => {\r\n    userInput = input.toString();\r\n    const cleanInput = math.transformToLowerCaseChars(userInput);\r\n    correctedInput = cleanInput.join('');\r\n  };\r\n\r\n  const setAlpha = (input) => {\r\n    alpha = Number(input);\r\n  };\r\n\r\n  const setBeta = (input) => {\r\n    beta = Number(input);\r\n  };\r\n\r\n  const setAlphabet = (input) => {\r\n    alphabet = input.split('');\r\n  };\r\n\r\n  const setForeignChars = (input) => {\r\n    includeChars = input;\r\n  };\r\n\r\n  // Modulo to account for wrong js method\r\n  const modulo = (a, b) => {\r\n    return ((a % b) + b) % b;\r\n  };\r\n\r\n  // Modular inverse\r\n  const modInverse = (a, b) => {\r\n    a %= b;\r\n    for (var x = 1; x < b; x++) {\r\n      if ((a * x) % b === 1) {\r\n        return x;\r\n      }\r\n    }\r\n  };\r\n\r\n  const setAll = (alphabet, input, affineAlpha, affineBeta, foreignChars) => {\r\n    setAlphabet(alphabet);\r\n    setUserInput(input);\r\n    setAlpha(affineAlpha);\r\n    setBeta(affineBeta);\r\n    setForeignChars(foreignChars);\r\n  };\r\n\r\n  const encrypt = () => {\r\n    const arr = [];\r\n    for (let i = 0; i < correctedInput.length; i++) {\r\n      const char = correctedInput[i];\r\n      if (alphabet.indexOf(char) !== -1) {\r\n        const numberId =\r\n          (alpha * alphabet.indexOf(char) + beta) % alphabet.length;\r\n        const character = alphabet[numberId];\r\n        if (character === undefined) {\r\n          arr.push(char);\r\n        } else arr.push(character);\r\n      } else arr.push(correctedInput[i]);\r\n    }\r\n    return arr.join('');\r\n  };\r\n\r\n  const decrypt = () => {\r\n    const arr = [];\r\n    const inverseAlpha = modInverse(alpha, alphabet.length);\r\n    for (let i = 0; i < correctedInput.length; i++) {\r\n      const char = correctedInput[i];\r\n      if (alphabet.indexOf(char) !== -1) {\r\n        const indexChar = alphabet.indexOf(char);\r\n        const resultIndex = modulo(\r\n          inverseAlpha * (indexChar - beta),\r\n          alphabet.length\r\n        );\r\n        if (alphabet[resultIndex]) {\r\n          arr.push(alphabet[resultIndex]);\r\n        } else {\r\n          arr.push(char);\r\n        }\r\n      } else {\r\n        arr.push(char);\r\n      }\r\n    }\r\n    return arr.join('');\r\n  };\r\n\r\n  const transform = (\r\n    alphabet,\r\n    input,\r\n    affineAlpha,\r\n    affineBeta,\r\n    direction,\r\n    foreignChars,\r\n    caseFormat\r\n  ) => {\r\n    setAll(alphabet, input, affineAlpha, affineBeta, foreignChars);\r\n\r\n    const rawOutput = direction === 'encrypt' ? encrypt() : decrypt();\r\n\r\n    return math.transformCaseAndChars(\r\n      userInput,\r\n      rawOutput,\r\n      caseFormat,\r\n      includeChars\r\n    );\r\n  };\r\n\r\n  return {\r\n    encrypt: transform,\r\n  };\r\n})();\r\n\r\nexport default affine;\r\n","const Nihilist = (() => {\r\n  //Setup all variables\r\n\r\n  let userInput, alphabet, nihilistRunningKey, nihilistPlainNumbers;\r\n\r\n  const setUserInput = (input) => {\r\n    userInput = String(input);\r\n  };\r\n\r\n  const setAlphabet = (input) => {\r\n    alphabet = input;\r\n  };\r\n\r\n  let keyphrase;\r\n  const setKeyPhrase = (input) => {\r\n    keyphrase = input;\r\n  };\r\n\r\n  let cipherWord;\r\n  const setCipherWord = (input) => {\r\n    cipherWord = input;\r\n  };\r\n\r\n  const getNihilistRunningKey = () => {\r\n    return nihilistRunningKey;\r\n  };\r\n\r\n  const getNihilistPlainNumbers = () => {\r\n    return nihilistPlainNumbers;\r\n  };\r\n\r\n  const polybiusSquare = () => {\r\n    if (typeof keyphrase === 'string') keyphrase = keyphrase.split('');\r\n    const arr = [];\r\n    for (let i = 0; i < keyphrase.length; i++) {\r\n      if (\r\n        alphabet.indexOf(keyphrase[i].toLowerCase()) !== -1 &&\r\n        !arr.includes(keyphrase[i].toLowerCase()) &&\r\n        keyphrase[i].toLowerCase() !== 'j'\r\n      ) {\r\n        arr.push(keyphrase[i].toLowerCase());\r\n      }\r\n    }\r\n    for (let i = 0; i < alphabet.length; i++) {\r\n      if (!arr.includes(alphabet[i]) && alphabet[i] !== 'j') {\r\n        arr.push(alphabet[i]);\r\n      }\r\n    }\r\n    const square = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      square.push([]);\r\n      for (let j = 0; j < 5; j++) {\r\n        square[i].push(arr[i * 5 + j]);\r\n      }\r\n    }\r\n    return square;\r\n  };\r\n\r\n  const getNumberForOne = (letter) => {\r\n    let num1,\r\n      num2,\r\n      i = 0;\r\n    let squareArr = polybiusSquare();\r\n    for (let element of squareArr) {\r\n      if (element.includes(letter.toLowerCase())) {\r\n        num1 = i + 1;\r\n        num2 = element.indexOf(letter.toLowerCase()) + 1;\r\n        break;\r\n      } else i++;\r\n    }\r\n    return `${num1}${num2}`;\r\n  };\r\n\r\n  const getNumbersText = (text) => {\r\n    let array = [];\r\n    for (let i = 0; i < text.length; i++) {\r\n      if (alphabet.indexOf(text[i].toLowerCase()) !== -1) {\r\n        if (isNaN(getNumberForOne(text[i]))) array.push(getNumberForOne('i'));\r\n        else array.push(getNumberForOne(text[i]));\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const getNumbers = () => {\r\n    let plainArray = getNumbersText(userInput);\r\n    let keyArray = getNumbersText(cipherWord);\r\n    return [plainArray, keyArray];\r\n  };\r\n\r\n  const encrypt = () => {\r\n    let numberArray = getNumbers();\r\n    let cleanKeyArr = [];\r\n    let ind = 0;\r\n    if (numberArray[0].length > numberArray[1].length) {\r\n      for (let i = 0; i < numberArray[0].length; i++) {\r\n        if (ind < numberArray[1].length - 1) {\r\n          cleanKeyArr.push(numberArray[1][ind]);\r\n          ind++;\r\n        } else {\r\n          cleanKeyArr.push(numberArray[1][ind]);\r\n          ind = 0;\r\n        }\r\n      }\r\n    } else cleanKeyArr = numberArray[1];\r\n\r\n    nihilistRunningKey = cleanKeyArr;\r\n    nihilistPlainNumbers = numberArray[0];\r\n\r\n    let out = [];\r\n    for (let i = 0; i < numberArray[0].length; i++) {\r\n      out.push(Number(numberArray[0][i]) + Number(cleanKeyArr[i]));\r\n    }\r\n\r\n    return [\r\n      out.join(' '),\r\n      polybiusSquare(),\r\n      getNihilistRunningKey(),\r\n      getNihilistPlainNumbers(),\r\n    ];\r\n  };\r\n\r\n  const subtractKeyFromPlaintext = (inputArray, cleanKeyArr) => {\r\n    let outputNumbers = [];\r\n    for (let i = 0; i < inputArray.length; i++) {\r\n      outputNumbers.push(inputArray[i] - cleanKeyArr[i]);\r\n    }\r\n    return outputNumbers;\r\n  };\r\n\r\n  const transformNumbersToText = (numbers) => {\r\n    const square = polybiusSquare();\r\n\r\n    const plainTextArray = [];\r\n    for (let number of numbers) {\r\n      let numElem = String(number).split('');\r\n      let letter = square[Number(numElem[0]) - 1][Number(numElem[1]) - 1];\r\n      plainTextArray.push(letter);\r\n    }\r\n    return plainTextArray;\r\n  };\r\n\r\n  const decrypt = () => {\r\n    let numberArray = getNumbers()[1];\r\n    let inputArray = userInput.split(' ');\r\n    if (inputArray[0].length !== 2) return '';\r\n\r\n    let cleanKeyArr = [];\r\n    let ind = 0;\r\n\r\n    if (inputArray.length > numberArray.length) {\r\n      for (let i = 0; i < inputArray.length; i++) {\r\n        if (ind < numberArray.length - 1) {\r\n          cleanKeyArr.push(numberArray[ind]);\r\n          ind++;\r\n        } else {\r\n          cleanKeyArr.push(numberArray[ind]);\r\n          ind = 0;\r\n        }\r\n      }\r\n    } else cleanKeyArr = numberArray;\r\n\r\n    let plainNumbers = subtractKeyFromPlaintext(inputArray, cleanKeyArr);\r\n    let outputClearText = transformNumbersToText(plainNumbers);\r\n\r\n    return [\r\n      outputClearText.join(''),\r\n      polybiusSquare(),\r\n      getNihilistRunningKey(),\r\n      getNihilistPlainNumbers(),\r\n    ];\r\n  };\r\n\r\n  const transformText = (input, alphabet, direction, keyword, cipherWord) => {\r\n    setAll(input, alphabet, keyword, cipherWord);\r\n    if (cipherWord.length === 0) return 'Please enter a Keyphrase';\r\n    for (let i = 0; i < alphabet.length; i++) {\r\n      if (isNaN(Number(userInput[i])) && direction === 'decrypt') {\r\n        return 'Not a valid input';\r\n      }\r\n    }\r\n    return direction === 'encrypt' ? encrypt() : decrypt();\r\n  };\r\n\r\n  const setAll = (input, alphabet, keyword, cipherWord) => {\r\n    setUserInput(input);\r\n    setAlphabet(alphabet);\r\n    setKeyPhrase(keyword);\r\n    setCipherWord(cipherWord);\r\n  };\r\n\r\n  return {\r\n    setAll: setAll,\r\n    encrypt: transformText,\r\n    getSquare: polybiusSquare,\r\n    getNihilistRunningKey,\r\n    getNihilistPlainNumbers,\r\n  };\r\n})();\r\n\r\nexport default Nihilist;\r\n","const vigenere = (() => {\r\n  //Setup all variables\r\n\r\n  let userInput, alphabet, direction, includeChars, keywordVigenere;\r\n\r\n  const setUserInput = (input) => {\r\n    userInput = String(input);\r\n  };\r\n\r\n  const setAlphabet = (input) => {\r\n    alphabet = input.split('');\r\n    alphabet = [...new Set(alphabet)].join('');\r\n    alphabet = alphabet.replace(/[^0-9a-zA-Z]/gi, '');\r\n  };\r\n\r\n  const setForeignChars = (input) => {\r\n    includeChars = input;\r\n  };\r\n\r\n  const setDirection = (input) => {\r\n    direction = input;\r\n  };\r\n\r\n  const setKeyWord = (input) => {\r\n    keywordVigenere = input.toLowerCase();\r\n  };\r\n\r\n  const createSaltArray = (salt, textInput) => {\r\n    const saltArray = [];\r\n    let i = 0;\r\n    while (textInput.length >= saltArray.length) {\r\n      if (i === salt.length) i = 0;\r\n      saltArray.push(salt[i]);\r\n      i++;\r\n    }\r\n    return saltArray;\r\n  };\r\n\r\n  const alphabetFromCharacter = (char) => {\r\n    let index = alphabet.indexOf(char);\r\n    const alphabetVig = [];\r\n    while (alphabetVig.length < 26) {\r\n      alphabetVig.push(alphabet[index]);\r\n      if (index === 25) {\r\n        index = 0;\r\n      } else if (index < 25) index++;\r\n    }\r\n    return alphabetVig;\r\n  };\r\n\r\n  const encryptCharacterVigenere = (textInput, salt, index) => {\r\n    const char = textInput[index];\r\n    const saltLetter = createSaltArray(salt, textInput)[index];\r\n    const vigalphabet = alphabetFromCharacter(saltLetter);\r\n    const encryptedCharacter = vigalphabet[alphabet.indexOf(char)];\r\n    return encryptedCharacter;\r\n  };\r\n\r\n  const decryptCharacterVigenere = (textInput, salt, index) => {\r\n    const char = textInput[index];\r\n    const saltLetter = createSaltArray(salt, textInput)[index];\r\n    const vigalphabet = alphabetFromCharacter(saltLetter);\r\n    return alphabet[vigalphabet.indexOf(char)];\r\n  };\r\n\r\n  const transformText = (\r\n    input,\r\n    alphabet,\r\n    direction,\r\n    foreignChars,\r\n    caseFormat,\r\n    keyword\r\n  ) => {\r\n    if (keyword.length === 0) {\r\n      return 'Please enter a keyword';\r\n    }\r\n\r\n    setAll(input, alphabet, direction, foreignChars, keyword);\r\n    const textinputCleaned = removeSigns(userInput.toLowerCase(), false);\r\n    let textoutput = readChar(textinputCleaned, keywordVigenere);\r\n\r\n    textoutput = addSigns(textoutput, userInput);\r\n    if (caseFormat === 'ignore') {\r\n      if (includeChars === 'include') {\r\n        return textoutput;\r\n      } else if (includeChars === 'ignore') {\r\n        return removeSigns(textoutput, true);\r\n      }\r\n    } else if (caseFormat === 'maintain') {\r\n      if (includeChars === 'include') {\r\n        return caseTransform(userInput, textoutput);\r\n      } else if (includeChars === 'ignore') {\r\n        return removeSigns(caseTransform(userInput, textoutput), true);\r\n      }\r\n    }\r\n\r\n    //return caseTransform(user, textoutput)\r\n  };\r\n\r\n  const caseTransform = (textinput, textoutput) => {\r\n    let output = [];\r\n    for (let i = 0; i < textinput.length; i++) {\r\n      if (textoutput[i]) {\r\n        textinput[i].toUpperCase() === textinput[i]\r\n          ? output.push(textoutput[i].toUpperCase())\r\n          : output.push(textoutput[i].toLowerCase());\r\n      }\r\n    }\r\n    return output.join('');\r\n  };\r\n\r\n  const removeSigns = (textinput, spaces) => {\r\n    // spaces false = remove all signs\r\n    // spaces true = leave the spacing\r\n    let output = [];\r\n    for (let char of textinput) {\r\n      if (spaces === false) {\r\n        if (alphabet.indexOf(char.toLowerCase()) !== -1) {\r\n          output.push(char);\r\n        }\r\n      } else if (spaces === true) {\r\n        if (alphabet.indexOf(char.toLowerCase()) !== -1 || char === ' ') {\r\n          output.push(char);\r\n        }\r\n      }\r\n    }\r\n    return output.join('');\r\n  };\r\n\r\n  const addSigns = (textoutput, textinput) => {\r\n    textinput = textinput.toLowerCase();\r\n    let output = [];\r\n    let i = 0;\r\n    for (let element of textinput) {\r\n      if (alphabet.indexOf(element) === -1) {\r\n        output.push(element);\r\n      } else {\r\n        output.push(textoutput[i]);\r\n        i++;\r\n      }\r\n    }\r\n    return output.join('');\r\n  };\r\n\r\n  const readChar = (textinput, salt) => {\r\n    let text = [];\r\n    for (let i = 0; i < textinput.length; i++) {\r\n      if (alphabet.indexOf(textinput[i]) === -1) {\r\n        text.push(textinput[i]);\r\n      } else {\r\n        if (direction === 'encrypt') {\r\n          text.push(encryptCharacterVigenere(textinput, salt, i));\r\n        } else {\r\n          text.push(decryptCharacterVigenere(textinput, salt, i));\r\n        }\r\n      }\r\n    }\r\n    return text;\r\n  };\r\n\r\n  const setAll = (input, alphabet, direction, foreignChars, keyword) => {\r\n    setUserInput(input);\r\n    setAlphabet(alphabet);\r\n    setDirection(direction);\r\n    setForeignChars(foreignChars);\r\n    setKeyWord(keyword);\r\n  };\r\n\r\n  return {\r\n    setAll: setAll,\r\n    encrypt: transformText,\r\n  };\r\n})();\r\n\r\nexport default vigenere;\r\n","const Playfair = (() => {\r\n  //Setup all variables\r\n\r\n  let userInput, alphabet, direction, keyphrase;\r\n  let replaceLetter = 'x';\r\n  let missingLetter = 'j';\r\n  let playSquare;\r\n\r\n  const getSquare = () => playSquare;\r\n\r\n  const setUserInput = (input) => {\r\n    userInput = String(input);\r\n  };\r\n\r\n  const setAlphabet = (input) => {\r\n    alphabet = input.split('');\r\n  };\r\n\r\n  const setDirection = (input) => {\r\n    direction = input;\r\n  };\r\n\r\n  const setKeyPhrase = (input) => {\r\n    keyphrase = input;\r\n  };\r\n\r\n  const createPairsOfFive = (alphabet) => {\r\n    // Sort the generated Alphabet into 5 pairs of 5 characters each\r\n\r\n    const fiveElementPairs = [];\r\n    let pair = [];\r\n\r\n    for (let i = 0; i <= alphabet.length; i++) {\r\n      if (i === 0 || i % 5 !== 0) {\r\n        pair.push(alphabet[i]);\r\n      } else if (pair[0]) {\r\n        fiveElementPairs.push(pair);\r\n        pair = [];\r\n        pair.push(alphabet[i]);\r\n      }\r\n    }\r\n    return fiveElementPairs;\r\n  };\r\n\r\n  const rowColumnEncrypt = (element, charPair) => {\r\n    // Get the next letter in the row/column or start from beginning of row/column and encrypt with index + 1\r\n\r\n    let chars = [];\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n      const index = element.indexOf(charPair[i]);\r\n      if (index === 4) {\r\n        if (direction === 'encrypt') {\r\n          chars.push(element[0]);\r\n        } else {\r\n          chars.push(element[3]);\r\n        }\r\n      } else {\r\n        if (direction === 'decrypt') {\r\n          let newIndex = index - 1;\r\n          if (newIndex < 0) newIndex = 4;\r\n          chars.push(element[newIndex]);\r\n        } else {\r\n          chars.push(element[index + 1]);\r\n        }\r\n      }\r\n    }\r\n    return chars;\r\n  };\r\n\r\n  const methodFinder = (alphabet, charPair) => {\r\n    const fiveElementPairs = createPairsOfFive(alphabet);\r\n\r\n    // Find the method\r\n\r\n    // Is the Method a row combination ?\r\n\r\n    for (let element of fiveElementPairs) {\r\n      if (\r\n        element.indexOf(charPair[0]) !== -1 &&\r\n        element.indexOf(charPair[1]) !== -1\r\n      ) {\r\n        //Encrypt and return\r\n        return rowColumnEncrypt(element, charPair);\r\n      }\r\n    }\r\n\r\n    // Is the Method a column combination ?\r\n    // Convert all columns to rows for ease of use\r\n\r\n    const fiveElementPairsReverse = [];\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      let columnArr = [];\r\n      for (let j = 0; j < 5; j++) {\r\n        columnArr.push(fiveElementPairs[j][i]);\r\n      }\r\n      fiveElementPairsReverse.push(columnArr);\r\n      columnArr = [];\r\n    }\r\n\r\n    // Then encrypt and return\r\n\r\n    for (let element of fiveElementPairsReverse) {\r\n      if (\r\n        element.indexOf(charPair[0]) !== -1 &&\r\n        element.indexOf(charPair[1]) !== -1\r\n      ) {\r\n        return rowColumnEncrypt(element, charPair);\r\n      }\r\n    }\r\n\r\n    // Else the method is always 'rectangle':\r\n\r\n    // Get the index of both elements in theire respective rows\r\n\r\n    const indexes = [];\r\n    let char1 = charPair[0];\r\n    let char2 = charPair[1];\r\n\r\n    for (let element of fiveElementPairs) {\r\n      if (element.indexOf(char1) !== -1) {\r\n        indexes[0] = element.indexOf(char1);\r\n      } else if (element.indexOf(char2) !== -1) {\r\n        indexes[1] = element.indexOf(char2);\r\n      }\r\n    }\r\n\r\n    // Reverse the indexes to get the corresponding character of the row\r\n\r\n    let encryptedChar1;\r\n    let encryptedChar2;\r\n\r\n    for (let element of fiveElementPairs) {\r\n      if (element.indexOf(char1) !== -1) {\r\n        encryptedChar1 = element[indexes[1]];\r\n      }\r\n      if (element.indexOf(char2) !== -1) {\r\n        encryptedChar2 = element[indexes[0]];\r\n      }\r\n    }\r\n    return [encryptedChar1, encryptedChar2];\r\n  };\r\n\r\n  const alphabetFromCharacter = () => {\r\n    const ommited = missingLetter;\r\n\r\n    //generate alphabet from keyphrase with a set and push missing characters\r\n\r\n    const key = [...new Set(keyphrase)];\r\n    for (let char of alphabet) {\r\n      if (key.indexOf(char) === -1) {\r\n        key.push(char);\r\n      }\r\n    }\r\n\r\n    // check if character is the ommited one. create element with id to visualize table.\r\n\r\n    const arr = [];\r\n\r\n    for (let char of key) {\r\n      if (char !== ommited && alphabet.indexOf(char) !== -1) {\r\n        arr.push(char);\r\n      }\r\n    }\r\n    playSquare = arr;\r\n    return arr;\r\n  };\r\n\r\n  const transformInput = (textinput) => {\r\n    const twoLetterPairs = [];\r\n    const cleanText = [...textinput];\r\n\r\n    // Find elements that are the same in one pair f.e. 'ee' and replace them with the chosen character\r\n\r\n    for (let i = 0; i < cleanText.length; i += 2) {\r\n      if (cleanText[i] === cleanText[i + 1]) {\r\n        cleanText.splice(i + 1, 0, replaceLetter);\r\n      }\r\n    }\r\n\r\n    // Is the length odd ? Put an x at the end\r\n\r\n    if (cleanText.length % 2 !== 0) {\r\n      cleanText.push(replaceLetter);\r\n    }\r\n\r\n    // Push pairs of letters into array\r\n\r\n    for (let i = 0; i < cleanText.length; i += 2) {\r\n      twoLetterPairs.push([cleanText[i], cleanText[i + 1]]);\r\n    }\r\n    return twoLetterPairs;\r\n  };\r\n\r\n  const removeSigns = () => {\r\n    let textinput = userInput.toLowerCase();\r\n    let output = [];\r\n    for (let char of textinput) {\r\n      if (alphabet.indexOf(char) !== -1) {\r\n        output.push(char);\r\n      }\r\n    }\r\n    return output.join('');\r\n  };\r\n\r\n  const transformText = (input, alphabet, direction, keyword) => {\r\n    setAll(input, alphabet, direction, keyword);\r\n    // Get the pairs to encrypt\r\n    const cleanInput = removeSigns();\r\n    const pairs = transformInput(cleanInput);\r\n    const newAlphabet = alphabetFromCharacter();\r\n\r\n    // Feed the pairs to the methodfinder\r\n    const encrypted = [];\r\n\r\n    for (let element of pairs) {\r\n      encrypted.push(methodFinder(newAlphabet, element));\r\n    }\r\n\r\n    let unformatted = encrypted.join('').split(',').join('');\r\n    //let formatted = spaceTransform(unformatted)\r\n    return [unformatted, getSquare()];\r\n  };\r\n\r\n  const setAll = (input, alphabet, direction, keyword) => {\r\n    setUserInput(input);\r\n    setAlphabet(alphabet);\r\n    setDirection(direction);\r\n    setKeyPhrase(keyword);\r\n  };\r\n\r\n  return {\r\n    getSquare: getSquare,\r\n    setAll: setAll,\r\n    encrypt: transformText,\r\n  };\r\n})();\r\n\r\nexport default Playfair;\r\n","const morse = (() => {\r\n  //Setup all variables\r\n\r\n  let userInput;\r\n\r\n  const characters = {\r\n    a: '.-',\r\n    b: '-...',\r\n    c: '-.-.',\r\n    d: '-..',\r\n    e: '.',\r\n    f: '..-.',\r\n    g: '--.',\r\n    h: '....',\r\n    i: '..',\r\n    j: '.---',\r\n    k: '-.-',\r\n    l: '.-..',\r\n    m: '--',\r\n    n: '-.',\r\n    o: '---',\r\n    p: '.--.',\r\n    q: '--.-',\r\n    r: '.-.',\r\n    s: '...',\r\n    t: '-',\r\n    u: '..-',\r\n    v: '...-',\r\n    w: '.--',\r\n    x: '-..-',\r\n    y: '-.--',\r\n    z: '--..',\r\n    '0': '-----',\r\n    '1': '.----',\r\n    '2': '..---',\r\n    '3': '...--',\r\n    '4': '....-',\r\n    '5': '.....',\r\n    '6': '-....',\r\n    '7': '--...',\r\n    '8': '---..',\r\n    '9': '----.',\r\n    ä: '.-.-',\r\n    á: '.--.-',\r\n    å: '.--.-',\r\n    é: '..-..',\r\n    ñ: '--.--',\r\n    ö: '---.',\r\n    ü: '..--',\r\n    '&': '.-...',\r\n    \"'\": '.----.',\r\n    '@': '.--.-.',\r\n    ')': '-.--.-',\r\n    '(': '-.--.',\r\n    ':': '---...',\r\n    ',': '--..--',\r\n    '=': '-...-',\r\n    '!': '-.-.--',\r\n    '.': '.-.-.-',\r\n    '-': '-....-',\r\n    '+': '.-.-.',\r\n    '\"': '.-..-.',\r\n    '?': '..--..',\r\n    '/': '-..-.',\r\n  };\r\n\r\n  const encrypt = (inputArray) => {\r\n    const outputArray = [];\r\n    for (const char of inputArray) {\r\n      const lowerChar = char.toLowerCase();\r\n      if (characters[lowerChar]) {\r\n        outputArray.push(characters[lowerChar] + ' ');\r\n      } else if (char === ' ') {\r\n        outputArray.push('/ ');\r\n      } else {\r\n        return [char, '...is not defined in Morse Code'];\r\n      }\r\n    }\r\n    return outputArray;\r\n  };\r\n\r\n  const decrypt = (inputArray) => {\r\n    const outputArray = [];\r\n    const values = Object.values(characters);\r\n    for (let i = 0; i < inputArray.length; i++) {\r\n      const char = inputArray[i];\r\n      if (char === '/') {\r\n        outputArray.push(' ');\r\n      } else if (values.indexOf(char) !== -1) {\r\n        outputArray.push(\r\n          Object.keys(characters).find((key) => characters[key] === char)\r\n        );\r\n      } else if (char) {\r\n        return ['Invalid Characters or not valid Morse Code'];\r\n      }\r\n    }\r\n    return outputArray;\r\n  };\r\n\r\n  const transformText = (input, direction) => {\r\n    userInput = input;\r\n\r\n    if (direction === 'encrypt') {\r\n      const inputArray = [...userInput];\r\n      return encrypt(inputArray).join(' ');\r\n    } else {\r\n      const inputArray = userInput.trim().split(' ');\r\n      return decrypt(inputArray).join('');\r\n    }\r\n  };\r\n\r\n  return {\r\n    encrypt: transformText,\r\n  };\r\n})();\r\n\r\nexport default morse;\r\n","const replace = (() => {\r\n  const replaceAll = (str1, str2, ignore, userInput) => {\r\n    return userInput.replace(\r\n      new RegExp(\r\n        str1.replace(/([/,!\\\\^${}[\\]().*+?|<>\\-&])/g, '\\\\$&'),\r\n        ignore ? 'gi' : 'g'\r\n      ),\r\n      typeof str2 == 'string' ? str2.replace(/\\$/g, '$$$$') : str2\r\n    );\r\n  };\r\n\r\n  const encrypt = (input, toReplaceLetter, replaceLetter) => {\r\n    return replaceAll(toReplaceLetter, replaceLetter, true, input);\r\n  };\r\n\r\n  return {\r\n    encrypt: encrypt,\r\n  };\r\n})();\r\n\r\nexport default replace;\r\n","const skytale = (() => {\r\n  let userInput, caseFormat, ringLength, direction, foreignChars;\r\n\r\n  const setUserInput = (value) => {\r\n    value = value.split(' ').join('');\r\n    userInput = value;\r\n  };\r\n\r\n  const setCase = (value) => {\r\n    caseFormat = value;\r\n  };\r\n\r\n  const setDirection = (value) => {\r\n    direction = value;\r\n  };\r\n\r\n  const setForeignChars = (value) => {\r\n    foreignChars = value;\r\n  };\r\n\r\n  const setRingLength = (value) => {\r\n    ringLength = value;\r\n  };\r\n\r\n  const calcSkytaleLength = () => {\r\n    return Math.ceil(userInput.length / ringLength);\r\n  };\r\n\r\n  const transformText = () => {\r\n    let input = userInput;\r\n    if (foreignChars === 'ignore') {\r\n      let inp = [];\r\n      let alphabet = 'abcdefghijklmnopqrstuvwxyz';\r\n      for (let i = 0; i < input.length; i++) {\r\n        if (alphabet.indexOf(input[i].toLowerCase()) !== -1) inp.push(input[i]);\r\n      }\r\n      input = inp.join('');\r\n    }\r\n\r\n    if (direction === 'encrypt') {\r\n      const skytaleArr = [[]];\r\n      let j = 0;\r\n      for (let i = 0; i < input.length; i++) {\r\n        if (i % ringLength === 0 && i !== 0) {\r\n          j++;\r\n          skytaleArr.push([]);\r\n          skytaleArr[j].push(input[i]);\r\n        } else {\r\n          skytaleArr[j].push(input[i]);\r\n        }\r\n      }\r\n\r\n      const encryptedText = [];\r\n      for (let i = 0; i < ringLength; i++) {\r\n        for (let j = 0; j < skytaleArr.length; j++) {\r\n          if (skytaleArr[j][i]) encryptedText.push(skytaleArr[j][i]);\r\n        }\r\n      }\r\n\r\n      let encrypted;\r\n\r\n      if (caseFormat === 'ignore') {\r\n        encrypted = encryptedText.join('').toLowerCase();\r\n      } else {\r\n        encrypted = encryptedText.join('');\r\n      }\r\n\r\n      let skytaleLength = calcSkytaleLength();\r\n      return [encrypted, skytaleLength];\r\n    } else if (direction === 'decrypt') {\r\n      const skytaleRows = Math.ceil(input.length / ringLength);\r\n      let lastRowLength = input.length % ringLength;\r\n      if (lastRowLength === 0) lastRowLength = ringLength;\r\n\r\n      const skyArr = [];\r\n\r\n      for (let i = 0; i < skytaleRows; i++) {\r\n        skyArr.push([]);\r\n      }\r\n\r\n      let indexOne = 0;\r\n      for (let i = 0; i < lastRowLength; i++) {\r\n        for (let j = 0; j < skytaleRows; j++) {\r\n          skyArr[j].push(input[indexOne]);\r\n          indexOne++;\r\n        }\r\n      }\r\n\r\n      let restInput = input.slice(skytaleRows * lastRowLength);\r\n\r\n      let indexTwo = 0;\r\n      for (let j = 0; j < ringLength - lastRowLength; j++) {\r\n        for (let i = 0; i < skytaleRows - 1; i++) {\r\n          skyArr[i].push(restInput[indexTwo]);\r\n          indexTwo++;\r\n        }\r\n      }\r\n\r\n      let encrypted;\r\n\r\n      if (caseFormat === 'ignore') {\r\n        encrypted = skyArr.flat().join('').toLowerCase();\r\n      } else {\r\n        encrypted = skyArr.flat().join('');\r\n      }\r\n\r\n      let skytaleLenght = calcSkytaleLength();\r\n      return [encrypted, skytaleLenght];\r\n    }\r\n  };\r\n\r\n  const encrypt = (direction, caseFormat, input, ringLength, foreignChars) => {\r\n    if (direction === 'crack') return ['', 0];\r\n    setAll(direction, caseFormat, input, ringLength, foreignChars);\r\n    return transformText();\r\n  };\r\n\r\n  const setAll = (direction, caseFormat, input, ringLength, foreignChars) => {\r\n    setDirection(direction);\r\n    setCase(caseFormat);\r\n    setUserInput(input);\r\n    setRingLength(ringLength);\r\n    setForeignChars(foreignChars);\r\n  };\r\n\r\n  return {\r\n    encrypt: encrypt,\r\n  };\r\n})();\r\n\r\nexport default skytale;\r\n","import math from '../../math/Math';\r\n\r\nconst atbash = (() => {\r\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\r\n\r\n  const encrypt = (input) => {\r\n    const userInput = input.toString();\r\n    const cleanInput = math.transformToLowerCaseChars(userInput);\r\n\r\n    if (!cleanInput.length) return '';\r\n\r\n    const alphabetReverse = [...alphabet].reverse();\r\n    const output = [];\r\n\r\n    for (const character of cleanInput) {\r\n      const characterIndex = alphabet.indexOf(character);\r\n      output.push(alphabetReverse[characterIndex]);\r\n    }\r\n\r\n    return output.join('');\r\n  };\r\n\r\n  const transform = (input, caseFormat, foreignChars) => {\r\n    const rawOutput = encrypt(input);\r\n\r\n    return math.transformCaseAndChars(\r\n      input,\r\n      rawOutput,\r\n      caseFormat,\r\n      foreignChars\r\n    );\r\n  };\r\n\r\n  return {\r\n    encrypt: transform,\r\n  };\r\n})();\r\n\r\nexport default atbash;\r\n","const Rsa = (() => {\r\n  const bigInt = require('big-integer');\r\n\r\n  let prime_one, prime_two, e, phi, userInput, n, d;\r\n\r\n  const setPrimeOne = (val) => {\r\n    prime_one = val;\r\n  };\r\n\r\n  const setPrimeTwo = (val) => {\r\n    prime_two = val;\r\n  };\r\n\r\n  const setE = (val) => {\r\n    e = val;\r\n  };\r\n\r\n  const setUserInput = (val) => {\r\n    userInput = val;\r\n  };\r\n\r\n  const encrypt = () => {\r\n    if (userInput === '' || !userInput || !e || !n) return;\r\n\r\n    let t0 = performance.now();\r\n\r\n    //First check if phi and e are coprime otherwise this is a waste of time.\r\n    let gcd = bigInt.gcd(phi, e);\r\n    if (bigInt(gcd).compare(bigInt(1)) !== 0)\r\n      return [\r\n        '!!! φ(n) and e are not coprime - gcd of φ(n) and e is ' +\r\n          gcd +\r\n          ' Please check that you have two prime numbers and an appropriate e without a common gcd!!!',\r\n        '',\r\n      ];\r\n\r\n    //Convert Input to Dezimal to get an encryptable number\r\n    let inputArr = userInput.split('');\r\n    let dezArr = [];\r\n    for (let element of inputArr) {\r\n      dezArr.push(element.charCodeAt(0));\r\n    }\r\n    let longNumber = dezArr.join('');\r\n    //Encrypt the Number\r\n    let encryptedDEZ = bigInt(longNumber).modPow(e, n);\r\n\r\n    //let encryptedHEX = encryptedDEZ.toString(16)\r\n    let t1 = performance.now();\r\n\r\n    if (!encryptedDEZ || !t1 || !t0 || t1 - t0 === undefined)\r\n      return ['Bad Input', ''];\r\n    return [\r\n      encryptedDEZ.toString(),\r\n      Math.round((t1 - t0) / 1000).toString() + 's',\r\n      calcPhi(),\r\n      calcD(),\r\n      calcN(),\r\n    ];\r\n  };\r\n\r\n  const decrypt = () => {\r\n    let t0 = performance.now();\r\n    if (userInput.length === 0 || !d || !n) return;\r\n\r\n    //Check if we are trying to decrypt a number\r\n    let numbers = '0123456789';\r\n    for (let i = 0; i < userInput.length; i++) {\r\n      if (numbers.indexOf(userInput[i]) === -1)\r\n        return [\r\n          `Please don't enter anything but a big number into the input field when you decrypt something.`,\r\n          '',\r\n        ];\r\n    }\r\n\r\n    let decryptedDEZ = bigInt(userInput).modPow(d, n).toString();\r\n    let decryptedArr = [];\r\n    let i = 0;\r\n    while (decryptedDEZ.length > 0) {\r\n      if (\r\n        Number(\r\n          String(decryptedDEZ[i]) +\r\n            String(decryptedDEZ[i + 1]) +\r\n            String(decryptedDEZ[i + 2])\r\n        ) <= 255\r\n      ) {\r\n        decryptedArr.push(\r\n          Number(\r\n            String(decryptedDEZ[i]) +\r\n              String(decryptedDEZ[i + 1]) +\r\n              String(decryptedDEZ[i + 2])\r\n          )\r\n        );\r\n        decryptedDEZ = decryptedDEZ.slice(3);\r\n      } else if (\r\n        Number(String(decryptedDEZ[i]) + String(decryptedDEZ[i + 1])) <= 255\r\n      ) {\r\n        decryptedArr.push(\r\n          Number(String(decryptedDEZ[i]) + String(decryptedDEZ[i + 1]))\r\n        );\r\n        decryptedDEZ = decryptedDEZ.slice(2);\r\n      } else {\r\n        return ['Something went wrong...', ''];\r\n      }\r\n    }\r\n\r\n    let decryptedLetters = [];\r\n    for (let i = 0; i < decryptedArr.length; i++) {\r\n      let char = String.fromCharCode(decryptedArr[i]);\r\n      decryptedLetters.push(char);\r\n    }\r\n\r\n    let t1 = performance.now();\r\n\r\n    if (!decryptedLetters || !t1 || !t0 || t1 - t0 === undefined)\r\n      return ['Bad Input', ''];\r\n\r\n    return [\r\n      decryptedLetters.join(''),\r\n      Math.round((t1 - t0) / 1000).toString() + 's',\r\n      calcPhi(),\r\n      calcD(),\r\n      calcN(),\r\n    ];\r\n  };\r\n\r\n  const calcPhi = () => {\r\n    let bigP1 = bigInt(prime_one);\r\n    let bigP2 = bigInt(prime_two);\r\n    let big1 = bigInt(1);\r\n    phi = bigInt(bigP1).minus(bigInt(big1)).times(bigInt(bigP2).minus(big1));\r\n    return phi.toString();\r\n  };\r\n\r\n  const calcD = () => {\r\n    if (!e || !phi || e === null || phi === null) return;\r\n\r\n    //Calc to check if coprime before modInverse\r\n    let gcd = bigInt.gcd(phi, e);\r\n    if (bigInt(gcd).compare(bigInt(1)) !== 0) return [gcd];\r\n\r\n    d = bigInt(e).modInv(bigInt(phi)).toString();\r\n    return d;\r\n  };\r\n\r\n  const calcN = () => {\r\n    n = bigInt(prime_one).times(bigInt(prime_two));\r\n    return n.toString();\r\n  };\r\n\r\n  const numberChecker = (input) => {\r\n    if (!input) return;\r\n    let numbers = '0123456789'.split('');\r\n    for (let i = 0; i < input.length; i++) {\r\n      if (numbers.indexOf(input[i]) === -1) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const setAll = (input, prime1, prime2, e) => {\r\n    setUserInput(input);\r\n    setPrimeOne(prime1);\r\n    setPrimeTwo(prime2);\r\n    setE(e);\r\n    if (\r\n      !numberChecker(prime_one) ||\r\n      !numberChecker(prime_two) ||\r\n      !numberChecker(e)\r\n    ) {\r\n      return;\r\n    }\r\n    phi = calcPhi();\r\n    d = calcD();\r\n    n = calcN();\r\n  };\r\n\r\n  const calc = (input, prime1, prime2, e, direction) => {\r\n    setAll(input, prime1, prime2, e);\r\n    if (typeof calcD() === 'object')\r\n      return [\r\n        '!!! φ(n) and e are not coprime - gcd of φ(n) and e is ' +\r\n          calcD().join('') +\r\n          ' Please check that you have two prime numbers and an appropriate e without a common gcd!!!',\r\n        '',\r\n      ];\r\n    if (\r\n      !numberChecker(prime_one) ||\r\n      !numberChecker(prime_two) ||\r\n      !numberChecker(e) ||\r\n      !numberChecker(d) ||\r\n      !numberChecker(n)\r\n    ) {\r\n      return ['BAD INPUT', 'BAD INPUT', 'BAD INPUT', 'BAD INPUT', 'BAD INPUT'];\r\n    }\r\n\r\n    return direction === 'encrypt' ? encrypt() : decrypt();\r\n  };\r\n\r\n  return {\r\n    encrypt: encrypt,\r\n    decrypt: decrypt,\r\n    calcD: calcD,\r\n    calcPhi: calcPhi,\r\n    calcN: calcN,\r\n    setAll: setAll,\r\n    calc: calc,\r\n  };\r\n})();\r\n\r\nexport default Rsa;\r\n","const Reverse = (() => {\r\n  const encrypt = (input, caseFormat, foreignChars, alphabet) => {\r\n    //Calc\r\n    let output = [];\r\n    for (let i = input.length - 1; i >= 0; i--) {\r\n      output.push(input[i]);\r\n    }\r\n\r\n    //Format\r\n    let formattedOutput = [];\r\n\r\n    if (foreignChars === 'ignore') {\r\n      for (let char of output) {\r\n        if (alphabet.indexOf(char.toLowerCase()) !== -1 || char === ' ') {\r\n          formattedOutput.push(char);\r\n        }\r\n      }\r\n    } else formattedOutput = output;\r\n\r\n    if (caseFormat === 'ignore') {\r\n      formattedOutput = formattedOutput.join('').toLowerCase();\r\n    } else formattedOutput = formattedOutput.join('');\r\n\r\n    return formattedOutput;\r\n  };\r\n\r\n  return {\r\n    encrypt: encrypt,\r\n  };\r\n})();\r\n\r\nexport default Reverse;\r\n","const CaseTransform = (() => {\r\n  const lower = (input) => {\r\n    return input.toLowerCase();\r\n  };\r\n\r\n  const upper = (input) => {\r\n    return input.toUpperCase();\r\n  };\r\n\r\n  const capitalize = (input) => {\r\n    const words = input.split(' ');\r\n    const wordsCapitalized = [];\r\n    for (let word of words) {\r\n      if (word !== '' && word !== ' ') {\r\n        let newWord = word.toLowerCase().split('');\r\n        newWord[0] = newWord[0].toUpperCase();\r\n        wordsCapitalized.push(newWord.join(''));\r\n      }\r\n    }\r\n    return wordsCapitalized.join(' ');\r\n  };\r\n\r\n  const alternating = (input) => {\r\n    const wordsAlternate = [];\r\n    for (let i = 0; i < input.length; i++) {\r\n      i % 2 === 0\r\n        ? wordsAlternate.push(input[i].toLowerCase())\r\n        : wordsAlternate.push(input[i].toUpperCase());\r\n    }\r\n    return wordsAlternate.join('');\r\n  };\r\n\r\n  const inverse = (input) => {\r\n    const wordsInverse = [];\r\n    for (let i = 0; i < input.length; i++) {\r\n      input[i].toLowerCase() === input[i]\r\n        ? wordsInverse.push(input[i].toUpperCase())\r\n        : wordsInverse.push(input[i].toLowerCase());\r\n    }\r\n    return wordsInverse.join('');\r\n  };\r\n\r\n  const encrypt = (input, caseTransformChoice) => {\r\n    if (!input) return '';\r\n    input.trim();\r\n    if (caseTransformChoice === 'lower') {\r\n      return lower(input);\r\n    } else if (caseTransformChoice === 'upper') {\r\n      return upper(input);\r\n    } else if (caseTransformChoice === 'capitalize') {\r\n      return capitalize(input);\r\n    } else if (caseTransformChoice === 'alternating') {\r\n      return alternating(input);\r\n    } else if (caseTransformChoice === 'inverse') {\r\n      return inverse(input);\r\n    }\r\n  };\r\n\r\n  return {\r\n    encrypt: encrypt,\r\n  };\r\n})();\r\n\r\nexport default CaseTransform;\r\n","const Substitute = (() => {\r\n  const encrypt = (input, substitutionAlphabet, direction) => {\r\n    let output = [];\r\n    if (direction === 'encrypt') {\r\n      for (let i = 0; i < input.length; i++) {\r\n        output.push(substitutionAlphabet[input[i].toLowerCase()] || input[i]);\r\n      }\r\n    } else if (direction === 'decrypt') {\r\n      let sAlphabet = substitutionAlphabet;\r\n      let uInput = input;\r\n      let keys = Object.keys(sAlphabet);\r\n      for (let i = 0; i < input.length; i++) {\r\n        output.push(\r\n          keys.find((key) => sAlphabet[key] === uInput[i].toLowerCase()) ||\r\n            input[i]\r\n        );\r\n      }\r\n    }\r\n    return output.join('');\r\n  };\r\n\r\n  return {\r\n    encrypt: encrypt,\r\n  };\r\n})();\r\n\r\nexport default Substitute;\r\n","const Trifid = (() => {\r\n  let userInput, trifidKey, groupSize, twentySeventhLetter, alphabet;\r\n\r\n  const setUserInput = (value) => {\r\n    userInput = value;\r\n  };\r\n\r\n  const setAlphabet = (value) => {\r\n    alphabet = value;\r\n  };\r\n\r\n  const setTrifidKey = (value) => {\r\n    trifidKey = value;\r\n  };\r\n\r\n  const setGroupSize = (value) => {\r\n    groupSize = Number(value);\r\n  };\r\n\r\n  const setTwentySeventhLetterLetter = (value) => {\r\n    twentySeventhLetter = value;\r\n  };\r\n\r\n  const generateLayerElement = (letters) => {\r\n    const element = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      element.push(letters[i]);\r\n    }\r\n    return element;\r\n  };\r\n\r\n  const generateOneLayer = (letters) => {\r\n    const layer = [];\r\n    for (let i = 0; i < 9; i += 3) {\r\n      let threeLetters = [letters[i], letters[i + 1], letters[i + 2]];\r\n      layer.push(generateLayerElement(threeLetters));\r\n    }\r\n    return layer;\r\n  };\r\n\r\n  const genKey = () => {\r\n    const key = [];\r\n    for (let i = 0; i < 26; i++) {\r\n      if (\r\n        trifidKey[i] &&\r\n        key.indexOf(trifidKey[i].toLowerCase()) === -1 &&\r\n        alphabet.indexOf(trifidKey[i].toLowerCase()) !== -1\r\n      ) {\r\n        key.push(trifidKey[i].toLowerCase());\r\n      }\r\n    }\r\n    for (let i = 0; i < 26; i++) {\r\n      if (key.indexOf(alphabet[i].toLowerCase()) === -1) {\r\n        key.push(alphabet[i].toLowerCase());\r\n      }\r\n    }\r\n    key.push(twentySeventhLetter);\r\n    return key;\r\n  };\r\n\r\n  const generateAllLayers = () => {\r\n    const key = genKey();\r\n    const layers = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      layers.push(generateOneLayer(key.slice(i * 9, i * 9 + 9)));\r\n    }\r\n    return layers;\r\n  };\r\n\r\n  const getRowAndColumn = (layer, letter) => {\r\n    let index = 0;\r\n    for (let layerRow of layer) {\r\n      if (layerRow.indexOf(letter.toLowerCase()) !== -1) {\r\n        return [index, layerRow.indexOf(letter.toLowerCase())];\r\n      } else index++;\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  const getEncodedNumber = (layers, letter) => {\r\n    let layerindex = 0;\r\n    for (let layerElement of layers) {\r\n      const rowCol = getRowAndColumn(layerElement, letter);\r\n      if (rowCol !== undefined) {\r\n        return [layerindex, ...rowCol];\r\n      } else layerindex++;\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  const encodeLetters = () => {\r\n    const layers = generateAllLayers();\r\n    const numbers = [];\r\n    for (let i = 0; i < userInput.length; i++) {\r\n      const num = getEncodedNumber(layers, userInput[i]);\r\n      if (num !== undefined) {\r\n        numbers.push(num);\r\n      }\r\n    }\r\n    return numbers;\r\n  };\r\n\r\n  const generateGroup = (groupNumber) => {\r\n    let encodedLettersArr = encodeLetters();\r\n    let group = [];\r\n    for (\r\n      let i = groupNumber * groupSize;\r\n      i < groupNumber * groupSize + groupSize;\r\n      i++\r\n    ) {\r\n      group.push(encodedLettersArr[i]);\r\n    }\r\n    return group;\r\n  };\r\n\r\n  const cleanInputLength = () => {\r\n    let cleanInputLength = 0;\r\n    for (let i = 0; i < userInput.length; i++) {\r\n      if (alphabet.indexOf(userInput[i].toLowerCase()) !== -1)\r\n        cleanInputLength++;\r\n    }\r\n    return cleanInputLength;\r\n  };\r\n\r\n  const generateGroups = () => {\r\n    let groups = [];\r\n    for (let i = 0; i < Math.ceil(cleanInputLength() / groupSize); i++) {\r\n      groups.push(generateGroup(i));\r\n    }\r\n    return groups;\r\n  };\r\n\r\n  //GENERATES THE FINAL SCHEME TO ENCRYPT BY\r\n  const transformToEncryptedGroup = (groupNumber) => {\r\n    let group = generateGroups()[groupNumber];\r\n\r\n    const encodedGroup = [[]];\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < groupSize; j++) {\r\n        if (!group[j] || isNaN(group[j][i])) break;\r\n        encodedGroup[i].push(group[j][i]);\r\n      }\r\n      encodedGroup.push([]);\r\n    }\r\n    let encodedNumbers = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < groupSize; j++) {\r\n        encodedNumbers.push(encodedGroup[i][j]);\r\n      }\r\n    }\r\n\r\n    let encodedNumbersClean = [];\r\n    for (let i = 0; i < encodedNumbers.length; i++) {\r\n      if (encodedNumbers[i] !== undefined) {\r\n        encodedNumbersClean.push(encodedNumbers[i]);\r\n      }\r\n    }\r\n\r\n    let encodedNumbersArray = [[]];\r\n    let index = 0;\r\n    for (let i = 0; i < encodedNumbersClean.length; i++) {\r\n      if (i % 3 === 0 && i !== 0) {\r\n        encodedNumbersArray.push([]);\r\n        index++;\r\n      }\r\n      encodedNumbersArray[index].push(encodedNumbersClean[i]);\r\n    }\r\n    return encodedNumbersArray;\r\n  };\r\n\r\n  const transformAllGroups = () => {\r\n    let groups = [];\r\n    const length = generateGroups().length;\r\n    for (let i = 0; i < length; i++) {\r\n      groups.push(transformToEncryptedGroup(i));\r\n    }\r\n    return groups;\r\n  };\r\n\r\n  const cleanLettersEncrypt = () => {\r\n    let groups = transformAllGroups();\r\n    const cleanGroups = [];\r\n    for (let i = 0; i < groups.length; i++) {\r\n      cleanGroups.push(...groups[i]);\r\n    }\r\n    let allLayers = generateAllLayers();\r\n    let decrypted = [];\r\n    for (let i = 0; i < cleanGroups.length; i++) {\r\n      let numbers = cleanGroups[i];\r\n      decrypted.push(allLayers[numbers[0]][numbers[1]][numbers[2]]);\r\n    }\r\n    return decrypted.join('');\r\n  };\r\n\r\n  //Decryption Process\r\n  const generateDecryptionGroups = () => {\r\n    let encodedNumbers = encodeLetters().flat();\r\n    let groups = [];\r\n    for (let i = 0; i < Math.ceil(cleanInputLength() / groupSize); i++) {\r\n      groups.push([]);\r\n      groups[i].push(\r\n        encodedNumbers.slice(\r\n          i * groupSize * 3,\r\n          i * groupSize * 3 + groupSize * 3\r\n        )\r\n      );\r\n    }\r\n\r\n    let groupsDecodedNumbers = [];\r\n    for (let i = 0; i < groups.length; i++) {\r\n      groupsDecodedNumbers.push(generateOneDecryptionGroup(groups[i]));\r\n    }\r\n    return groupsDecodedNumbers;\r\n  };\r\n\r\n  const generateOneDecryptionGroup = (slice) => {\r\n    let groupsRow = [];\r\n    for (let j = 0; j < 3; j++) {\r\n      groupsRow.push(\r\n        slice[0].slice(\r\n          (j * slice[0].length) / 3,\r\n          (j * slice[0].length) / 3 + slice[0].length / 3\r\n        )\r\n      );\r\n    }\r\n\r\n    const cleanGroupsRow = [];\r\n    for (let i = 0; i < groupsRow.length; i++) {\r\n      if (groupsRow[i].length !== 0) {\r\n        cleanGroupsRow.push(groupsRow[i]);\r\n      }\r\n    }\r\n    const groupsCol = [];\r\n    for (let i = 0; i < groupSize; i++) {\r\n      groupsCol.push([]);\r\n      for (let j = 0; j < cleanGroupsRow.length; j++) {\r\n        groupsCol[i].push(cleanGroupsRow[j][i]);\r\n      }\r\n    }\r\n\r\n    const cleanGroupsCol = [];\r\n    for (let i = 0; i < groupsCol.length; i++) {\r\n      if (groupsCol[i][0] !== undefined) cleanGroupsCol.push(groupsCol[i]);\r\n    }\r\n\r\n    return cleanGroupsCol;\r\n  };\r\n\r\n  const cleanLettersDecrypt = () => {\r\n    let groups = generateDecryptionGroups();\r\n    const cleanGroups = [];\r\n    for (let i = 0; i < groups.length; i++) {\r\n      cleanGroups.push(...groups[i]);\r\n    }\r\n\r\n    let allLayers = generateAllLayers();\r\n\r\n    let decrypted = [];\r\n    for (let i = 0; i < cleanGroups.length; i++) {\r\n      let numbers = cleanGroups[i];\r\n      decrypted.push(allLayers[numbers[0]][numbers[1]][numbers[2]]);\r\n    }\r\n    return decrypted.join('');\r\n  };\r\n\r\n  const encrypt = (\r\n    input,\r\n    trifidKey,\r\n    groupSize,\r\n    twentySeventhLetter,\r\n    alphabet,\r\n    direction\r\n  ) => {\r\n    setAll(\r\n      input,\r\n      trifidKey,\r\n      groupSize,\r\n      twentySeventhLetter,\r\n      alphabet,\r\n      direction\r\n    );\r\n    if (!userInput || userInput.length === 0)\r\n      return [null, generateAllLayers(), null];\r\n    if (direction === 'encrypt') {\r\n      return [cleanLettersEncrypt(), generateAllLayers(), encodeLetters()];\r\n    } else {\r\n      return [\r\n        cleanLettersDecrypt(),\r\n        generateAllLayers(),\r\n        generateDecryptionGroups().flat(1),\r\n      ];\r\n    }\r\n  };\r\n\r\n  const setAll = (\r\n    input,\r\n    trifidKey,\r\n    groupSize,\r\n    twentySeventhLetter,\r\n    alphabet\r\n  ) => {\r\n    setUserInput(input);\r\n    setTrifidKey(trifidKey);\r\n    setGroupSize(groupSize);\r\n    setTwentySeventhLetterLetter(twentySeventhLetter);\r\n    setAlphabet(alphabet);\r\n  };\r\n\r\n  return {\r\n    encrypt: encrypt,\r\n    setAll: setAll,\r\n  };\r\n})();\r\n\r\nexport default Trifid;\r\n","import math from '../../math/Math';\r\n\r\nconst otp = (() => {\r\n  let userInput, direction, includeChars, key, alphabet;\r\n\r\n  const setUserInput = (input) => {\r\n    userInput = String(input);\r\n  };\r\n\r\n  const setForeignChars = (input) => {\r\n    includeChars = input;\r\n  };\r\n\r\n  const setAlphabet = (input) => {\r\n    alphabet = input;\r\n  };\r\n\r\n  const setDirection = (input) => {\r\n    direction = input;\r\n  };\r\n\r\n  const setKey = (input) => {\r\n    key = input;\r\n  };\r\n\r\n  const modulo = (a, b) => {\r\n    return ((a % b) + b) % b;\r\n  };\r\n\r\n  const transformText = () => {\r\n    let index = 0;\r\n    const input = [];\r\n    for (let i = 0; i < userInput.length; i++) {\r\n      if (alphabet.indexOf(userInput[i].toLowerCase()) !== -1) {\r\n        input.push(userInput[i].toLowerCase());\r\n      }\r\n    }\r\n\r\n    let output = input.map((char) => {\r\n      let encryptedKey;\r\n      if (key[index] && input && alphabet && alphabet.indexOf(char) !== -1) {\r\n        const indexChar = alphabet.indexOf(char);\r\n        const indexKey = alphabet.indexOf(key[index].toLowerCase());\r\n        const resultIndex =\r\n          direction === 'encrypt' ? indexChar + indexKey : indexChar - indexKey;\r\n        encryptedKey =\r\n          direction === 'encrypt'\r\n            ? alphabet[resultIndex % 26]\r\n            : alphabet[modulo(indexChar - indexKey, 26)];\r\n        index++;\r\n      }\r\n      return encryptedKey;\r\n    });\r\n    return output.join('');\r\n  };\r\n\r\n  const encrypt = (\r\n    input,\r\n    caseFormat,\r\n    foreignChars,\r\n    direction,\r\n    otpKey,\r\n    alphabet\r\n  ) => {\r\n    setAll(input, foreignChars, direction, otpKey, alphabet);\r\n    if (direction !== 'crack') {\r\n      if (userInput.length <= 0) return '';\r\n      let rawOutput = transformText();\r\n      return math.transformCaseAndChars(\r\n        userInput,\r\n        rawOutput,\r\n        caseFormat,\r\n        includeChars\r\n      );\r\n    } else return '';\r\n  };\r\n\r\n  const setAll = (input, foreignChars, direction, otpKey, alphabet) => {\r\n    setUserInput(input);\r\n    setForeignChars(foreignChars);\r\n    setDirection(direction);\r\n    setKey(otpKey);\r\n    setAlphabet(alphabet);\r\n  };\r\n\r\n  return {\r\n    setAll: setAll,\r\n    encrypt: encrypt,\r\n  };\r\n})();\r\n\r\nexport default otp;\r\n","import { SET_WORDBOOK } from './constants';\r\n\r\nconst setWordbook = () => async (dispatch) => {\r\n  const url =\r\n    'https://raw.githubusercontent.com/dwyl/english-words/master/words_dictionary.json';\r\n  try {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    dispatch({\r\n      type: SET_WORDBOOK,\r\n      payload: {\r\n        data,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SET_WORDBOOK,\r\n      payload: {\r\n        data: 'FAIL',\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport default setWordbook;\r\n","import { UPDATE_OUTPUT } from './constants';\r\n\r\nconst setOutput = (output) => ({\r\n  type: UPDATE_OUTPUT,\r\n  output,\r\n});\r\n\r\nexport default setOutput;\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport { toggleAnalysisModal } from '../../../actions/toggleAnalysisModal';\r\nimport {\r\n  toggleAnalysisMethodFQInput,\r\n  toggleAnalysisMethodFQOutput,\r\n  toggleAnalysisMethodICInput,\r\n  toggleAnalysisMethodICOutput,\r\n  toggleAnalysisMethodCHIOutput,\r\n  toggleAnalysisMethodCHIInput,\r\n} from '../../../actions/toggleAnalysisMethod';\r\n\r\n//Assets\r\nimport '../modal.scss';\r\n\r\nconst AnalysisModal = ({\r\n  analysisModal,\r\n  toggleAnalysisModal,\r\n  toggleAnalysisMethodICInput,\r\n  toggleAnalysisMethodICOutput,\r\n  toggleAnalysisMethodFQInput,\r\n  toggleAnalysisMethodFQOutput,\r\n  toggleAnalysisMethodCHIOutput,\r\n  toggleAnalysisMethodCHIInput,\r\n  ic_input,\r\n  ic_output,\r\n  fq_input,\r\n  fq_output,\r\n  chi_output,\r\n  chi_input,\r\n  isAuthenticated,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {analysisModal ? (\r\n        <div className='modal-wrapper' onClick={() => toggleAnalysisModal()}>\r\n          <div className='modal'>\r\n            <div className='modal__header'>Add a method of cryptoanalysis</div>\r\n            <div className='modal__body'>\r\n              <div className='modal__content'>\r\n                <ul>\r\n                  {ic_input &&\r\n                  ic_output &&\r\n                  fq_input &&\r\n                  fq_output &&\r\n                  chi_output &&\r\n                  chi_input ? (\r\n                    <li className='modal__list-item modal__list-item--cta'>\r\n                      All available methods already in use...\r\n                    </li>\r\n                  ) : null}\r\n                  {!isAuthenticated ? (\r\n                    <li className='modal__list-item modal__list-item--red modal__list-item--cta'>\r\n                      Login or signup to get more analysis tools!\r\n                    </li>\r\n                  ) : null}\r\n                  {!fq_input || !fq_output ? (\r\n                    <li className='modal__list-item'>\r\n                      <button\r\n                        className='modal__encryption-method'\r\n                        onClick={() => {\r\n                          !fq_input && toggleAnalysisMethodFQInput();\r\n                          !fq_output && toggleAnalysisMethodFQOutput();\r\n                        }}\r\n                      >\r\n                        Frequency Analysis\r\n                      </button>\r\n                    </li>\r\n                  ) : null}\r\n                  {!ic_input || !ic_output ? (\r\n                    <li className='modal__list-item'>\r\n                      <button\r\n                        className='modal__encryption-method'\r\n                        onClick={() => {\r\n                          !ic_input && toggleAnalysisMethodICInput();\r\n                          !ic_output && toggleAnalysisMethodICOutput();\r\n                        }}\r\n                      >\r\n                        Index of Coincidence\r\n                      </button>\r\n                    </li>\r\n                  ) : null}\r\n                  {!chi_input || !chi_output ? (\r\n                    <li className='modal__list-item'>\r\n                      <button\r\n                        className='modal__encryption-method'\r\n                        onClick={() => {\r\n                          !chi_input && toggleAnalysisMethodCHIInput();\r\n                          !chi_output && toggleAnalysisMethodCHIOutput();\r\n                        }}\r\n                      >\r\n                        Chi Squared\r\n                      </button>\r\n                    </li>\r\n                  ) : null}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  analysisModal: state.analysisModal,\r\n  fq_input: state.analysisMethod.fq_input,\r\n  fq_output: state.analysisMethod.fq_output,\r\n  ic_input: state.analysisMethod.ic_input,\r\n  ic_output: state.analysisMethod.ic_output,\r\n  chi_input: state.analysisMethod.chi_input,\r\n  chi_output: state.analysisMethod.chi_output,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  toggleAnalysisModal: toggleAnalysisModal,\r\n  toggleAnalysisMethodFQInput: toggleAnalysisMethodFQInput,\r\n  toggleAnalysisMethodFQOutput: toggleAnalysisMethodFQOutput,\r\n  toggleAnalysisMethodICInput: toggleAnalysisMethodICInput,\r\n  toggleAnalysisMethodICOutput: toggleAnalysisMethodICOutput,\r\n  toggleAnalysisMethodCHIOutput: toggleAnalysisMethodCHIOutput,\r\n  toggleAnalysisMethodCHIInput: toggleAnalysisMethodCHIInput,\r\n};\r\n\r\nAnalysisModal.propTypes = {\r\n  analysisModal: PropTypes.bool.isRequired,\r\n  fq_input: PropTypes.bool.isRequired,\r\n  fq_output: PropTypes.bool.isRequired,\r\n  ic_input: PropTypes.bool.isRequired,\r\n  ic_output: PropTypes.bool.isRequired,\r\n  chi_input: PropTypes.bool.isRequired,\r\n  chi_output: PropTypes.bool.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n  toggleAnalysisModal: PropTypes.func.isRequired,\r\n  toggleAnalysisMethodFQInput: PropTypes.func.isRequired,\r\n  toggleAnalysisMethodFQOutput: PropTypes.func.isRequired,\r\n  toggleAnalysisMethodICInput: PropTypes.func.isRequired,\r\n  toggleAnalysisMethodICOutput: PropTypes.func.isRequired,\r\n  toggleAnalysisMethodCHIOutput: PropTypes.func.isRequired,\r\n  toggleAnalysisMethodCHIInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(AnalysisModal);\r\n","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport encryptionProps from './encryption-props';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Assets\r\nimport './main.scss';\r\n\r\n//Components\r\nimport Input from './BlockInputOutput/Input';\r\nimport Output from './BlockInputOutput/Output';\r\nimport BlockConnector from './BlockOther/BlockConnector';\r\nimport BlockSettings from './BlockCenter';\r\nimport Timeline from '../timeline/Timeline';\r\nimport LoadPreset from '../modals/save_&_load_presets/LoadPreset';\r\nimport SavePreset from '../modals/save_&_load_presets/SavePreset';\r\n\r\n//Logic\r\nimport Caesar from '../encryption_methods/caesar/caesar-logic';\r\nimport Affine from '../encryption_methods/affine/affine-logic';\r\nimport Nihilist from '../encryption_methods/nihilist/nihilist-logic';\r\nimport Vigenere from '../encryption_methods/vigenere/vigenere-logic';\r\nimport Playfair from '../encryption_methods/playfair/playfair-logic';\r\nimport Morse from '../encryption_methods/morse/morse-logic';\r\nimport Replace from '../encryption_methods/replace/replace-logic';\r\nimport Skytale from '../encryption_methods/skytale/skytale-logic';\r\nimport Atbash from '../encryption_methods/atbash/atbash-logic';\r\nimport Rsa from '../encryption_methods/rsa/rsa-logic';\r\nimport Reverse from '../encryption_methods/reverse/reverse-logic';\r\nimport CaseTransform from '../encryption_methods/caseTransform/case-transform-logic';\r\nimport Substitute from '../encryption_methods/substitutionAlphabet/substitution-logic';\r\nimport Trifid from '../encryption_methods/trifid/trifid-logic';\r\nimport Otp from '../encryption_methods/onetimepad/otp-logic';\r\n\r\n// Actions\r\nimport setWordbook from '../../actions/wordbook';\r\nimport setOutput from '../../actions/setOutput';\r\nimport { updateAlphabet, setAlphabetActive } from '../../actions/alphabet';\r\nimport { setPlaysquare } from '../../actions/playfair';\r\nimport { setSkytaleLength } from '../../actions/skytale';\r\nimport {\r\n  setRsaPhi,\r\n  setRsaN,\r\n  setRsaD,\r\n  setTimeToCalculate,\r\n} from '../../actions/rsa';\r\nimport {\r\n  setNihilistSquare,\r\n  setNihilistRunningKey,\r\n  setNihilistPlainNumbers,\r\n} from '../../actions/nihilist';\r\nimport { setTrifidLayers, setTrifidGroups } from '../../actions/trifid';\r\n\r\n// Modals\r\nimport AnalysisModal from '../modals/add_analysis_method';\r\n\r\nconst Modal = React.lazy(() => import('../modals/choose_encryption_method'));\r\n\r\nclass Main extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.encrypt = this.encrypt.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Encrypt directly when the component is renderd.\r\n   * Get the english dictionary from github.\r\n   */\r\n  componentDidMount() {\r\n    this.encrypt();\r\n    if (this.props.wordbook === null) {\r\n      this.props.setWordbook();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    /**\r\n     * In some cases the alphabet is editable.\r\n     * It needs to be reset for the other methods\r\n     * to work. Also sets the status of the alphabet\r\n     * editability.\r\n     */\r\n    if (prevProps.method !== this.props.method) {\r\n      this.props.updateAlphabet('abcdefghijklmnopqrstuvwxyz');\r\n      if (this.props.method === 'caesar' || this.props.method === 'rot13') {\r\n        this.props.setAlphabetActive(true);\r\n      } else {\r\n        this.props.setAlphabetActive(false);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * If props update recalculate.\r\n     */\r\n\r\n    if (this.props.timeToCalculate !== prevProps.timeToCalculate) return;\r\n    else this.encrypt();\r\n  }\r\n\r\n  /**\r\n   * The method uses pre-defined encryption props wich\r\n   * return the right props for the belonging method.\r\n   */\r\n  encrypt() {\r\n    const { method } = this.props;\r\n\r\n    let encrypted;\r\n\r\n    switch (method) {\r\n      case 'trifid':\r\n        encrypted = Trifid.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted[0]);\r\n        this.props.setTrifidLayers(encrypted[1]);\r\n        this.props.setTrifidGroups(encrypted[2]);\r\n        break;\r\n      case 'substitution':\r\n        encrypted = Substitute.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted);\r\n        break;\r\n      case 'rot13':\r\n        encrypted = Caesar.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted);\r\n        break;\r\n      case 'caesar':\r\n        encrypted = Caesar.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted);\r\n        break;\r\n      case 'rsa':\r\n        encrypted = Rsa.calc(...encryptionProps(this.props));\r\n        if (encrypted === undefined || encrypted[0] === undefined) return '';\r\n        this.props.setTimeToCalculate(encrypted[1]);\r\n        this.props.setOutput(encrypted[0]);\r\n        this.props.setRsaPhi(encrypted[2]);\r\n        this.props.setRsaD(encrypted[3]);\r\n        this.props.setRsaN(encrypted[4]);\r\n        break;\r\n      case 'otp':\r\n        encrypted = Otp.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted);\r\n        break;\r\n      case 'reverse':\r\n        encrypted = Reverse.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted);\r\n        break;\r\n      case 'casetransform':\r\n        encrypted = CaseTransform.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted);\r\n        break;\r\n      case 'atbash':\r\n        encrypted = Atbash.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted);\r\n        break;\r\n      case 'affine':\r\n        encrypted = Affine.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted);\r\n        break;\r\n      case 'vigenere':\r\n        encrypted = Vigenere.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted);\r\n        break;\r\n      case 'playfair':\r\n        encrypted = Playfair.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted[0]);\r\n        this.props.setPlaysquare(encrypted[1]);\r\n        break;\r\n      case 'morse':\r\n        encrypted = Morse.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted);\r\n        break;\r\n      case 'replace':\r\n        encrypted = Replace.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted);\r\n        break;\r\n      case 'nihilist':\r\n        encrypted = Nihilist.encrypt(...encryptionProps(this.props));\r\n        if (typeof encrypted === 'string') {\r\n          this.props.setOutput(encrypted);\r\n          return;\r\n        }\r\n        this.props.setOutput(encrypted[0]);\r\n        this.props.setNihilistSquare(encrypted[1]);\r\n        this.props.setNihilistRunningKey(encrypted[2]);\r\n        this.props.setNihilistPlainNumbers(encrypted[3]);\r\n        break;\r\n      case 'skytale':\r\n        encrypted = Skytale.encrypt(...encryptionProps(this.props));\r\n        this.props.setOutput(encrypted[0]);\r\n        this.props.setSkytaleLength(encrypted[1]);\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='main'>\r\n        <Timeline />\r\n        <div className='block-container'>\r\n          <Input />\r\n          <BlockConnector sign={'+'} />\r\n          <BlockSettings />\r\n          <BlockConnector sign={'='} />\r\n          <Output />\r\n        </div>\r\n        <Suspense fallback={<div>...Loading</div>}>\r\n          <Modal />\r\n        </Suspense>\r\n        <LoadPreset />\r\n        <SavePreset />\r\n        <AnalysisModal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  toReplaceLetter: state.replace.toReplaceLetter,\r\n  replaceLetter: state.replace.replaceLetter,\r\n  wordbook: state.wordbook,\r\n  cShift: state.cShift,\r\n  direction: state.direction,\r\n  input: state.input,\r\n  method: state.method,\r\n  foreignChars: state.foreignChars,\r\n  caseformat: state.caseformat,\r\n  alphabet: state.alphabet.alphabet,\r\n  output: state.output,\r\n  prime1: state.rsa.prime1,\r\n  prime2: state.rsa.prime2,\r\n  phi: state.rsa.phi,\r\n  n: state.rsa.n,\r\n  d: state.rsa.d,\r\n  e: state.rsa.e,\r\n  alphabetActive: state.alphabet.active,\r\n  keywordVigenere: state.keywordVigenere,\r\n  keywordPlayfair: state.playfair.keywordPlayfair,\r\n  affine_alpha: state.affine.affine_alpha,\r\n  affine_beta: state.affine.affine_beta,\r\n  otpKey: state.otpKey,\r\n  playSquare: state.playSquare,\r\n  ringLength: state.skytale.ringLength,\r\n  skytaleLength: state.skytale.length,\r\n  timeToCalculate: state.rsa.timeToCalculate,\r\n  caseTransformChoice: state.caseTransformChoice,\r\n  keywordNihilist: state.nihilist.keywordNihilist,\r\n  cipherNihilist: state.nihilist.cipherNihilist,\r\n  substitutionAlphabet: state.substitutionAlphabet,\r\n  trifidKey: state.trifid.trifidKey,\r\n  trifid27thLetter: state.trifid.trifid27thLetter,\r\n  trifidGroupSize: state.trifid.trifidGroupSize,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  setWordbook,\r\n  setOutput,\r\n  updateAlphabet,\r\n  setPlaysquare,\r\n  setSkytaleLength,\r\n  setTimeToCalculate,\r\n  setRsaPhi,\r\n  setRsaN,\r\n  setRsaD,\r\n  setAlphabetActive,\r\n  setNihilistSquare,\r\n  setNihilistRunningKey,\r\n  setNihilistPlainNumbers,\r\n  setTrifidLayers,\r\n  setTrifidGroups,\r\n};\r\n\r\nMain.propTypes = {\r\n  setWordbook: PropTypes.func.isRequired,\r\n  setOutput: PropTypes.func.isRequired,\r\n  updateAlphabet: PropTypes.func.isRequired,\r\n  setPlaysquare: PropTypes.func.isRequired,\r\n  setSkytaleLength: PropTypes.func.isRequired,\r\n  setTimeToCalculate: PropTypes.func.isRequired,\r\n  setRsaPhi: PropTypes.func.isRequired,\r\n  setRsaN: PropTypes.func.isRequired,\r\n  setRsaD: PropTypes.func.isRequired,\r\n  setAlphabetActive: PropTypes.func.isRequired,\r\n  setNihilistSquare: PropTypes.func.isRequired,\r\n  setNihilistRunningKey: PropTypes.func.isRequired,\r\n  setNihilistPlainNumbers: PropTypes.func.isRequired,\r\n  setTrifidLayers: PropTypes.func.isRequired,\r\n  setTrifidGroups: PropTypes.func.isRequired,\r\n  toReplaceLetter: PropTypes.string.isRequired,\r\n  replaceLetter: PropTypes.string.isRequired,\r\n  wordbook: PropTypes.object,\r\n  cShift: PropTypes.number.isRequired,\r\n  direction: PropTypes.string.isRequired,\r\n  input: PropTypes.string.isRequired,\r\n  method: PropTypes.string.isRequired,\r\n  foreignChars: PropTypes.string.isRequired,\r\n  caseformat: PropTypes.string.isRequired,\r\n  alphabet: PropTypes.string.isRequired,\r\n  output: PropTypes.string.isRequired,\r\n  prime1: PropTypes.string.isRequired,\r\n  prime2: PropTypes.string.isRequired,\r\n  alphabetActive: PropTypes.bool.isRequired,\r\n  keywordVigenere: PropTypes.string.isRequired,\r\n  keywordPlayfair: PropTypes.string.isRequired,\r\n  affine_alpha: PropTypes.number.isRequired,\r\n  affine_beta: PropTypes.number.isRequired,\r\n  otpKey: PropTypes.string.isRequired,\r\n  playSquare: PropTypes.arrayOf(PropTypes.string),\r\n  ringLength: PropTypes.number.isRequired,\r\n  skytaleLength: PropTypes.number.isRequired,\r\n  timeToCalculate: PropTypes.string,\r\n  phi: PropTypes.string,\r\n  n: PropTypes.string,\r\n  d: PropTypes.string,\r\n  e: PropTypes.string.isRequired,\r\n  caseTransformChoice: PropTypes.string.isRequired,\r\n  keywordNihilist: PropTypes.string.isRequired,\r\n  cipherNihilist: PropTypes.string.isRequired,\r\n  substitutionAlphabet: PropTypes.object.isRequired,\r\n  trifidKey: PropTypes.string.isRequired,\r\n  trifid27thLetter: PropTypes.string.isRequired,\r\n  trifidGroupSize: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Main);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const HeaderStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  MenuIcon: { fontSize: '2.5rem' },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    position: 'fixed',\r\n    backgroundColor: '#398adb !important',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    fontSize: '4rem',\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  itemWrapper: {\r\n    fontSize: '1rem',\r\n    marginRight: '1.5rem',\r\n  },\r\n  itemWrapperRight: {\r\n    fontSize: '1rem',\r\n    marginRight: '5rem',\r\n  },\r\n  itemMobile: {\r\n    color: 'black',\r\n    textDecoration: 'none',\r\n  },\r\n  link: {\r\n    letterSpacing: '0.075rem',\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n  titleWrapper: {\r\n    marginRight: 'auto',\r\n  },\r\n}));\r\n","import { SET_ALERT, REMOVE_ALERT } from './constants';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const setAlert = (msg, alertType) => (dispatch) => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000);\r\n};\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from './constants';\r\nimport { setAlert } from './alert';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n//Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = JSON.stringify({ name, email, password });\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    console.log(error);\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      console.log(error.msg);\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    if (error.response) {\r\n      const errors = error.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//Logout User /clear profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_PROFILE,\r\n  });\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport { logout } from '../../actions/authenticate';\r\n\r\n//Assets\r\nimport { HeaderStyles } from './HeaderStyles';\r\n\r\n//MUI\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst AuthLinksDesktop = (props) => {\r\n  const classes = HeaderStyles();\r\n  return (\r\n    <div className='menue-items'>\r\n      <Typography variant='body1' noWrap className={classes.itemWrapper}>\r\n        <Link className={classes.link} to='#!' onClick={props.logout}>\r\n          Logout\r\n        </Link>\r\n      </Typography>\r\n      <Typography variant='body1' noWrap className={classes.itemWrapper}>\r\n        <Link className={classes.link} to='/Profile'>\r\n          Profile\r\n        </Link>\r\n      </Typography>\r\n      <Typography variant='body1' noWrap className={classes.itemWrapperRight}>\r\n        <Link className={classes.link} to='/About'>\r\n          About\r\n        </Link>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  logout: logout,\r\n};\r\n\r\nAuthLinksDesktop.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(AuthLinksDesktop);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Assets\r\nimport { HeaderStyles } from './HeaderStyles';\r\n\r\n//MUI\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst GuestLinksDesktop = (props) => {\r\n  const classes = HeaderStyles();\r\n  return (\r\n    <div className='menue-items'>\r\n      <Typography variant='body1' noWrap className={classes.itemWrapper}>\r\n        <Link className={classes.link} to='/Login'>\r\n          Login\r\n        </Link>\r\n      </Typography>\r\n      <Typography variant='body1' noWrap className={classes.itemWrapper}>\r\n        <Link className={classes.link} to='/Signup'>\r\n          Signup\r\n        </Link>\r\n      </Typography>\r\n      <Typography variant='body1' noWrap className={classes.itemWrapperRight}>\r\n        <Link className={classes.link} to='/About'>\r\n          About\r\n        </Link>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuestLinksDesktop;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport { logout } from '../../actions/authenticate';\r\n\r\n//Assets\r\nimport { HeaderStyles } from './HeaderStyles';\r\n\r\n//MUI\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst AuthLinksMobile = (props) => {\r\n  const classes = HeaderStyles();\r\n\r\n  const [drawerOpen, setDrawer] = useState(false);\r\n\r\n  const toggleDrawer = () => {\r\n    setDrawer(!drawerOpen);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <List onClick={toggleDrawer}>\r\n        <Link to='/'>\r\n          <ListItem button className={classes.itemMobile}>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Home' />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to='#!' onClick={props.logout}>\r\n          <ListItem button className={classes.itemMobile}>\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Logout' />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to='/Profile'>\r\n          <ListItem button className={classes.itemMobile}>\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Profile' />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to='/About'>\r\n          <ListItem button className={classes.itemMobile}>\r\n            <ListItemIcon>\r\n              <InfoIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='About' />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  logout: logout,\r\n};\r\n\r\nAuthLinksMobile.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(AuthLinksMobile);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Assets\r\nimport { HeaderStyles } from './HeaderStyles';\r\n\r\n//MUI\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst GuestLinksMobile = () => {\r\n  const classes = HeaderStyles();\r\n\r\n  const [drawerOpen, setDrawer] = useState(false);\r\n\r\n  const toggleDrawer = () => {\r\n    setDrawer(!drawerOpen);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <List onClick={toggleDrawer}>\r\n        <Link to='/'>\r\n          <ListItem button className={classes.itemMobile}>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Home' />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to='/Login'>\r\n          <ListItem button className={classes.itemMobile}>\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Login' />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to='/Signup'>\r\n          <ListItem button className={classes.itemMobile}>\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Signup' />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to='/About'>\r\n          <ListItem button className={classes.itemMobile}>\r\n            <ListItemIcon>\r\n              <InfoIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='About' />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GuestLinksMobile;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst HideElementOnScroll = () => {\r\n  const [hide, setHide] = useState(false);\r\n\r\n  const handleScroll = () => {\r\n    const top = window.pageYOffset || document.documentElement.scrollTop;\r\n    setHide(top >= 80);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return hide;\r\n};\r\n\r\nexport default HideElementOnScroll;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ResizeObserver from 'react-resize-observer';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Assets\r\nimport './header.scss';\r\nimport logo from './img/key.png';\r\nimport { HeaderStyles } from './HeaderStyles';\r\n\r\n// Components\r\nimport AuthLinksDesktop from './AuthLinksDesktop';\r\nimport GuestLinksDesktop from './GuestLinksDesktop';\r\nimport AuthLinksMobile from './AuthLinksMobile';\r\nimport GuestLinksMobile from './GuestLinksMobile';\r\n\r\n//Actions\r\nimport { logout } from '../../actions/authenticate';\r\n\r\n//Helper\r\nimport HideElementOnScroll from '../hideOnScroll';\r\n\r\n//MUI\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nconst Header = (props) => {\r\n  let [height, updateHeight] = useState();\r\n  let [width, updateWidth] = useState();\r\n  const [drawerOpen, setDrawer] = useState(false);\r\n\r\n  /**\r\n   * Toggles the mobile menue on the app-bar.\r\n   */\r\n  const toggleDrawer = () => {\r\n    setDrawer(!drawerOpen);\r\n  };\r\n\r\n  const classes = HeaderStyles();\r\n\r\n  const iconMenue = (\r\n    <IconButton\r\n      color='inherit'\r\n      aria-label='open drawer'\r\n      onClick={toggleDrawer}\r\n      edge='start'\r\n      className={`${classes.menuButton} ${drawerOpen && classes.hide}`}\r\n    >\r\n      <MenuIcon className={classes.MenuIcon} />\r\n    </IconButton>\r\n  );\r\n\r\n  const menueItems = () => {\r\n    if (width > 700) {\r\n      return (\r\n        !props.auth.loading && (\r\n          <Fragment>\r\n            {props.auth.isAuthenticated ? (\r\n              <AuthLinksDesktop />\r\n            ) : (\r\n              <GuestLinksDesktop />\r\n            )}\r\n          </Fragment>\r\n        )\r\n      );\r\n    } else {\r\n      return iconMenue;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        !HideElementOnScroll() &&\r\n        !props.savePresetModal &&\r\n        !props.loadPresetModal &&\r\n        !props.analysisModal &&\r\n        !props.modalOpen\r\n          ? 'nav-normal'\r\n          : 'nav-hidden'\r\n      }\r\n    >\r\n      <div className='header-margin' style={{ height: `${height}px` }}></div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar className={classes.appBar}>\r\n          <ResizeObserver\r\n            onResize={(rect) => {\r\n              updateHeight(rect.height);\r\n              updateWidth(rect.width);\r\n            }}\r\n          />\r\n          <Toolbar>\r\n            <Typography className={classes.titleWrapper} variant='h6' noWrap>\r\n              <div className='site-title'>\r\n                <Link to={'/'}>cryptx</Link>\r\n                <Link to={'/'}>\r\n                  <img\r\n                    src={logo}\r\n                    className='site-title__image'\r\n                    alt='logo'\r\n                  ></img>\r\n                </Link>\r\n              </div>\r\n            </Typography>\r\n            {menueItems()}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='persistent'\r\n          anchor='right'\r\n          open={drawerOpen}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={toggleDrawer}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List onClick={toggleDrawer}>\r\n            {!props.auth.loading && (\r\n              <Fragment>\r\n                {props.auth.isAuthenticated ? (\r\n                  <AuthLinksMobile />\r\n                ) : (\r\n                  <GuestLinksMobile />\r\n                )}\r\n              </Fragment>\r\n            )}\r\n          </List>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  savePresetModal: state.savePresetModal,\r\n  loadPresetModal: state.loadPresetModal,\r\n  analysisModal: state.analysisModal,\r\n  modalOpen: state.modal,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  logout: logout,\r\n};\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Header);\r\n","import React from 'react';\r\n\r\n//MUI\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\n//Assets\r\nimport './footer.scss';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='site-footer'>\r\n      <div className='site-footer__links'>\r\n        <a\r\n          href='https://github.com/alexander-braun/cryptx'\r\n          target='blank'\r\n          className='site-footer__icon'\r\n        >\r\n          <GitHubIcon />\r\n        </a>\r\n        &copy; 2020 Alexander Braun\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const SignupStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    color: '#e1e1e1',\r\n    borderColor: 'white',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: '#e1e1e1',\r\n    borderColor: 'white',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    color: '#e1e1e1',\r\n    borderColor: 'white',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color: '#e1e1e1',\r\n    borderColor: 'white',\r\n  },\r\n  link: {\r\n    color: '#4ab2eec0',\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n//Assets\r\nimport './alert.scss';\r\n\r\nconst Alert = (props) =>\r\n  props.alerts.length > 0 &&\r\n  props.alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//MUI\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport const Copyright = () => {\r\n  return (\r\n    <Typography variant='body2' color='textSecondary' align='center'>\r\n      {'Copyright © '}\r\n      <Link\r\n        style={{ color: '#4ab2eec0' }}\r\n        to='https://alexander-braun.github.io/strngcrypt/'\r\n      >\r\n        CryptX\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const SvgBottom = () => {\r\n  return (\r\n    <svg\r\n      id='curveUpColor'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      version='1.1'\r\n      width='100%'\r\n      height='100'\r\n      viewBox='0 0 100 100'\r\n      preserveAspectRatio='none'\r\n    >\r\n      <defs>\r\n        <linearGradient id='grad1' x1='0%' y1='0%' x2='100%' y2='0%'>\r\n          <stop\r\n            offset='0%'\r\n            style={{ stopColor: 'rgb(13, 78, 115)', stopOpacity: '1' }}\r\n          />\r\n          <stop\r\n            offset='100%'\r\n            style={{ stopColor: 'rgb(23, 114, 167)', stopOpacity: '1' }}\r\n          />\r\n        </linearGradient>\r\n      </defs>\r\n      <path d='M0 100 C 20 0 50 0 100 100 Z' fill='url(#grad1)'></path>\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const SvgTop = () => {\r\n  return (\r\n    <svg\r\n      fill='rgb(23, 114, 167)'\r\n      id='curveDownColor'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      version='1.1'\r\n      width='100%'\r\n      height='15vh'\r\n      viewBox='0 0 100 100'\r\n      preserveAspectRatio='none'\r\n    >\r\n      <linearGradient id='grad2' x1='0%' y1='0%' x2='100%' y2='0%'>\r\n        <stop\r\n          offset='0%'\r\n          style={{ stopColor: 'rgb(13, 78, 115)', stopOpacity: '1' }}\r\n        />\r\n        <stop\r\n          offset='100%'\r\n          style={{ stopColor: 'rgb(23, 114, 167)', stopOpacity: '1' }}\r\n        />\r\n      </linearGradient>\r\n      <path d='M0 0 C 50 100 80 100 100 0 Z' fill='url(#grad2)'></path>\r\n    </svg>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Assets\r\nimport '../login_signup.scss';\r\nimport { SignupStyles } from './SignupStyles';\r\n\r\n//Components\r\nimport { setAlert } from '../../../actions/alert';\r\nimport Alert from '../../alert';\r\nimport { Copyright } from '../Copyright';\r\nimport { SvgBottom } from '../SvgBottom';\r\nimport { SvgTop } from '../SvgTop';\r\n\r\n//Actions\r\nimport { register } from '../../../actions/authenticate';\r\n\r\n//MUI\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst SignIn = (props) => {\r\n  /**\r\n   * Exported styles for MUI\r\n   */\r\n  const classes = SignupStyles();\r\n\r\n  /**\r\n   * Signup Data\r\n   */\r\n  const [formData, updateFormdata] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { name, email, password } = formData;\r\n\r\n  /**\r\n   * Set name, email, password in state\r\n   */\r\n  const onChange = (e) =>\r\n    updateFormdata({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  /**\r\n   * Try signup action\r\n   */\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    props.register({ name, email, password });\r\n  };\r\n\r\n  /**\r\n   * Send user to landing page after\r\n   * authentification\r\n   */\r\n  if (props.isAuthenticated) {\r\n    window.location.href = '/';\r\n  }\r\n\r\n  return (\r\n    <div className='signup-section'>\r\n      <SvgTop />\r\n      <Alert />\r\n      <div className='signup-section__form'>\r\n        <Container component='main' maxWidth='xs'>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component='h1' variant='h5'>\r\n              Sign up\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    label='Name'\r\n                    name='name'\r\n                    autoComplete='name'\r\n                    value={name}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    label='Email Address'\r\n                    name='email'\r\n                    autoComplete='email'\r\n                    value={email}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    name='password'\r\n                    label='Password'\r\n                    type='password'\r\n                    autoComplete='current-password'\r\n                    value={password}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox value='allowExtraEmails' color='primary' />\r\n                    }\r\n                    label='Tell me, when new encryption algorithms or cryptoanalysis tools available!'\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type='submit'\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n                className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justify='flex-end'>\r\n                <Grid item>\r\n                  <Link\r\n                    to={process.env.PUBLIC_URL + '/login'}\r\n                    className={classes.link}\r\n                    variant='body2'\r\n                  >\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={5}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </div>\r\n      <SvgBottom />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  setAlert: setAlert,\r\n  register: register,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nSignIn.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(SignIn);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const LoginStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    color: '#ffffff',\r\n    borderColor: '#ffffff',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    color: '#4ab2eec0',\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Assets\r\nimport '../login_signup.scss';\r\n\r\n//Actions\r\nimport { login } from '../../../actions/authenticate';\r\n\r\n//Components\r\nimport Alert from '../../alert';\r\nimport { SvgTop } from '../SvgTop';\r\nimport { SvgBottom } from '../SvgBottom';\r\nimport { Copyright } from '../Copyright';\r\n\r\n//MUI\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { LoginStyles } from './LoginStyles';\r\n\r\nconst Login = (props) => {\r\n  /**\r\n   * Exported styles for MUI\r\n   */\r\n  const classes = LoginStyles();\r\n\r\n  /**\r\n   * Login Data\r\n   */\r\n  const [formData, updateFormdata] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  /**\r\n   * Set email, password in state\r\n   */\r\n  const onChange = (e) =>\r\n    updateFormdata({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  /**\r\n   * Try login action\r\n   */\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    props.login(email, password);\r\n  };\r\n\r\n  /**\r\n   * Send user to landing page after\r\n   * authentification\r\n   */\r\n  if (props.isAuthenticated) {\r\n    window.location.href = '/';\r\n  }\r\n\r\n  return (\r\n    <div className='login-section'>\r\n      <SvgTop />\r\n      <Alert />\r\n      <div className='login-section__form'>\r\n        <Container component='main' maxWidth='xs'>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component='h1' variant='h5'>\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\r\n              <TextField\r\n                className={classes.form}\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                label='Email'\r\n                name='email'\r\n                autoComplete='email'\r\n                value={email}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                name='password'\r\n                label='Password'\r\n                type='password'\r\n                autoComplete='current-password'\r\n                value={password}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value='remember' color='primary' />}\r\n                label='Remember me'\r\n              />\r\n              <Button\r\n                type='submit'\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link to='#' variant='body2' className={classes.link}>\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    to={process.env.PUBLIC_URL + '/signup'}\r\n                    className={classes.link}\r\n                    variant='body2'\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={8}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </div>\r\n      <SvgBottom />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  login: login,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Login);\r\n","import React from 'react';\r\n\r\n//Assets\r\nimport './about.scss';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className='about'>\r\n      <div className='about-content'>\r\n        <h1 className='about-content__app-title'>Cryptx</h1>\r\n        <p className='about-content__paragraph'>... started in 2020.</p>\r\n        <p className='about-content__paragraph about-content__paragraph--inline'>\r\n          The project was created by&nbsp;\r\n        </p>\r\n        <a\r\n          rel='noopener noreferrer'\r\n          target='_blank'\r\n          href='https://github.com/alexander-braun/cryptx'\r\n          className='about-content__link'\r\n        >\r\n          Alexander Braun.\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Fragment } from 'react';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <svg\r\n      style={{\r\n        margin: 'auto',\r\n        background: 'transparent',\r\n        display: 'block',\r\n        shapeRendering: 'auto',\r\n        width: '200px',\r\n        height: '200px',\r\n      }}\r\n      viewBox='0 0 100 100'\r\n      preserveAspectRatio='xMidYMid'\r\n    >\r\n      <path\r\n        fill='none'\r\n        stroke='#ff586e'\r\n        stroke-width='5'\r\n        strokeDasharray='42.76482137044271 42.76482137044271'\r\n        d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z'\r\n        stroke-linecap='round'\r\n        style={{ transform: 'scale(1)', transformOrigin: '50px 50px' }}\r\n      >\r\n        <animate\r\n          attributeName='stroke-dashoffset'\r\n          repeatCount='indefinite'\r\n          dur='2s'\r\n          keyTimes='0;1'\r\n          values='0;256.58892822265625'\r\n        ></animate>\r\n      </path>\r\n    </svg>\r\n  </Fragment>\r\n);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n//Components\r\nimport Spinner from '../spinner/Spinner';\r\n\r\n//Assets\r\nimport './userprofile.scss';\r\n\r\n//Actions\r\nimport { logout } from '../../actions/authenticate';\r\nimport { addPreset } from '../../actions/presets';\r\nimport { deleteCurrentProfile } from '../../actions/profiles';\r\nimport { getCurrentProfile } from '../../actions/profiles';\r\n\r\nconst Profile = (props) => {\r\n  useEffect(() => {\r\n    props.getCurrentProfile();\r\n  }, [props]);\r\n\r\n  return props.profile.loading && props.profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className='profile-wrapper'>\r\n        <div className='profile-wrapper__card'>\r\n          <h1>Welcome {props.auth.user && props.auth.user.name}!</h1>\r\n          <img\r\n            alt='userimage'\r\n            src={!props.auth.loading ? props.auth.user.avatar : null}\r\n            className='profile-wrapper__user-img'\r\n          ></img>\r\n          <h2 className='profile-wrapper__access-text'>\r\n            You have full access <br></br> to all features of cryptx.<br></br>\r\n          </h2>\r\n          <button\r\n            className='profile-wrapper__delete-profile'\r\n            onClick={() => {\r\n              props.logout();\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n          <button\r\n            className='profile-wrapper__delete-profile'\r\n            onClick={() => {\r\n              props.deleteCurrentProfile();\r\n              props.logout();\r\n            }}\r\n          >\r\n            Delete Profile\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  getCurrentProfile,\r\n  addPreset,\r\n  deleteCurrentProfile,\r\n  logout,\r\n};\r\n\r\nProfile.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  addPreset: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Profile);\r\n","import axios from 'axios';\r\nimport { GET_PROFILE, PROFILE_ERROR, DELETE_PROFILE } from './constants';\r\n\r\n//Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('./api/profile/');\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete('./api/profile/');\r\n    dispatch({\r\n      type: DELETE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n//Redux store\r\nimport store from '../store';\r\n\r\n//Components\r\nimport Main from './main';\r\nimport Header from './header/Header';\r\nimport Footer from './footer/Footer';\r\nimport Signup from './login_signup/signup';\r\nimport Login from './login_signup/login';\r\nimport About from './about';\r\nimport Profile from './userprofile';\r\nimport PrivateRoute from './routing/PrivateRoute';\r\n\r\n//Actions\r\nimport { loadUser } from '../actions/authenticate';\r\nimport { loadPresets } from '../actions/presets';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n    store.dispatch(loadPresets());\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router basename='/'>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path={`/`} render={() => <Main />} />\r\n          <Route exact path={`/signup`} component={Signup} />\r\n          <Route exact path={`/login`} component={Login} />\r\n          <Route exact path={`/about`} component={About} />\r\n          <PrivateRoute exact path={`/Profile`} component={Profile} />\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport 'core-js/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n//Assets\nimport './style.scss';\n\n//Components\nimport App from './components/App';\n\nif (process.env.NODE_ENV !== 'production') {\n  const { whyDidYouUpdate } = require('why-did-you-update');\n  whyDidYouUpdate(React);\n}\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","export const EncryptionMethodsDetails = {\r\n  atbash: {\r\n    year: '600 B.C.',\r\n    crack: false,\r\n    timeline: true,\r\n    timelineIdx: 0,\r\n    display: 'Atbash',\r\n    name: 'atbash',\r\n    fullName: 'Atbash Cipher',\r\n    category: 'Ciphers',\r\n  },\r\n  skytale: {\r\n    year: '300 B.C.',\r\n    crack: false,\r\n    timeline: true,\r\n    timelineIdx: 1,\r\n    display: 'Skytale',\r\n    name: 'skytale',\r\n    fullName: 'Skytale',\r\n    category: 'Ciphers',\r\n  },\r\n  caesar: {\r\n    year: '100 B.C. - 44 B.C.',\r\n    crack: true,\r\n    timeline: true,\r\n    timelineIdx: 2,\r\n    display: \"Caesar's\",\r\n    name: 'caesar',\r\n    fullName: 'Caesars Cipher',\r\n    category: 'Ciphers',\r\n  },\r\n  vigenere: {\r\n    year: '1553',\r\n    crack: false,\r\n    timeline: true,\r\n    timelineIdx: 3,\r\n    display: 'Vigenère',\r\n    name: 'vigenere',\r\n    fullName: 'Vigenère Cipher',\r\n    category: 'Polyalphabetic Ciphers',\r\n  },\r\n  morse: {\r\n    year: '1837',\r\n    crack: false,\r\n    timeline: true,\r\n    timelineIdx: 4,\r\n    display: 'Morse Code',\r\n    name: 'morse',\r\n    fullName: 'Morse Code',\r\n    category: 'Alphabets',\r\n  },\r\n  playfair: {\r\n    year: '1854',\r\n    crack: false,\r\n    timeline: true,\r\n    timelineIdx: 5,\r\n    display: 'Playfair',\r\n    name: 'playfair',\r\n    fullName: 'Playfair Cipher',\r\n    category: 'Ciphers',\r\n  },\r\n  nihilist: {\r\n    year: '1880',\r\n    crack: false,\r\n    timeline: true,\r\n    timelineIdx: 6,\r\n    display: 'Nihilist',\r\n    name: 'nihilist',\r\n    fullName: 'Nihilist Cipher',\r\n    category: 'Polybius Square Ciphers',\r\n  },\r\n  otp: {\r\n    year: '1882',\r\n    crack: false,\r\n    timeline: true,\r\n    timelineIdx: 7,\r\n    display: 'OTP',\r\n    name: 'otp',\r\n    fullName: 'One Time Pad',\r\n    category: 'Ciphers',\r\n  },\r\n  trifid: {\r\n    year: '1902',\r\n    crack: false,\r\n    timeline: true,\r\n    timelineIdx: 8,\r\n    display: 'Trifid',\r\n    name: 'trifid',\r\n    fullName: 'Trifid Cipher',\r\n    category: 'Polybius Square Ciphers',\r\n  },\r\n  rsa: {\r\n    year: '1977',\r\n    crack: false,\r\n    timeline: true,\r\n    timelineIdx: 9,\r\n    display: 'RSA',\r\n    name: 'rsa',\r\n    fullName: 'Rivest-Shamir-Adleman Cryptosystem',\r\n    category: 'Public Key Encryption',\r\n  },\r\n  affine: {\r\n    year: false,\r\n    crack: false,\r\n    timeline: false,\r\n    timelineIdx: -1,\r\n    display: 'Affine',\r\n    name: 'affine',\r\n    fullName: 'Affine Cipher',\r\n    category: 'Ciphers',\r\n  },\r\n  rot13: {\r\n    year: false,\r\n    crack: false,\r\n    timeline: false,\r\n    timelineIdx: -1,\r\n    display: 'Rot 13',\r\n    name: 'rot13',\r\n    fullName: 'Rot 13',\r\n    category: 'Ciphers',\r\n  },\r\n  replace: {\r\n    year: false,\r\n    crack: false,\r\n    timeline: false,\r\n    timelineIdx: -1,\r\n    display: 'Replace',\r\n    name: 'replace',\r\n    fullName: 'Replace',\r\n    category: 'Text Transformations',\r\n  },\r\n  reverse: {\r\n    year: false,\r\n    crack: false,\r\n    timeline: false,\r\n    timelineIdx: -1,\r\n    display: 'Reverse',\r\n    name: 'reverse',\r\n    fullName: 'Reverse',\r\n    category: 'Text Transformations',\r\n  },\r\n  casetransform: {\r\n    year: false,\r\n    crack: false,\r\n    timeline: false,\r\n    timelineIdx: -1,\r\n    display: 'Case',\r\n    name: 'casetransform',\r\n    fullName: 'Case Transforms',\r\n    category: 'Text Transformations',\r\n  },\r\n  substitution: {\r\n    year: false,\r\n    crack: false,\r\n    timeline: false,\r\n    timelineIdx: -1,\r\n    display: 'Substitution',\r\n    name: 'substitution',\r\n    fullName: 'Substitution Cipher',\r\n    category: 'Ciphers',\r\n  },\r\n};\r\n"],"sourceRoot":""}