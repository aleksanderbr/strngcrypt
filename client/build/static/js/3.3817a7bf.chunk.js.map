{"version":3,"sources":["components/modals/choose_encryption_method/MethodChoiceButton.js","components/modals/choose_encryption_method/index.js"],"names":["mapActionsToProps","changeMethod","toggleModal","connect","props","className","onClick","e","preventDefault","name","featured","fullName","state","modalOpen","modal","method","options","target","toggleModalOuterClick","map","option","key","uuidv4","Object","keys","EncryptionMethodsDetails","category","timeline"],"mappings":"iMAkCMA,EAAoB,CACxBC,aAAcA,IACdC,YAAaA,KAWAC,cAAQ,KAAMH,EAAdG,EAvCY,SAACC,GAC1B,OACE,wBAAIC,UAAU,0CACZ,4BACEA,UAAU,2BACVC,QAAS,SAACC,GACRA,EAAEC,iBACFJ,EAAMF,cACNE,EAAMH,aAAaG,EAAMK,QAG3B,yBAAKJ,UAAU,yBACb,yBACEA,UACED,EAAMM,SAAW,uBAAyB,0BAG3CN,EAAMM,SAAW,IAAM,KAE1B,yBAAKL,UAAU,oBAAoBD,EAAMO,gBCkF7CX,EAAoB,CACxBE,YAAaA,IACbD,aAAcA,KAUDE,uBAjBS,SAACS,GAAD,MAAY,CAClCC,UAAWD,EAAME,MACjBC,OAAQH,EAAMG,UAewBf,EAAzBG,EAxGD,SAACC,GAKb,IAWMY,EAAU,CACd,UACA,YACA,0BACA,yBACA,wBACA,wBA8BF,OAAIZ,EAAMS,UAEN,yBAAKR,UAAU,gBAAgBC,QAAS,SAACC,GAAD,OAjDd,SAACA,GAC7BA,EAAEC,iBACyB,kBAAvBD,EAAEU,OAAOZ,WACXD,EAAMF,cA8CyCgB,CAAsBX,KACnE,yBAAKF,UAAU,SACb,yBAAKA,UAAU,8CAAf,qBAEE,4BAAQA,UAAU,oBAChB,kBAAC,IAAD,CAAkBC,QAAS,kBAAMF,EAAMF,mBAG3C,yBAAKG,UAAU,eAhCrBW,EAAQG,KAAI,SAACC,GACX,OACE,yBAAKf,UAAU,iBAAiBgB,IAAKC,eACnC,0BAAMjB,UAAU,yBAAyBe,GACzC,4BACGG,OAAOC,KAAKC,KAA0BN,KAAI,SAACJ,GAC1C,OACEU,IAAyBV,GAAQW,WAAaN,GAC5C,kBAAC,EAAD,CACEC,IAAKC,cACLb,KAAMgB,IAAyBV,GAAQN,KACvCC,SAAUe,IAAyBV,GAAQY,SAC3ChB,SAAUc,IAAyBV,GAAQJ,oBAqBrD,yBAAKN,UAAU,yBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,wBAAf,KADF,yBAIA,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,0BAAf,KADF,8BAKF,4BACEA,UAAU,eACVC,QAAS,kBAAMF,EAAMF,gBAFvB,YAUI","file":"static/js/3.3817a7bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Actions\r\nimport { changeMethod } from '../../../actions/changeMethod';\r\nimport { toggleModal } from '../../../actions/toggleModal';\r\n\r\nconst MethodChoiceButton = (props) => {\r\n  return (\r\n    <li className='modal__list-item modal__list-item--row'>\r\n      <button\r\n        className='modal__encryption-method'\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          props.toggleModal();\r\n          props.changeMethod(props.name);\r\n        }}\r\n      >\r\n        <div className='modal__method-wrapper'>\r\n          <div\r\n            className={\r\n              props.featured ? 'modal__featured-sign' : 'modal__unfeatured-sign'\r\n            }\r\n          >\r\n            {props.featured ? 'F' : 'N'}\r\n          </div>\r\n          <div className='modal__chip-text'>{props.fullName}</div>\r\n        </div>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  changeMethod: changeMethod,\r\n  toggleModal: toggleModal,\r\n};\r\n\r\nMethodChoiceButton.propTypes = {\r\n  changeMethod: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  featured: PropTypes.bool.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  fullName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(MethodChoiceButton);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n//Assets\r\nimport '../modal.scss';\r\nimport { EncryptionMethodsDetails } from '../../main/BlockCenter/EncryptionMethodsDetails';\r\n\r\n//Actions\r\nimport { toggleModal } from '../../../actions/toggleModal';\r\nimport { changeMethod } from '../../../actions/changeMethod';\r\n\r\n//Components\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport MethodChoiceButton from './MethodChoiceButton';\r\n\r\nconst Modal = (props) => {\r\n  /**\r\n   * Method to toggle the modal when the modal\r\n   * body is not clicked but the outside wrapper.\r\n   */\r\n  const toggleModalOuterClick = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.className === 'modal-wrapper') {\r\n      props.toggleModal();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * All available categories of encryption\r\n   * methods\r\n   */\r\n  const options = [\r\n    'Ciphers',\r\n    'Alphabets',\r\n    'Polybius Square Ciphers',\r\n    'Polyalphabetic Ciphers',\r\n    'Public Key Encryption',\r\n    'Text Transformations',\r\n  ];\r\n\r\n  /**\r\n   * Generates the body of the modal with\r\n   * all the options.\r\n   */\r\n  const generateEncryptionMethods = () =>\r\n    options.map((option) => {\r\n      return (\r\n        <div className='modal__content' key={uuidv4()}>\r\n          <span className='modal__category-title'>{option}</span>\r\n          <ul>\r\n            {Object.keys(EncryptionMethodsDetails).map((method) => {\r\n              return (\r\n                EncryptionMethodsDetails[method].category === option && (\r\n                  <MethodChoiceButton\r\n                    key={uuidv4()}\r\n                    name={EncryptionMethodsDetails[method].name}\r\n                    featured={EncryptionMethodsDetails[method].timeline}\r\n                    fullName={EncryptionMethodsDetails[method].fullName}\r\n                  />\r\n                )\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  if (props.modalOpen) {\r\n    return (\r\n      <div className='modal-wrapper' onClick={(e) => toggleModalOuterClick(e)}>\r\n        <div className='modal'>\r\n          <div className='modal__header modal__header--space-between'>\r\n            Encryption Methods\r\n            <button className='modal__close-btn'>\r\n              <HighlightOffIcon onClick={() => props.toggleModal()} />\r\n            </button>\r\n          </div>\r\n          <div className='modal__body'>{generateEncryptionMethods()}</div>\r\n          <div className='modal__bottom-wrapper'>\r\n            <div className='modal__legend'>\r\n              <div className='modal__explanation-wrapper'>\r\n                <div className='modal__featured-sign'>F</div> Featured in\r\n                Timeline\r\n              </div>\r\n              <div className='modal__explanation-wrapper'>\r\n                <div className='modal__unfeatured-sign'>N</div> Not featured in\r\n                Timeline\r\n              </div>\r\n            </div>\r\n            <button\r\n              className='modal__close'\r\n              onClick={() => props.toggleModal()}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else return null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modalOpen: state.modal,\r\n  method: state.method,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  toggleModal: toggleModal,\r\n  changeMethod: changeMethod,\r\n};\r\n\r\nModal.propTypes = {\r\n  modalOpen: PropTypes.bool.isRequired,\r\n  method: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  changeMethod: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Modal);\r\n"],"sourceRoot":""}